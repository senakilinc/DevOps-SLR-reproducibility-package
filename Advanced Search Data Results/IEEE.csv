"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"DevOps-RAF: An assessment framework to measure DevOps readiness in software organizations","L. Marrero; H. Astudillo","Universidad Técnica Federico Santa María,Departamento de Informática,Valparaíso,Chile; Universidad Técnica Federico Santa María,Departamento de Informática,Santiago,Chile","2021 40th International Conference of the Chilean Computer Science Society (SCCC)","22 Dec 2021","2021","","","1","8","DevOps is a software process that embraces agility practices on software development and delivery, requires that organization meet strict culture and tooling requirements, and has become widely used by leading software development companies, as well as Latin-American Small and Medium Enterprises (SME). Several DevOps maturity models have been proposed around CAMS (Culture, Automation, Measurement, Sharing) or variations, but they do not allow to identify capability gaps in specific organizations; and altough some have been evaluated at European and USA companies, none are LatAm SME-focused. This article describes DevOps-RAF, an assessment framework to (1) evaluate SME’s readiness to adapt and adopt DevOps practices, culture and tooling, (2) identify capability gaps, and (3) propose improvement roadmaps. DevOps-RAF exploits the notion of DevOps as Dev + CI + Ops, and recognizes four domains for them (Agile Development, Agile Operations, Continuous Integration) and the cross-cutting Culture; 17 key performance indicators (KPI); and four maturity levels (Initial, Intermediate, Advanced, and Optimized). This domain structure allows to assess both development organizations (doing Dev and Integration) and their customers (doing Integration and Ops). An initial validation of DevOps-RAF formulation and structure was carried with a survey to several DevOps Chilean industry experts; respondents suggested to retain 71% of proposed KPI’s, change 29%, and drop none. Once pilot-tested and stabilized, DevOps-RAF will allow to systematically assess and mitigate the capacity gaps that bedevil LatAm software SME’s in adopting DevOps.","2691-0632","978-1-6654-0956-8","10.1109/SCCC54552.2021.9650363","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9650363","maturity model;DevOps;capabilities assessment;software development","Industries;Computer science;Automation;Computational modeling;Key performance indicator;Europe;Companies","project management;small-to-medium enterprises;software development management;software houses;software prototyping;software quality","bedevil LatAm software SME;DevOps-RAF;assessment framework;DevOps readiness;software organizations;software development companies;DevOps maturity models;capability gaps;SME readiness;development organizations;DevOps Chilean industry experts;Latin-American small and medium enterprises;agile development;agile operations;continuous integration;cross-cutting culture;KPI","","","","22","IEEE","22 Dec 2021","","","IEEE","IEEE Conferences"
"An Empirical Taxonomy of DevOps in Practice","R. W. Macarthy; J. M. Bass","University of Salford,School of Science, Engineering and Environment,Manchester,UK; University of Salford,School of Science, Engineering and Environment,Manchester,UK","2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)","16 Oct 2020","2020","","","221","228","DevOps is described as a software engineering culture and philosophy that utilises cross-functional teams to build, test and release software faster and more reliably through automation. Research shows that its adoption speeds up software delivery time, improve quality, security, and collaboration in software development. One controversial issue has been whether DevOps is an organisation-wide culture or a job description. As DevOps is an emerging concept, its definitions and best practices are still hazy, making its implementation in practice less informed and somewhat risky. The rising trend of DevOps adoption among software development practitioners therefore heightens the need for in-depth investigation into its implementation.This paper seeks to contribute to the above by critically examining DevOps implementation in practice through an exploratory case study, based on interviews with 11 industry practitioners across nine organisations. Transcripts of interviews were coded and analysed using a method informed by Grounded Theory. This study provides an empirical taxonomy of DevOps implementation, describing developers' interaction with On-premises Ops, Outsourced Ops, DevOps teams, and DevOps bridge teams. We present a novel mapping of the approaches to on-premises and cloud-based deployments, and identified the facilitators of DevOps practices in the different modes. We further identified three distinct groups of activities in the fourth mode: provisioning and maintenance of physical systems, function virtualisation and creation of automated pipelines, and development, deployment and maintenance of applications, which may have given rise to the implementation of DevOps as bridge teams. Interviewees claimed these distinctions allowed developers to focus on delivering value for the business.","","978-1-7281-9532-2","10.1109/SEAA51224.2020.00046","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9226359","DevOps implementation;DevOps practices;Agile operations;Agile deployment","Software;Interviews;Collaboration;Automation;Software engineering;Security;Data collection","cloud computing;organisational aspects;outsourcing;project management;software development management;software quality;virtualisation","empirical taxonomy;software engineering culture;cross-functional teams;software release;software delivery time;organisation-wide culture;DevOps adoption;software development practitioners;DevOps implementation;DevOps teams;DevOps bridge teams;DevOps practices;grounded theory;cloud-based deployments;On-premises Ops;function virtualisation;automated pipelines","","5","","34","","16 Oct 2020","","","IEEE","IEEE Conferences"
"IEEE Standard for DevOps:Building Reliable and Secure Systems Including Application Build, Package, and Deployment","",,"IEEE Std 2675-2021","23 Apr 2021","2021","","","1","91","Technical principles and processes to build, package, and deploy systems and applications in a reliable and secure way are specified. Establishing effective compliance and information technology (IT) controls is the focus. DevOps principles presented include mission first, customer focus, left-shift, continuous everything, and systems thinking. How stakeholders, including developers and operations staff, can collaborate and communicate effectively is described. The process outcomes and activities herein are aligned with the process model specified in ISO/IEC/IEEE 12207:2017 and ISO/IEC/IEEE 15288:2015.;Technical principles and processes to build, package, and deploy systems and applications in a reliable and secure way are specified. Establishing effective compliance and information technology (IT) controls is the focus. DevOps principles presented include mission first, customer focus, left-shift, continuous everything, and systems thinking. How stakeholders, including developers and operations staff, can collaborate and communicate effectively is described. The process outcomes and activities herein are aligned with the process model specified in ISO/IEC/IEEE 12207:2017 and ISO/IEC/IEEE 15288:2015.","","978-1-5044-7407-8","10.1109/IEEESTD.2021.9415476","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9415476","agile;continuous delivery;continuous deployment;continuous integration;DevOps;IEEE 2675;left-shift","IEEE Standards;Security;Reliability;Continuous time systems;Agile software development","IEC standards;IEEE standards;ISO standards;software quality","process model;IEEE standard;deploy systems;information technology;DevOps principles;customer focus;systems thinking;operations staff;process outcomes","","2","","23","","23 Apr 2021","","","IEEE","IEEE Standards"
"Understanding DevOps Education with Grounded Theory","C. Pang; A. Hindle; D. Barbosa","MacEwan University,Computer Science,Edmonton,Canada; University of Alberta,Computing Science,Edmonton,Canada; University of Alberta,Computing Science,Edmonton,Canada","2020 IEEE/ACM 42nd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","1 Dec 2020","2020","","","260","261","DevOps stands for Development-Operations. It arises from the IT industry as a movement aligning development and operations teams. DevOps is broadly recognized as an IT standard, and there is high demand for DevOps practitioners in industry. Therefore, we studied whether undergraduates acquired adequate DevOps skills to fulfill the demand for DevOps practitioners in industry. We employed Grounded Theory (GT), a social science qualitative research methodology, to study DevOps education from academic and industrial perspectives. In academia, academics were not motivated to learn or adopt DevOps, and we did not find strong evidence of academics teaching DevOps. Academics need incentives to adopt DevOps, in order to stimulate interest in teaching DevOps. In industry, DevOps practitioners lack clearly defined roles and responsibilities, for the DevOps topic is diverse and growing too fast. Therefore, practitioners can only learn DevOps through hands-on working experience. As a result, academic institutions should provide fundamental DevOps education (in culture, procedure, and technology) to prepare students for their future DevOps advancement in industry. Based on our findings, we proposed five groups of future studies to advance DevOps education in academia.","2574-1926","978-1-4503-7122-3","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9270301","Software Engineering;Continuous Integration;Continuous Delivery;DevOps;Grounded Theory;Education","Education;Industries;Software;Training;Software engineering;Programming profession;Social sciences","computer aided instruction;computer science education;educational courses;teaching","DevOps education;movement aligning development;operations teams;grounded theory;IT industry;social science qualitative research methodology;academic institutions","","","","12","","1 Dec 2020","","","IEEE","IEEE Conferences"
"Improve software quality through practicing DevOps","P. Perera; R. Silva; I. Perera","Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka","2017 Seventeenth International Conference on Advances in ICT for Emerging Regions (ICTer)","15 Jan 2018","2017","","","1","6","DevOps is extended from certain agile practices with a mix of patterns intended to improve collaboration between development and operation teams. The main purpose of this paper is to conduct a study on how DevOps practice has impacted to software quality. The secondary objective is to find how to improve quality efficiently. A literature survey has carried out to explore about current DevOps practices in industry. According to the literature survey, the conceptual research model was developed and five hypotheses were derived. Research objectives were accomplished by testing hypotheses using Pearson correlation. A linear model is derived based on the linear regression analysis. An online questionnaire was used to collect quantitative data whereas interviews with experts on DevOps and Quality assurance have been used to identify how to improve the quality of software by practicing DevOps. Recommendations are given based on interview feedback, hypotheses testing with regression analysis. According to the quantitative study, researchers have identified that quality of the software gets improved when practice DevOps by following CAMS (Culture, Automation, Measurement, Sharing) framework. Automation is the most critical factor to improve the software quality. As per the results of multiple regression analysis, it has proved culture, automation, measurement and sharing are important factors to consider to improve quality of the software. In conclusion it can be recommended to use DevOps to achieve high quality software.","2472-7598","978-1-5386-2444-9","10.1109/ICTER.2017.8257807","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8257807","DevOps;CAMS Framework;Quality;ISO 9126;Automation","Companies;Automation;Software quality;Testing;Software measurement","regression analysis;software development management;software prototyping;software quality","agile practices;operation teams;DevOps practice;conceptual research model;research objectives;linear regression analysis;Quality assurance;practice DevOps;high quality software;software quality;quantitative data collection","","16","","11","","15 Jan 2018","","","IEEE","IEEE Conferences"
"The DevOps Reference Architecture Evaluation : A Design Science Research Case Study","G. B. Ghantous; A. Gill","University of Technology Sydney,Sydney,Australia; University of Technology Sydney,Sydney,Australia","2020 IEEE International Conference on Smart Internet of Things (SmartIoT)","10 Sep 2020","2020","","","295","299","There is a growing interest to adopt vendor-driven DevOps tools in organizations. However, it is not clear which tools to use in a reference architecture which enables the deployment of the emerging IoT applications to multi-cloud environments. A research-based and vendor-neutral DevOps reference architecture (DRA) framework has been developed to address this critical challenge. The DRA framework can be utilized to architect and implement the DevOps environment that enables automation and continuous integration of software applications deployment to multi-cloud. This paper confers and discusses the evaluation outcomes of the DRA framework at the DigiSAS research Lab. The evaluation outcomes present practical evidence about the applicability of the DRA framework. The evaluation results also indicate that the DRA framework provides general knowledge-base to researchers and practitioners about the adoption DevOps approach in reference architecture design for deploying IoT-applications to multi-cloud environments.","","978-1-7281-6514-1","10.1109/SmartIoT49966.2020.00052","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9192390","Design Science Research;DevOps Reference Architecture;Empirical Software Evaluation;IoT Application Deployment;Multi-Cloud Automated Deployment","Software;Biological system modeling;Context modeling;Computer architecture;Tools;Organizations;Automation","cloud computing;Internet of Things;software architecture","DevOps reference architecture evaluation;design science research case study;vendor-driven DevOps tools;IoT applications;multicloud environments;vendor-neutral DevOps reference architecture;DRA framework;DevOps environment;software applications deployment;DigiSAS research Lab;reference architecture design;research-based DevOps reference architecture framework","","1","","34","","10 Sep 2020","","","IEEE","IEEE Conferences"
"Towards Definitions for Release Engineering and DevOps","A. Dyck; R. Penners; H. Lichter","Software Constr., RWTH Aachen Univ., Aachen, Germany; RWTH Aachen Univ., Aachen, Germany; Software Constr., RWTH Aachen Univ., Aachen, Germany","2015 IEEE/ACM 3rd International Workshop on Release Engineering","30 Jul 2015","2015","","","3","3","Delivering software fast, reliable, and predictable is essential for software development organizations. Yet, they often struggle to implement proper approaches and practices like release engineering and DevOps. One reason is the lack of consistent definitions for both of these terms, making it difficult to grasp the meaning and adding further confusion. To the best of our knowledge, there are no uniform definitions for both terms, and thus, many inadequate or even wrong interpretations exist. Consequently, these terms are often confused, misinterpreted, or used as synonyms. In this paper, we propose definitions for release engineering and DevOps to tell both apart.","","978-1-4673-7070-7","10.1109/RELENG.2015.10","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7169442","release engineering;devops;definition","Software;Reliability engineering;Software reliability;Organizations;Stress;Conferences","organisational aspects;software development management;software reliability","software development organizations;release engineering;DevOps","","58","","11","","30 Jul 2015","","","IEEE","IEEE Conferences"
"Composable DevOps: Automated Ontology Based DevOps Maturity Analysis","M. A. McCarthy; L. M. Herger; S. M. Khan; B. M. Belgodere","Office of the CIO, IBM Corp., Raleigh, NC, USA; IBM Res., IBM Corp., Yorktown Heights, NY, USA; IBM Res., IBM Corp., Yorktown Heights, NY, USA; IBM Res., IBM Corp., Yorktown Heights, NY, USA","2015 IEEE International Conference on Services Computing","20 Aug 2015","2015","","","600","607","In this era of the emerging digitized, mobilized, and cloudified enterprises, the concept of the ""compos able business"" is the most critical piece which ties everything together. The digital enterprise is here, and its prime characteristic is that is essentially detaches and segregates existing businesses and reassembles them according to market demands. Every industry, from transportation to eyewear is up for disruption, and developers are in the forefront of this movement. In turn, these developers are under intense pressure to accelerate time to market. The compos able enterprise approach requires a reconsideration of traditional models of the entire IT organization. These organization and their processes need to be broken up into components that follow certain key design principles such as The Minimal Functions with least Dependencies, portability, Shared Knowledge, Predictable Contracts and Maximized Human Value. The last three bullet points encapsulate the very definition of DevOps [3]. The concept of better integration between Development and Operations is a valuable objective. The goal is to foster measurable incremental cultural change to derive most overall value out of the union of people, process and technology. But the cultural issues, reward models, and risk allocation create obvious barriers in attaining those goals. The common industry belief is to use the compos able enterprise framework to build a platform using the right tools and you will have attained DevOps nirvana. In this paper we will explore valuable lessons learned from our mistakes in tool centric adoption of IT Infrastructure Library (ITIL) [8]. We will also show how we applied those lessons to develop a lightweight compos able/contextual DevOps framework that learns and measure itself to avoid those cultural pitfalls.","","978-1-4673-7281-7","10.1109/SCC.2015.87","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7207405","devops;itil;maturity;ontology;deontic;semantic","Business;Pipelines;Ontologies;Collaboration;Monitoring;Semantics;Engines","cloud computing;electronic commerce;information technology;market opportunities;mobile computing;ontologies (artificial intelligence)","composable DevOps;automated ontology;DevOps maturity analysis;digitized enterprises;mobilized enterprises;cloudified enterprises;composable business;market demands;IT organization;IT infrastructure library;ITIL","","12","","19","","20 Aug 2015","","","IEEE","IEEE Conferences"
"Mitigating an Oxymoron: Compliance in a DevOps Environments","J. R. Michener; A. T. Clager",NA; NA,"2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC)","25 Aug 2016","2016","1","","396","398","Compliance and regulation are fundamentally intended to establish trust between entities that create and use shared computing systems across all layers. Security compliance requirements (such as those of Payment Card Industry (PCI) Data Security Standard (DSS)<sup>1</sup> or the US NIST 800 special publication series<sup>2</sup>) are framed around a classic “Waterfall” software development methodology. The software industries recent shift to a “DevOps” methodology has put the trust created with compliance at risk. This paper contains a proposed strategy to achieve compliance and establish trust using a DevOps environment.","0730-3157","978-1-4673-8845-0","10.1109/COMPSAC.2016.155","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7552040","DevOps;security;compliance;regulation;PCI;trust","Security;Production;Software;Companies;Testing;Lead;Industries","security of data;software engineering","oxymoron mitigation;DevOps environment;shared computing systems;security compliance requirements;waterfall software development methodology;software industry","","4","","11","","25 Aug 2016","","","IEEE","IEEE Conferences"
"Evaluating the impact of DevOps practice in Sri Lankan software development organizations","P. Perera; M. Bandara; I. Perera","Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka","2016 Sixteenth International Conference on Advances in ICT for Emerging Regions (ICTer)","26 Jan 2017","2016","","","281","287","The purpose of this study is to conduct an analysis on practicing DevOps in software development companies in Sri Lanka. DevOps is extended from agile with a mix of patterns intended to improve collaboration between development and operations. The main objective of this research is to identify whether there is a relationship between quality, responsiveness to business needs and agility with implementation of DevOps. Other objectives of this research are to identify barriers Sri Lankan software companies have faced and provide recommendations to overcome those issues. This study was carried out using a deductive approach. Data have been collected from IT professionals in Sri Lanka who had prior experience or knowledge about DevOps. Recommendations are given based on interview feedback, hypotheses output and descriptive statistical analysis. According to results software professionals in Sri Lanka are in a perception that implementation of DevOps has a positive impact on Quality, Responsiveness to Business Needs and Agility to New Technologies. Culture, Automation, Measurement and Sharing are important factors to be considered when implement DevOps in Sri Lanka. As a result of this study it is recommended to implement and practice DevOps in Sri Lankan Software companies.","2472-7598","978-1-5090-6078-8","10.1109/ICTER.2016.7829932","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7829932","DevOps;Software Development Industry;Product Quality;Software Lifecycle;DevOps Challenges","Software;Companies;Industries;Collaboration;Cams","professional aspects;software houses;software prototyping;software quality","DevOps;sharing factor;measurement factor;automation factor;culture factor;business need responsiveness;software quality;software professionals;statistical analysis;IT professionals;deductive approach;agile software;Sri Lankan software development organizations","","10","","17","","26 Jan 2017","","","IEEE","IEEE Conferences"
"DevOps in Pakistani Software Industry","M. Usman Awais; A. Hussain","National University of Computer and Emerging Science,Department of Computer Science,Lahore,Pakistan; National University of Computer and Emerging Science,Department of Computer Science,Lahore,Pakistan","2020 14th International Conference on Open Source Systems and Technologies (ICOSST)","29 Jan 2021","2020","","","1","5","Researchers have been working to make software processes smooth and efficient. DevOps is a software development framework that fits best in the context of ever-emerging cloud technologies. DevOps has made it possible to automate each stage of software development, this is why it is gaining popularity rapidly. For the Pakistani software industry, the acceptance of DevOps is hindered by many factors. The most important of them all is the ever-widening disparity between the industry and academia. To assess the knowledge and acceptance of DevOps in the Pakistani software industry, a survey was conducted. Apart from other results, one conclusion is clear from the survey; Pakistani software engineers are completely aware of the changes taking place in the international market and they are trying to cope up with them, but the lack of theoretical knowledge is not allowing them to get to the pace they should have been. At the end of the article, some suggestions are presented to improve the situation.","","978-1-7281-9050-1","10.1109/ICOSST51357.2020.9333011","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9333011","DevOps;Software Processes;Software Industry","Industries;Knowledge engineering;Organizations;Control systems;Software;Software engineering;Bars","cloud computing;DP industry;software development management;software engineering;software houses;software quality;team working","Pakistani software industry;software processes;software development framework;Pakistani software engineers;DevOps;cloud technologies;international market","","1","","8","","29 Jan 2021","","","IEEE","IEEE Conferences"
"End to End Automation on Cloud with Build Pipeline: The Case for DevOps in Insurance Industry, Continuous Integration, Continuous Testing, and Continuous Delivery","M. Soni","IGATE, Gandhinagar, India","2015 IEEE International Conference on Cloud Computing in Emerging Markets (CCEM)","21 Mar 2016","2015","","","85","89","In modern environment, delivering innovative idea in a fast and reliable manner is extremely significant for any organizations. In the existing scenario, Insurance industry need to better respond to dynamic market requirements, faster time to market for new initiatives and services, and support innovative ways of customer interaction. In past few years, the transition to cloud platforms has given benefits such as agility, scalability, and lower capital costs but the application lifecycle management practices are slow with this disruptive change. DevOps culture extends the agile methodology to rapidly create applications and deliver them across environment in automated manner to improve performance and quality assurance. Continuous Integration (CI) and Continuous delivery (CD) has emerged as a boon for traditional application development and release management practices to provide the capability to release quality artifacts continuously to customers with continuously integrated feedback. The objective of the paper is to create a proof of concept for designing an effective framework for continuous integration, continuous testing, and continuous delivery to automate the source code compilation, code analysis, test execution, packaging, infrastructure provisioning, deployment, and notifications using build pipeline concept.","","978-1-4673-8566-4","10.1109/CCEM.2015.29","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7436936","Cloud Computing;DevOps;Continuous Integration;Continuous Testing;Configuration Management;Continuous Delivery;Automation","Cloud computing;Pipelines;Automation;Servers;Testing;Configuration management;Insurance","cloud computing;insurance data processing;program diagnostics;program testing;software prototyping;source code (software)","build pipeline;software deployment;agile methodology;cloud computing;notifications;infrastructure provisioning;packaging;test execution;code analysis;source code compilation;continuous delivery;continuous testing;continuous integration;insurance industry;DevOps;end to end automation","","30","","4","","21 Mar 2016","","","IEEE","IEEE Conferences"
"CARO: A Conflict-Aware Requirement Ordering Tool for DevOps","M. Roy; N. Deb; A. Cortesi; R. Chaki; N. Chaki","University of Calcutta,Kolkata,India; Indian Institute of Information Technology,Vadodara,India; Ca’ Foscari University,Venice,Italy; University of Calcutta,Kolkata,India; University of Calcutta,Kolkata,India","2021 IEEE 29th International Requirements Engineering Conference (RE)","18 Nov 2021","2021","","","442","443","Requirement prioritization is an inherently important step in the DevOps framework. Unfortunately, the prioritization process often disregards the non-functional requirements and the possible conflicts among them. This implies that unresolved dependencies and conflicts would be identified at integration time only, which may lead to major refactoring issues. We introduce CARO a new tool that generates an ordering among the requirements based on conflicts and dependencies among the requirements. The tool provides a quantitative risk evaluation framework along with risk mitigation strategies based on conflicts and dependencies among the requirements.","2332-6441","978-1-6654-2856-9","10.1109/RE51729.2021.00061","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9604702","DevOps;Dependencies;Conflicts;Risk analysis;Non-Functional Requirements","Analytical models;Conferences;Tools;Performance analysis;Risk management;Requirements engineering","cloud computing;risk analysis;software maintenance;software quality","CARO;conflict-aware requirement ordering tool;requirement prioritization;DevOps framework;nonfunctional requirements;integration time;quantitative risk evaluation framework;refactoring issues;risk mitigation strategies","","","","4","IEEE","18 Nov 2021","","","IEEE","IEEE Conferences"
"Continuous and Integrated Software Development using DevOps","A. Agarwal; S. Gupta; T. Choudhury","Amity University Uttar Pradesh, Noida, India; Amity University Uttar Pradesh, Noida, India; University of Petroleum and Energy Studies, Dehradun, India","2018 International Conference on Advances in Computing and Communication Engineering (ICACCE)","11 Sep 2018","2018","","","290","293","Devops is all about culture, automation, measurement and sharing (CAMS). It is gaining popularity because of its continuous approach - continuous integration(CI), continuous deployment (CD) and software delivery. CI requires the developer to commit the code several times in a day followed by automatic build and test and immediate feedback to the developer whenever any bug is encountered. If no bug is encountered, the committed code is pushed to the production. According to the 2017 State Of Devops Report, high performance companies like Amazon and Netflix deploy thousands of times per day. Configuration management allows the rollback of previous code for the developer. However several factors prevent the organizations from adopting these approaches like lack of fully automated acceptance test, poor rollback methodology, manually driven quality check etc. This research paper provides various methodologies and tools that can constitute an effective CD/CI pipeline.","","978-1-5386-4485-0","10.1109/ICACCE.2018.8458052","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8458052","Devops;deployment;integration;performance;Testing","Tools;Software;Testing;Organizations;Automation;Production;Pipelines","configuration management;integrated software;program testing;software prototyping;software quality","continuous approach;software delivery;immediate feedback;bug;committed code;Devops Report;fully automated acceptance test;Configuration management;rollback methodology;manually driven quality check;effective CD-CI pipeline;continuous integration;CAMS;culture automation measurement and sharing;software development","","7","","10","","11 Sep 2018","","","IEEE","IEEE Conferences"
"IAI DevOps: A Systematic Framework for Prognostic Model Lifecycle Management","Z. Guo; T. Bao; W. Wu; C. Jin; J. Lee","CyberInsight Technology, Co, Ltd,Industrial AI Lab & Department of Product R&D,Beijing,People’s Republic of China; CyberInsight Technology, Co, Ltd,Industrial AI Lab & Department of Product R&D,Beijing,People’s Republic of China; CyberInsight Technology, Co, Ltd,Industrial AI Lab & Department of Product R&D,Beijing,People’s Republic of China; CyberInsight Technology, Co, Ltd,Industrial AI Lab & Department of Product R&D,Beijing,People’s Republic of China; University of Cincinnati,Center for Intelligent Maintenance Systems (IMS),Cincinnati,OH,United States of America","2019 Prognostics and System Health Management Conference (PHM-Qingdao)","27 Dec 2019","2019","","","1","6","This paper proposes IAI DevOps, a systematic framework to address challenges of developing and operationalizing AI models in manufacturing industries, with an emphasis on prognostics and health management (PHM) applications. The paper starts by introducing the growing need of accelerating AI model development and enhancing its lifecycle reliability in industrial AI systems. The framework for industrial AI (IAI) DevOps is then proposed, with key components including industrial data management, streamlined model training, risk monitoring and model update, and decision support and feedback. After detailed introduction of the function and principles of each component, an implementation of the supporting platform is illustrated for the reference of the readers. With the help of the IAI DevOps framework, the authors believe that interdisciplinary engineering teams can collaborate better to accelerate the implementation of PHM systems as well as broader industrial AI applications in manufacturing industries.","","978-1-7281-0861-2","10.1109/PHM-Qingdao46334.2019.8943069","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8943069","Industrial AI;DevOps;model lifecycle management;PHM","Iron;Frequency modulation;IP networks","artificial intelligence;manufacturing industries;production engineering computing","prognostics and health management applications;industrial AI applications;PHM systems;IAI DevOps framework;decision support;risk monitoring;streamlined model training;industrial data management;industrial AI DevOps;industrial AI systems;lifecycle reliability;AI model development;AI models;prognostic model lifecycle management","","","","25","","27 Dec 2019","","","IEEE","IEEE Conferences"
"Understanding DevOps Education with Grounded Theory","C. Pang; A. Hindle; D. Barbosa","Computer Science, MacEwan University,Edmonton,Alberta,Canada; Computing Science, University of Alberta,Edmonton,Alberta,Canada; Computing Science, University of Alberta,Edmonton,Alberta,Canada","2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)","28 Dec 2020","2020","","","107","118","DevOps stands for Development-Operations. It arises from the IT industry as a movement aligning development and operations teams. DevOps is broadly recognized as an IT standard, and there is high demand for DevOps practitioners in industry. Since ACM & IEEE suggest that undergraduate computer science curricula “must adequately prepare [students] for the workforce”, we studied whether undergraduates acquired adequate DevOps skills to fulfill the demand for DevOps practitioners in industry. We employed Grounded Theory (GT), a social science qualitative research methodology, to study DevOps education from academic and industrial perspectives. In academia, academics were not motivated to learn or adopt DevOps, and we did not find strong evidence of academics teaching DevOps. Academics need incentives to adopt DevOps, in order to stimulate interest in teaching DevOps. In industry, DevOps practitioners lack clearly defined roles and responsibilities, for the DevOps topic is diverse and growing too fast. Therefore, practitioners can only learn DevOps through hands-on working experience. As a result, academic institutions should provide fundamental DevOps education (in culture, procedure, and technology) to prepare students for their future DevOps advancement in industry. Based on our findings, we proposed five groups of future studies to advance DevOps education in academia.","","978-1-4503-7124-7","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9291778","Software Engineering;Continuous Integration;Continuous Delivery;DevOps;Grounded Theory;Education","Encoding;Industries;Interviews;Training;Software engineering;Tools;Social sciences","computer science education;DP industry;educational courses;teaching","IT industry;Development-Operations;DevOps advancement;DevOps education;DevOps topic;DevOps skills;DevOps practitioners;operations teams;movement aligning development;Grounded Theory","","","","60","","28 Dec 2020","","","IEEE","IEEE Conferences"
"Continuous scrum: A framework to enhance scrum with DevOps","S. S. Samarawickrama; I. Perera","Department of Computer Science, Faculty of Engineering, University of Moratuwa, Moratuwa, Sri Lanka; Department of Computer Science, Faculty of Engineering, University of Moratuwa, Moratuwa, Sri Lanka","2017 Seventeenth International Conference on Advances in ICT for Emerging Regions (ICTer)","15 Jan 2018","2017","","","1","7","There has been a significant impact on software development lifecycle by the non-plan driven software processes such as Agile derived models i.e. Scrum, Extreme Programming (XP) and recently introduced DevOps practice. In this paper capabilities and limitation of these above mentioned Agile based practices has been examine. A Scrum based software development framework that supports continuous integration and rapid delivery had been developed. The developed software lifecycle management framework has overcame the common challenges that software practitioners may experience.","2472-7598","978-1-5386-2444-9","10.1109/ICTER.2017.8257808","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8257808","Software Development Life Cycle;Agile;Scrum;DevOps","Software;Scrum (Software development);Business;Industries;Programming;Productivity","project management;software development management;software prototyping;software quality","Agile based practices;DevOps practice;Extreme Programming;nonplan driven software processes;software development lifecycle;continuous scrum;software practitioners;developed software lifecycle management framework;continuous integration;Scrum based software development framework","","7","","18","","15 Jan 2018","","","IEEE","IEEE Conferences"
"Microservices Architecture in DevOps","M. Waseem; P. Liang","State Key Lab. of Software Eng., Wuhan Univ., Wuhan, China; State Key Lab. of Software Eng., Wuhan Univ., Wuhan, China","2017 24th Asia-Pacific Software Engineering Conference Workshops (APSECW)","12 Mar 2018","2017","","","13","14","This doctoral research proposal is designed to address the challenges on employing microservices architecture (MSA) in DevOps. These two practices are relatively recent trends on the crowded street of software engineering paradigms. We believe that the coexistence of these practices may bring new challenges for architects about making and implementing decisions of microservices in DevOps. We plan to gain a deep understanding of the challenges/solutions, architecture description, migration, refactoring, and evolution in MSA with DevOps. Our expected outcome would be: (i) a systematic mapping study on MSA in DevOps, (ii) an evidence based framework for synthesizing MSA challenges/solutions in DevOps, (iii) recommendations for documenting MSA in DevOps based on industrial practices, (iv) a migration process from monolithic applications/architecture to MSA in DevOps, and (v) empirical reports on MSA refactoring and evolution in DevOps.","","978-1-5386-2649-8","10.1109/APSECW.2017.18","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8312518","Microservices Architecture;DevOps;Systematic Mapping Study","Systematics;Computer architecture;Software engineering;Conferences;Architecture;Market research","software architecture;software development management;software maintenance;software prototyping","DevOps;microservices architecture;MSA;software engineering paradigms","","4","","12","","12 Mar 2018","","","IEEE","IEEE Conferences"
"DevOps Transformation for Multi-Cloud IoT Applications","L. Georgeta Guşeilă; D. -V. Bratu; S. -A. Moraru","Transilvania University of Braşov,Department of Automatics and Information Technology,Braşov,România; Transilvania University of Braşov,Department of Automatics and Information Technology,Braşov,România; Transilvania University of Braşov,Department of Automatics and Information Technology,Braşov,România","2019 International Conference on Sensing and Instrumentation in IoT Era (ISSI)","23 Mar 2020","2019","","","1","6","In the dynamic IoT ecosystem, the fast development of applications is critical to achieve business goals and stay ahead of the competition. DevOps is a software development method that enables enterprises to deliver software product features through process automation, foster team collaboration and increase efficiency in the entire software lifecycle management building the way towards cloudification and enabling digital transformation. Furthermore, DevOps relies on automation in operations through monitoring and measuring the KPIs of a running system. The research presents the role of DevOps in the transformation of the IT Service delivery using a DevOps assessment to establish the maturity of software applications and the adoption of DevOps using the CI/CD) pipeline and automated testing. The paper provides a conceptual view of the CI/CD) pipeline based on agile tool, which will be implemented during future research.","","978-1-7281-1022-6","10.1109/ISSI47111.2019.9043730","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9043730","IoT;DevOps;DevOps Assessment;Software Lifecycle Management;Continuous Integration;Continuous Delivery;Test Automation","Software;Testing;Business;Automation;Tools;Internet of Things;Collaboration","business data processing;cloud computing;DP industry;DP management;groupware;Internet of Things;software development management","automated testing;DevOps transformation;multicloud IoT applications;software development method;software product features;process automation;team collaboration;software lifecycle management;cloudification;digital transformation;DevOps assessment;CI/CD pipeline;IT Service delivery","","1","","8","","23 Mar 2020","","","IEEE","IEEE Conferences"
"Capabilities and Practices in DevOps: A Multivocal Literature Review","R. M. D. Amaro; R. Pereira; M. Mira da Silva","Departamento de Cincias e Tecnologias da Informao (ISTA), ISCTE-Instituto Universitrio de Lisboa, 56061 Lisboa, Lisboa, Portugal; Departamento de Cincias e Tecnologias da Informao (ISTA), ISCTE-Instituto Universitrio de Lisboa, 56061 Lisboa, Lisboa, Portugal; Department of Computer Science and Engineering, Universidade de Lisboa Instituto Superior Tcnico, 72971 Lisboa, Lisboa, Portugal","IEEE Transactions on Software Engineering","","2022","PP","99","1","1","Context: To meet the demands of customers and market, Information Technology (IT) organizations are seeking to implement DevOps. While many succeed in DevOps adoption, others lack the knowledge on how to incorporate DevOps culture, process, measurements, and techniques in their business. Thus, successful adoption is still inconsistent, highlighting the need to provide management with relevant information to support the development of DevOps Capabilities effectively. But what are these Capabilities Unfortunately, there is still a lack of clarity about DevOps Capabilities and their relationships to DevOps Practices and Outcomes among researchers and practitioners. Objective: This research aims to gather community consensus on the relationship between Capabilities and Practices, so a better DevOps implementation can be mapped. Seeking to define DevOps Capabilities and Practices concepts and to identify, organize and summarize Capabilities as they relate to Practices. Method: A Multivocal Literature Review (MLR) is conducted, with 93 documents gathered and thoroughly examined from throughout the community, including books, scientific articles, white papers, and conferences, among others. Results: This survey contributes a list of 37 organized Capabilities, their mentions in literature, and their definitions. The concepts of Practices and Capabilities were mapped and categorized in an ordered taxonomy. It is concluded that industry research has much outweighed scientific research on this topic, with Capabilities evolving dynamically over time, reinforcing team collaboration and communication as the most crucial one. The studys Outcomes will assist researchers and practitioners understand how Capabilities and Practices are related at different levels and how to better implement them.","1939-3520","","10.1109/TSE.2022.3166626","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9756241","DevOps Capabilities;DevOps Practices;Software Engineering Process;Software release management and delivery;Software Development;Multivocal Literature Review","Software;Bibliographies;Collaboration;Industries;Automation;Terminology;Systematics","","","","","","","IEEE","12 Apr 2022","","","IEEE","IEEE Early Access Articles"
"IEEE Draft Standard for DevOps: Building Reliable and Secure Systems Including Application Build, Package and Deployment","",,"IEEE P2675/D2, October 2020","14 Oct 2020","2020","","","1","93","Technical principles and processes to build, package, and deploy systems and applications in a reliable and secure way are specified. Establishing effective compliance and information technology (IT) controls is the focus. DevOps principles presented include mission first, customer focus, left-shift, continuous everything, and systems thinking. How stakeholders, including developers and operations staff, can collaborate and communicate effectively is described. The process outcomes and activities herein are aligned with the process model specified in ISO/IEC/IEEE 12207:2017 and ISO/IEC/IEEE 15288:2015.","","978-1-5044-7130-5","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9224250","agile;continuous delivery;continuous deployment;continuous integration;DevOps;IEEE 2675;left-shift","IEEE Standards;IEC Standards;ISO Standards;Software engineering;Product life cycle management;Information technology;Stakeholders;Security;Systems thinking","","","","","","","","14 Oct 2020","","","IEEE","IEEE Standards"
"IEEE Draft Standard for DevOps: Building Reliable and Secure Systems Including Application Build, Package and Deployment","",,"IEEE P2675/D1, June 2020","12 Aug 2020","2020","","","1","95","Technical principles and processes to build, package, and deploy systems and applications in a reliable and secure way are specified. Establishing effective compliance and information technology (IT) controls is the focus. DevOps principles presented include mission first, customer focus, left-shift, continuous everything, and systems thinking. How stakeholders, including developers and operations staff, can collaborate and communicate effectively is described. The process outcomes and activities herein are aligned with the process model specified in ISO/IEC/IEEE 12207:2017 and ISO/IEC/IEEE 15288:2015.","","978-1-5044-6918-0","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9165985","agile;continuous delivery;continuous deployment;continuous integration;DevOps;IEEE 2675;left-shift","IEEE Standards;IEC Standards;ISO Standards;Systems thinking;Security;Software engineering;Systems engineering and theory;Product life cycle development","","","","","","","","12 Aug 2020","","","IEEE","IEEE Standards"
"IEEE Approved Draft Standard for DevOps: Building Reliable and Secure Systems Including Application Build, Package and Deployment","",,"IEEE P2675/D2, October 2020","11 Feb 2021","2021","","","1","93","Technical principles and processes to build, package, and deploy systems and applications in a reliable and secure way are specified. Establishing effective compliance and information technology (IT) controls is the focus. DevOps principles presented include mission first, customer focus, left-shift, continuous everything, and systems thinking. How stakeholders, including developers and operations staff, can collaborate and communicate effectively is described. The process outcomes and activities herein are aligned with the process model specified in ISO/IEC/IEEE 12207:2017 and ISO/IEC/IEEE 15288:2015.","","978-1-5044-7130-5","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9353440","agile;continuous delivery;continuous deployment;continuous integration;DevOps;IEEE 2675;left-shift","IEEE Standards;Security;Reliability;Packaging","","","","","","","","11 Feb 2021","","","IEEE","IEEE Standards"
"RV-SLC: A Tool for Regression Validation of Safety and Liveness Constraints on Goal Models in DevOps Environment","P. Ambade; D. Solanki; N. Deb","Indian Institute of Information Technology,Department of Computer Science and Information Technology,Vadodara,India; Indian Institute of Information Technology,Department of Computer Science and Information Technology,Vadodara,India; Indian Institute of Information Technology,Department of Computer Science and Information Technology,Vadodara,India","2021 IEEE 29th International Requirements Engineering Conference (RE)","18 Nov 2021","2021","","","452","453","Requirements keep changing and getting updated in any incremental software development - including DevOps. The notion of regression validation ensures compliance to a given set of rules (or properties) even when either the requirement set changes or the associated rules themselves change due to new business policies and regulations. In this tool paper, we propose the RV-SLC tool which has the SLC framework at its core. The tool uses a formal data model that demonstrates how regression validation of safety and liveness constraints can be achieved across multiple iterations. The tool also has an analytics dashboard that allows the developers to monitor and visualize how the requirements and the associated safety and liveness constraints have been modified and updated across these iterations.","2332-6441","978-1-6654-2856-9","10.1109/RE51729.2021.00066","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9604561","Regression Validation;Safety;Liveness;Goal Models;DevOps","Conferences;Data visualization;Tools;Software;Regulation;Data models;Safety","data models;formal specification;formal verification;regression analysis;systems analysis","liveness constraints;DevOps environment;incremental software development;business policies;RV-SLC tool;SLC framework;formal data model;regression validation","","","","1","IEEE","18 Nov 2021","","","IEEE","IEEE Conferences"
"Teaching DevOps and Cloud Based Software Engineering in University Curricula","Y. Demchenko; Z. Zhao; J. Surbiryala; S. Koulouzis; Z. Shi; X. Liao; J. Gordiyenko",University of Amsterdam; University of Amsterdam; University of Stavanger; University of Amsterdam; University of Amsterdam; University of Amsterdam; Agile Telecom,"2019 15th International Conference on eScience (eScience)","19 Mar 2020","2019","","","548","552","This paper presents recommendations on the design and pilot implementation of the DevOps and Cloud based Software Development curricula for Computer Science and Software Engineering masters. The central part of proposed approach is the Body of Knowledge in the DevOps technologies for Software Engineering (DevOpsSE BoK) that defines a set Knowledge Areas and Knowledge Units required for SE professionals to work efficiently as DevOps engineer or application developer. Defining DevOpsSE-BoK provides a basis for defining required professional competences and skills and allows consistent curricula structuring and profiling. The paper also reports on the experience of the first course run on 2018/2019 academic year at the University of Amsterdam. The paper presents the structure of the course and explains what instructional methodologies have been used for course development, such as project based learning that facilitates the students' team based skills both in mastering Agile development process and skills sharing. The paper provides a short summary of the generally used DevOps definitions, concepts, models and tools, specifically focusing on the cloud based DevOps tools for software development, deployment and operation that allows the main DevOps principle of continuous development and continuous improvement which are critical for modern agile data driven companies.","","978-1-7281-2451-3","10.1109/eScience.2019.00075","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9041714","DevOps and Cloud Based Software Engineering; DevOps Software Engieering Body of Knowledge; Education; Instructional methodology; Project Based Learning","","cloud computing;computer aided instruction;computer science education;educational courses;educational institutions;formal specification;software engineering;teaching","software development;DevOpsSE BoK;set Knowledge Areas;knowledge units;SE professionals;application developer;DevOpsSE-BoK;professional competences;consistent curricula structuring;course development;agile development process;continuous development;DevOps teaching;university curricula;pilot implementation;software engineering masters","","2","","21","","19 Mar 2020","","","IEEE","IEEE Conferences"
"A DevOps Introduction Process for Legacy Systems","V. L. Cruz; A. B. Albuquerque",Universidade de Fortaleza; Universidade de Fortaleza,"2018 XLIV Latin American Computer Conference (CLEI)","5 Aug 2019","2018","","","139","148","Legacy systems are a challenge for the operations of modern organizations as they limit the growth of business and their changing ability. However, they are often systems suited to their purpose, they deliver the expected value and investment in them is justifiable. The concept of DevOps has come to reduce the separation between development and operations teams in software development companies, decreasing the product lifecycle. With this concept comes the practice of continuous delivery, allowing teams to deliver and deploy any version of their software in any computing environment at any time through a fully automated process. This practice improves the feedback of the development process, so problems could be identified and resolved as early as possible. In this paper, we present an experience of deploying DevOps, and propose a structured process for deploying DevOps and its modifications necessary to adapt to legacy systems in order to the delivery process of the legacy systems has a short and high quality lifecycle, delivering frequent versions in an automated way.","","978-1-7281-0437-9","10.1109/CLEI.2018.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8786278","Legacy systems;DevOps;Continuous Integration;Continuous Deployment;Deployment Pipeline","","DP industry;software houses;software maintenance;software quality","DevOps introduction process;legacy systems;investment;operations teams;software development companies;organizations;product lifecycle;computing environment;quality lifecycle","","","","","","5 Aug 2019","","","IEEE","IEEE Conferences"
"Automating Tiny ML Intelligent Sensors DevOPS Using Microsoft Azure","C. Vuppalapati; A. Ilapakurti; K. Chillara; S. Kedari; V. Mamidi","Hanumayamma Innovations and Technologies, Inc.,Artificial Intelligence,Fremont,CA,USA; Hanumayamma Innovations and Technologies, Inc.,Artificial Intelligence,Fremont,CA,USA; Hanumayamma Innovations and Technologies, Inc.,Artificial Intelligence,Fremont,CA,USA; Internet of Things Hanumayamma Innovations and Technologies, Inc.,Fremont,USA; Internet of Things Hanumayamma Innovations and Technologies, Inc.,Fremont,USA","2020 IEEE International Conference on Big Data (Big Data)","19 Mar 2021","2020","","","2375","2384","Microsoft Azure DevOps is a robust ,cross platform and powerful automation engine for script-based automation tools. Azure DevOPS enables to build, test, and deploy Cloud Native and/or Non-Cloud Native applications. The core principle and chief advantage that Azure DevOps provide are the availability of automation techniques such as infrastructure as code and the seamless integration of verifiable frameworks such as Machine Learning Operations (MLOps) with the DevOps automated pipelines to provision and configure the infrastructure that applications need to run.With the increase in application complexity and with the infusion of Machine Learning (ML) and Artificial Intelligence (AI) techniques as part of the software development lifecycle, the Azure DevOps is the most important framework that many organizations are rapidly progressing to incorporate it in their business processes to reduce the cost of building product and improve customer success.As part of the paper, we would like to propose a novel DevOps framework for building intelligent Tiny ML dairy agriculture sensors and the advantages that DevOps provide to develop high quality product in the most cost-efficient manner and serve small scale farmers who are at the bottom economic pyramid.","","978-1-7281-6251-5","10.1109/BigData50022.2020.9377755","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9377755","Azure;DevOps;Infrastructure as code;CI/CD","Automation;Planets;Buildings;Machine learning;Tools;Big Data;Intelligent sensors","agriculture;cloud computing;intelligent sensors;learning (artificial intelligence)","Tiny ML intelligent sensors DevOPS;Microsoft Azure DevOps;script-based automation tools;cloud native applications;Azure DevOps provide;automation techniques;verifiable frameworks;machine learning operations;DevOps automated pipelines;application complexity;intelligent Tiny ML dairy agriculture sensors;noncloud native applications","","2","","28","","19 Mar 2021","","","IEEE","IEEE Conferences"
"A Survey of DevOps tools for Networking","J. Shah; D. Dubaria; J. Widhalm","Telecommunication and Network Engineering, Southern Methodist University, Dallas, Texas, USA; Telecommunication and Network Engineering, Southern Methodist University, Dallas, Texas, USA; Telecommunication and Network Engineering, Southern Methodist University, Dallas, Texas, USA","2018 9th IEEE Annual Ubiquitous Computing, Electronics & Mobile Communication Conference (UEMCON)","15 Aug 2019","2018","","","185","188","DevOps is a new methodology that combines developers and operations team to closely integrate people, processes and technology for an automated software delivery that is agile, scalable and cost-effective. DevOps delivery is a combination of two previous methods; agile software development and the collaboration between developments and operations team by changing the way we think to deploy an infrastructure through the entire product life-cycle, from the design through the production phase, we can deliver consistent and repeatable designs. By abstracting the configuration needed to launch server instances with specific configurations into consistently repeatable recipes or manifests, the entire technology stack becomes converged. In order to do this, both operation and development skills are required. We have GIT as source control tool, Ansible as configuration management, Jenkins as configuration integration, Vagrant as provisioning and Docker as containerization tool. With all these tools we can build an entire Continuous Integration and Continuous Delivery pipeline.","","978-1-5386-7693-6","10.1109/UEMCON.2018.8796814","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8796814","DevOps;Networking;Vagrant;Docker;Jenkins;Ansible;Git;Pipeline;CI/CD","","configuration management;product life cycle management;program testing;software defined networking;software development management;software engineering;software prototyping","DevOps delivery;agile software development;operations team;entire product life-cycle;production phase;consistent designs;repeatable designs;specific configurations;consistently repeatable recipes;development skills;source control tool;configuration management;configuration integration;containerization tool;DevOps tools;automated software delivery;agile cost-effective;scalable cost-effective;technology stack;continuous integration;continuous delivery pipeline","","2","","21","","15 Aug 2019","","","IEEE","IEEE Conferences"
"Challenges for adopting DevOps in information technology projects","J. A. V. M. K. Jayakody; W. M. J. I. Wijayanayake","Uva Wellassa University,Faculty of Applied Sciences,Department of Computer Science and Informatics,Sri Lanka; University of Kelaniya,Faculty of Science,Department of Industrial Management,Sri Lanka","2021 International Research Conference on Smart Computing and Systems Engineering (SCSE)","25 Oct 2021","2021","4","","203","210","An Information Technology (IT) project deals with IT infrastructure, information systems, or computers for delivering an IT product within a temporary period. Proper application of software development methodologies assists software designers to run IT projects to the success of achieving the satisfaction of project stakeholders. Because of the issues raised by traditional software development methodologies such as the Waterfall model, the IT industry began to employ Agile methodology for IT project management. However, due to the separation of software development and operation teams, Agile methodology also caused problems. DevOps is a new approach adapted to the Agile methodology that collaborates the software development and operation teams in order to provide continuous development of high-quality software in a short period of time. However, there are practical issues reported since DevOps approach is still in its infancy in the IT industry. The purpose of this research is to analyze the use of the DevOps concept in IT Projects by evaluating the challenges and mitigating strategies practiced by software development firms in order to ensure the success of IT projects. This purpose was achieved by performing a literature study and soliciting recommendations from industry professionals using a questionnaire survey. The findings reveal the critical challenges and prioritization of challenges experienced by software firms while adopting DevOps, as well as their practices for overcoming those challenges. The research findings will help IT project development teams and future researchers to develop strategies for making the success of DevOps adoption with Agile methodology in the IT industry.","2613-8662","978-1-6654-0965-0","10.1109/SCSE53661.2021.9568348","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9568348","DevOps;DevOps challenges;overcoming strategies","Industries;Computational modeling;Bibliographies;Project management;Tools;Software;Data models","information technology;project management;software development management;software prototyping;software quality;team working","continuous high-quality software development;software operation teams;software development methodologies;DevOps adoption;software development firms;IT project management;Agile methodology;information technology projects","","","","37","IEEE","25 Oct 2021","","","IEEE","IEEE Conferences"
"A Review on DevOps Adoption in Continuous Delivery Process","M. Z. Toh; S. Sahibuddin; R. A. Bakar","Universiti Teknologi Malaysia,Razak Faculty of Technology and Informatics,Advanced Informatic Department,Kuala Lumpur,Malaysia,54100; Universiti Teknologi Malaysia,Razak Faculty of Technology and Informatics,Advanced Informatic Department,Kuala Lumpur,Malaysia,54100; Universiti Malaysia Pahang,Faculty of Computer,Pekan,Pahang,Malaysia,26600","2021 International Conference on Software Engineering & Computer Systems and 4th International Conference on Computational Science and Information Management (ICSECS-ICOCSIM)","17 Sep 2021","2021","","","98","103","DevOps is recognized as a set of software development and operation practices that advocates a tight integration between development and operation in software delivery and operation activity to achieve faster software delivery time. DevOps produce significant Agile practice to reduce software cycle time in delivering software products. Meanwhile, Continuous Delivery (CD) is one of the DevOps process that enables the software production team to release both new function and new product rapidly, however, the fixed and official services guideline for DevOps is still ambiguous. This paper to identify the problems and issues in DevOps practice adoption that can improve the CD process. This was achieved by conducting a literature study to identify the DevOps and Continuous Delivery. The method used to conduct this research is by filter internet artifact from Scopus database. Thus 96 internet artifacts had been identified for further studied and analyzed. As the result, there are four significant adoption factors that need to be considered in determining the success of the DevOps adoption in Continuous Delivery process.","","978-1-6654-1407-4","10.1109/ICSECS52883.2021.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9536993","Human Factors;Standardization;Process Guidelines","Scientific computing;Standards organizations;Time to market;Organizations;Computer architecture;Software quality;Tools","Internet;program testing;software development management;software prototyping;software quality","faster software delivery time;significant Agile practice;software cycle time;software products;DevOps process;software production team;fixed services guideline;official services guideline;DevOps practice adoption;CD process;significant adoption factors;DevOps adoption;Continuous Delivery process;software development;operation practices;operation activity","","","","37","IEEE","17 Sep 2021","","","IEEE","IEEE Conferences"
"Measurement Based Performance Evaluation of DevOps","P. Batra; A. Jatain","Career Point University,Deptt. Of Computer Science,Kota,India; Career Point University,Deptt. Of Computer Science,Kota,India","2020 International Conference on Computational Performance Evaluation (ComPE)","18 Sep 2020","2020","","","757","760","Software Development has gone through a long journey from waterfall to DevOps. This journey includes Agile methodologies, Continuous Integration, Continuous Delivery and Continuous Deployment approach. With time IT organizations realized that recent approaches are better than traditional approaches in every manner. Recent trends like DevOps are very popular among software industry, still facing many challenges. Performance Evaluation is one of the biggest challenges in this approach. In this paper we shall deal with this challenge by not only introducing measurement-based quality attributes but also evaluating the same. To achieve this objective DevOps implementation will be done and a comparative analysis with traditional method will be executed to show desired targets.","","978-1-7281-6644-5","10.1109/ComPE49325.2020.9200149","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9200149","DevOps;Agile;Measurement based evaluation;Quality enhancement;Software development lifecycle;waterfall","Software;Adaptation models;Performance evaluation;Organizations;Testing","project management;software performance evaluation;software prototyping;software quality","measurement based performance evaluation;software development;agile methodologies;continuous integration;continuous delivery;software industry;measurement-based quality attributes;DevOps implementation;continuous deployment approach","","1","","10","","18 Sep 2020","","","IEEE","IEEE Conferences"
"DevOps: Introducing Infrastructure-as-Code","M. Artac; T. Borovssak; E. Di Nitto; M. Guerriero; D. A. Tamburri","XLAB, Ljubljana, Slovenia; XLAB, Ljubljana, Slovenia; DEEPSE Group, Politec. di Milano, Milan, Italy; DEEPSE Group, Politec. di Milano, Milan, Italy; DEEPSE Group, Politec. di Milano, Milan, Italy","2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C)","24 Aug 2017","2017","","","497","498","DevOps entails a series of software engineering tactics aimed at shortening the actionable operation of software design changes. One of these tactics is to harness infrastructure-as-code, that is, writing a blueprint that contains deployment specifications ready for orchestration in the cloud. This abstract briefly discusses all necessary elements and abstractions in writing and maintaining that blueprint, revolving around a key standard for its expression, namely, the OASIS ""Topology and Orchestration Specification for Cloud Applications"" (TOSCA) industrial standard adopted by as many as 60+ big industrial players worldwide.","","978-1-5386-1589-8","10.1109/ICSE-C.2017.162","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7965401","DevOps;Infrastructure-as-Code;TOSCA","Standards;Cloud computing;Tools;Topology;Big Data","cloud computing;software engineering","DevOps;infrastructure-as-code;software engineering tactics;blueprint writing;OASIS;topology-and-orchestration specification-for-cloud applications;TOSCA","","30","","10","","24 Aug 2017","","","IEEE","IEEE Conferences"
"Methods of Implementation, Maturity Models and Definition of Roles in DevOps Frameworks: A Systematic Mapping","L. d. Aguiar Monteiro; D. S. M. Pessoa Monteiro; W. H. Carvalho Almeida; A. Cavalcanti de Lima; I. S. Sette","Center of Advanced Studies and Systems of Recife,Recife,Brazil; Center of Advanced Studies and Systems of Recife,Recife,Brazil; Center of Advanced Studies and Systems of Recife,Recife,Brazil; Higher Education Institute iCEV,Piauí,Brazil; Center of Advanced Studies and Systems of Recife,Recife,Brazil","2020 International Conference on Computational Science and Computational Intelligence (CSCI)","23 Jun 2021","2020","","","1766","1773","The software development industry has been evolving and has produced new development standards and models for providing services. Agile methodologies have reached their plateau with DevOps, which has increased software quality and hastened its delivery. However, a gap in terms of its formalization and unresolved issues concerning its adoption have become relevant. This study seeks, by using a Systematic Mapping, to elucidate existing gaps in this area such as methods for implementing DevOps, the use of maturity models and defining the roles of those who participate in this process. This Systematic Method was applied to five databases (ACM Digital Library, IEEE Xplore, Science Direct, Springer Link and Scopus), during which automatic searches are conducted with a view to answering the research questions. 32 studies returned answers to these. 11 maturity models were found; however, only two of them had been validated by companies, one of which only applied to IBM software.","","978-1-7281-7624-6","10.1109/CSCI51800.2020.00327","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9458014","DevOps;Software Engineer;Continuous Integration;Continuous Delivery","Industries;Systematics;Scientific computing;Databases;Computational modeling;Software quality;Companies","cloud computing;digital libraries;software development management;software engineering;software prototyping;software quality","DevOps frameworks;Systematic Mapping;software development industry;development standards;providing services;agile methodologies;software quality;IBM software;11 maturity models;Systematic Method;existing gaps;unresolved issues","","","","50","","23 Jun 2021","","","IEEE","IEEE Conferences"
"GitOps: The Evolution of DevOps?","F. Beetz; S. Harrer","Distributed Systems Group, University of Bamberg, Bamberg, Germany; innoQ Deutschland GmbH, Nürnberg, Germany","IEEE Software","","2021","PP","99","0","0","With the rise of cloud computing platforms, the speed of developing software has drastically increased. This increased speed requires new models of operating hardware, as the separation of development and operations departments often leads to bottlenecks in the deployment process. DevOps techniques aim at improving the collaboration between development and operation teams, promising to reduce the time until new products reach the customer and improving software quality. GitOps is a new concept claiming to be the evolution of DevOps. This paper analyzes if GitOps is really an evolution of DevOps, as in making DevOps obsolete. As neither DevOps nor GitOps have a standard definition, this paper synthesizes a definition of both concepts and compares them by their key elements. We find that GitOps is not the evolution of DevOps although they share common concepts. However, both concepts are defined by their use in industry, so additional research is required.","1937-4194","","10.1109/MS.2021.3119106","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9565152","GitOps;DevOps;Infrastructure as Code","Pipelines;Software;Collaboration;Hardware;Codes;Cloud computing;Tools","","","","","","","IEEE","8 Oct 2021","","","IEEE","IEEE Early Access Articles"
"Qualifying Software Engineers Undergraduates in DevOps - Challenges of Introducing Technical and Non-technical Concepts in a Project-oriented Course","I. Alves; C. Rocha",University of Brasilia (UnB); University of Brasilia (UnB),"2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)","7 May 2021","2021","","","144","153","he constant changes in the software industry, practices, and methodologies impose challenges to teaching and learning current software engineering concepts and skills. DevOps is particularly challenging because it covers technical concepts, such as pipeline automation, and non-technical ones, such as team roles and project management. The present study investigates a course setup to introduce these concepts to software engineering undergraduates. We designed the course by employing coding to associate DevOps concepts to Agile, Lean, and Open source practices and tools. We present the main aspects of this project-oriented DevOps course, with 240 students enrolled it since its first offering in 2016. We conducted an empirical study, with both a quantitative and qualitative analysis, to evaluate this project-oriented course setup. We collected the data from the projects repository and students' perceptions from a questionnaire. We mined 148 repositories (corresponding to 72 projects) and obtained 86 valid responses to the questionnaire. We also mapped the concepts which are more challenging to students learn from experience. The results evidence that first-hand experience facilitates the comprehension of DevOps concepts and enriches classes discussions. we present a set of lessons learned, which may help professors better design and conduct project-oriented courses to cover DevOps concepts.","","978-1-6654-0138-8","10.1109/ICSE-SEET52601.2021.00024","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402207","DevOps;education;Open-source;OSS;FOSS;Empirical-software-engineering;Agile-software-development;Emerging-domains-of-software;Tools-and-environments","Training;Industries;Pipelines;Project management;Tools;Software;Software engineering","computer aided instruction;computer science education;educational courses;further education;software development management;software prototyping;teaching","project-oriented DevOps course;project-oriented course setup;projects repository;software industry;software engineering teaching;software engineering learning;technical concept;student perceptions;agile practice;lean practice;software engineering undergraduate qualification;open source practice;nontechnical concept","","","","34","","7 May 2021","","","IEEE","IEEE Conferences"
"Quantum DevOps: Towards Reliable and Applicable NISQ Quantum Computing","I. -D. Gheorghe-Pop; N. Tcholtchev; T. Ritter; M. Hauswirth","Fraunhofer Institute for Open Communication Systems (FOKUS),Berlin,Germany; Fraunhofer Institute for Open Communication Systems (FOKUS),Berlin,Germany; Fraunhofer Institute for Open Communication Systems (FOKUS),Berlin,Germany; Technische Universität Berlin, Fraunhofer Institute for Open Communication Systems (FOKUS),Berlin,Germany","2020 IEEE Globecom Workshops (GC Wkshps","5 Mar 2021","2020","","","1","6","Quantum Computing is emerging as one of the great hopes for boosting current computational resources and enabling the application of ICT for optimizing processes and solving complex and challenging domain specific problems. However, the Quantum Computing technology has not matured to a level where it can provide a clear advantage over high performance computing yet. Towards achieving this ""quantum advantage"", a larger number of Qubits is required, leading inevitably to a more complex topology of the computing Qubits. This raises additional difficulties with decoherence times and implies higher Qubit error rates. Nevertheless, the current Noisy Intermediate-Scale Quantum (NISQ) computers can prove useful despite the intrinsic uncertainties on the quantum hardware layer. In order to utilize such error-prone computing resources, various concepts are required to address Qubit errors and to deliver successful computations. In this paper describe and motivate the need for the novel concept of Quantum DevOps. which entails regular checking of the reliability of NISQ Quantum Computing (QC) instances. By means of testing the computational reliability of basic quantum gates and computations (C-NOT, Hadamard, etc.)it consequently estimates the likelihood for a large scale critical computation (e.g. calculating hourly traffic flow models for a city) to provide results of sufficient quality. Following this approach to select the best matching (cloud) QC instance and having it integrated directly with the processes of development, testing and finally the operations of quantum based algorithms and systems enables the Quantum DevOps concept.","","978-1-7281-7307-8","10.1109/GCWkshps50303.2020.9367411","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9367411","Quantum DevOps;Quantum Computing;DevOps;Testing;Framework;IT","Computers;Uncertainty;Computational modeling;Qubit;Logic gates;Topology;Reliability","quantum gates","quantum computing technology;noisy intermediate-scale quantum computers;quantum hardware layer;error-prone computing resources;qubit errors;quantum-based algorithms;quantum DevOps;NISQ quantum computing;qubit error rates","","1","","52","","5 Mar 2021","","","IEEE","IEEE Conferences"
"DevDocOps: Towards Automated Documentation for DevOps","G. Rong; Z. Jin; H. Zhang; Y. Zhang; W. Ye; D. Shao","Nanjing University, China; ZTE, China; Nanjing University, China; ZTE, China; ZTE, China; Nanjing University, China","2019 IEEE/ACM 41st International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)","19 Aug 2019","2019","","","243","252","The proliferation of DevOps enables significant acceleration and automation of the delivery and deployment of massive software products. Unfortunately, the development of supporting documents that is vital for large scale software systems in many cases does not keep pace with the rhythm of feature delivery using DevOps in practice, which becomes the bottleneck for many software organizations to deliver full value to the customers as claimed by DevOps. This paper proposes, implements, and evaluates a new approach, DevDocOps, for continuous automated documentation, in particular for DevOps. With DevDocOps, developers are able to create the documents simultaneously with their working versions of software, which largely guarantees the accuracy and integrity of documents as well as significantly increases their delivery speed. Within an established delivery chain, a set of templates are created to collect and transform the required information from its origin to the target documents for delivery. A real system, iDoc, is implemented to map, collect, and synthesize the information from document templates and automate the documentation process. The iDoc system supports the generation of documents in minutes and the instant feedback loop as well. DevDocOps has been successfully adopted in over 30 large software projects in a top tier global telecommunication enterprise. The lag time between the releases of the product version and its supporting document has been shortened from 1-2 months on average to less than 2 days. DevDocOps extends the scope of DevOps and enhances the value delivery by supporting continuous documentation and bridging the gap between feature delivery and document delivery with automation.","","978-1-7281-1760-7","10.1109/ICSE-SEIP.2019.00034","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8804428","DevOps, Continuous Delivery, Documentation","Documentation;Software systems;Communications technology;Industries;Maintenance engineering","document delivery;document handling;project management;software management","DevDocOps;DevOps;value delivery;document delivery;massive software products;software organizations;continuous automated documentation;document templates;software projects;software systems;delivery chain;iDoc system","","3","","16","","19 Aug 2019","","","IEEE","IEEE Conferences"
"Blockchain based framework for Software Development using DevOps","S. Bankar; D. Shah","Thakur College of Engineering and Technology,Department of Information Technology,Mumbai,India; Thakur College of Engineering and Technology,Department of Information Technology,Mumbai,India","2021 4th Biennial International Conference on Nascent Technologies in Engineering (ICNTE)","30 Jul 2021","2021","","","1","6","The Varity and complexity of software development methods is getting increased from mid-1960, to accelerate product's time to market it is more and more pervasive so it becomes crucial to ensure the quality, performance, and security of software product in untrustworthy environment. DevOps focuses on automation and inter departmental integration to create an environment and culture that will increase software development speed as there are frequent conflicts occurs between development and operations. This paper focusses on architecture that redefines the DevOps pipeline by positioning Blockchain technology in this environment. It stores all project artifacts on decentralized and secure Blockchain environment so that it can create trust between people with dishonest and stubbornness mindset that would make DevOps delivery to follow control requirements in technology and business environments of different sizes. Separately, blockchain and DevOps provides tangible and quantifiable value for just about any type of business. If they are used together, they can form a highly advanced business solution that can revolutionize services, operations and collaborations.","","978-1-7281-9061-7","10.1109/ICNTE51185.2021.9487760","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9487760","DevOps;Blockchain;Hyperledger Fabric;Interplanetary File System","File systems;Pipelines;Time to market;Collaboration;Computer architecture;Software;Blockchains","blockchains;business data processing;organisational aspects;product development;software product lines","blockchain based framework;software development methods;software product;untrustworthy environment;inter departmental integration;DevOps pipeline;decentralized blockchain environment;stubbornness mindset;business environments;secure blockchain environment","","","","24","","30 Jul 2021","","","IEEE","IEEE Conferences"
"AIDOaRt: AI-augmented Automation for DevOps, a Model-based Framework for Continuous Development in Cyber-Physical Systems","R. Eramo; V. Muttillo; L. Berardinelli; H. Bruneliere; A. Gomez; A. Bagnato; A. Sadovykh; A. Cicchetti","University of L’Aquila,L’Aquila,Italy; University of L’Aquila,L’Aquila,Italy; Johannes Kepler University,Linz,Austria; IMT Atlantique,LS2N (UMR CNRS 6004),Nantes,France; Universitat Oberta de Catalunya,Barcelona,Spain; Softeam,Paris,France; Softeam,Paris,France; Mälardalen University,Västerås,Sweden","2021 24th Euromicro Conference on Digital System Design (DSD)","11 Oct 2021","2021","","","303","310","With the emergence of Cyber-Physical Systems (CPS), the increasing complexity in development and operation demands for an efficient engineering process. In the recent years DevOps promotes closer continuous integration of system development and its operational deployment perspectives. In this context, the use of Artificial Intelligence (AI) is beneficial to improve the system design and integration activities, however, it is still limited despite its high potential. AIDOaRT is a 3 years long H2020-ECSEL European project involving 32 organizations, grouped in clusters from 7 different countries, focusing on AI-augmented automation supporting modelling, coding, testing, monitoring and continuous development of Cyber-Physical Systems (CPS). The project proposes to apply Model-Driven Engineering (MDE) principles and techniques to provide a framework offering proper AI-enhanced methods and related tooling for building trustable CPSs. The framework is intended to work within the DevOps practices combining software development and information technology (IT) operations. In this regard, the project points at enabling AI for IT operations (AIOps) to auto-mate decision making process and complete system development tasks. This paper presents an overview of the project with the aim to discuss context, objectives and the proposed approach.","","978-1-6654-2703-6","10.1109/DSD53832.2021.00053","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9556443","Continuous System Engineering;DevOps;AIOPS;Software engineering;Scientific computing;Simulation and Modelling Tools;Cyber-Physical Systems;Artificial Intelligence","Automation;Europe;Organizations;Cyber-physical systems;Continuous time systems;Software;Artificial intelligence","artificial intelligence;cyber-physical systems;decision making;program testing;project management;software development management;system monitoring","AIDOaRt;AI-augmented automation;model-based framework;continuous development;cyber-physical systems;CPS;DevOps;continuous integration;operational deployment;system design;system integration;H2020-ECSEL European project;software development;information technology;system development;artificial intelligence;model-driven engineering;MDE;AI for IT operations;AIOps;decision making;system testing;system monitoring","","","","29","","11 Oct 2021","","","IEEE","IEEE Conferences"
"DevOps methodology usage in IT companies in Montenegro","M. Kljaić; S. Šćepanović","Mediterranean University,Faculty for Information technologies,Podgorica; Mediterranean University,Faculty for Information technologies,Podgorica","2022 26th International Conference on Information Technology (IT)","30 Mar 2022","2022","","","1","4","DevOps represents an organizational approach that allows faster software development, deployment, and maintenance by uniting development (Dev) and operational (Ops) teams. The aim of this research was to find out whether and to what extent companies in Montenegro use the DevOps methodology, what are the key benefits of using this methodology in practice, and what are the biggest problems in its implementation. From a technical point of view, an attempt was made to determine the level of automated processes and the tools that are the most used in the different stages of the DevOps life cycle.","","978-1-6654-2127-0","10.1109/IT54280.2022.9743544","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9743544","","Industries;Automation;Digital transformation;Companies;Maintenance engineering;Software;Information technology","","","","","","15","","30 Mar 2022","","","IEEE","IEEE Conferences"
"An Analysis of DevOps Architecture for EMIS based on jBPM","H. Liu; Q. Han; Y. Wang; F. He; Z. Mao; C. Li","School of Computer Science and Enginerering, North Minzu University,Yinchuan,China; School of Computer Science and Enginerering, North Minzu University,Yinchuan,China; School of Computer Science and Enginerering, North Minzu University,Yinchuan,China; School of Computer Science and Enginerering, North Minzu University,Yinchuan,China; School of Computer Science and Enginerering, North Minzu University,Yinchuan,China; School of Computer Science and Enginerering, North Minzu University,Yinchuan,China","2020 International Conference on Service Science (ICSS)","17 Dec 2020","2020","","","96","101","In recent years, DevOps(Combination of Development and Operations) is an emerging software engineering practice. More and more organizations have begun to adopt DevOps method. This paper develops an educational management information system(EMIS) based on jBPM initiated by the DevOps concept, and proposes a quantitative analysis method based on the analytic hierarchy process(AHP) for its system evaluation. Preliminary evaluation results show that this method can help us understand the maturity of the system's DevOps architecture.","","978-1-7281-8531-6","10.1109/ICSS50103.2020.00023","National Natural Science Foundation of China(grant numbers:61862001); Postgraduate Innovation Project of North Minzu University(grant numbers:YCX19067); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9283693","DevOps;jBPM;AHP;educational management information systems","Statistical analysis;Electromagnetic interference;Computer architecture;Organizations;Management information systems;Software engineering","analytic hierarchy process;educational administrative data processing;software architecture;software quality","DevOps architecture;EMIS;jBPM;software engineering practice;organizations;educational management information system;quantitative analysis method;system evaluation;analytic hierarchy process;AHP","","","","16","","17 Dec 2020","","","IEEE","IEEE Conferences"
"The Systems Engineering DevOps Lemniscate and Model-Based System Operations","J. T. J. Mathieson; T. Mazzuchi; S. Sarkani","Northrop Grumman Corporation, Falls Church, VA, USA; Department of Engineering Management and Systems Engineering, School of Engineering and Applied Science, George Washington University, Washington, DC, USA; Department of Engineering Management and Systems Engineering, School of Engineering and Applied Science, George Washington University, Washington, DC, USA","IEEE Systems Journal","26 Aug 2021","2021","15","3","3980","3991","Systems engineering is defined as a “full life cycle” discipline and provides methodologies and processes to support the design, development, verification, sustainment, and disposal of systems. While this cradle-to-grave concept is well documented throughout literature, there has been recent emphasis on evolving and digitally transforming systems engineering methodologies, practices, and tools for the latter phases of system life cycles. This article adapts principles from the software engineering domain DevOps concept (a collaborative merger of system development and operations) into a Systems Engineering DevOps (SEDevOps) life cycle model. This facilitates a merger of systems engineering processes, tools, and products into a surrogate operational environment in which the sustainment of a system is tied closely to the curation of a system model expanded to include the enabling system elements necessary for operations and sustainment (procedures, scripts, etc.). This progression of the systems engineering mindset, focused on digitally transforming and enhancing system operations and sustainment, improves agility in later life cycle phases. A framework for applying SEDevOps is introduced as a new systems modeling language profile. A use-case leveraging this “model-based system operations” framework, shows how merging support elements into a spacecraft system model improves adaptability during operations, exemplifying elements of a DevOps approach to cyber-physical system sustainment.","1937-9234","","10.1109/JSYST.2020.3015595","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9179780","Agile;DevOps;digital transformation;life cycle;model-based systems engineering (MBSE);systems engineering","Modeling;Tools;Unified modeling language;Systems operation;Software engineering;Adaptation models","software engineering;systems engineering","Systems Engineering DevOps lemniscate;full life cycle discipline;cradle-to-grave concept;system life cycles;software engineering domain DevOps concept;system development;Systems Engineering DevOps life cycle model;systems engineering processes;surrogate operational environment;systems engineering mindset;life cycle phases;use-case;spacecraft system model;cyber-physical system sustainment;model-based system operations","","1","","44","IEEE","28 Aug 2020","","","IEEE","IEEE Journals"
"Innovative Practices for Knowledge Sharing in Large-Scale DevOps","A. Hemon; B. Fitzgerald; B. Lyonnet; F. Rowe","ESSCA School of Management, Angers, France; Lero Software Research, University of Limerick, Limerick, Ireland; Management Sciences, University of Nantes, France; University of Nantes, France","IEEE Software","15 Apr 2020","2020","37","3","30","37","Agile development methods and DevOps require adaptation during implementation to meet the needs of a constantly changing softwaredevelopment environment. The emergence of knowledge-sharing practices for large-scale DevOps has not been the subject of much research. Our in-depth case study, consisting of 106 interviews at a multinational company operating in a DevOps-at-scale environment, identified a number of innovative practices.","1937-4194","","10.1109/MS.2019.2958900","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8930607","Agile method;DevOps;Large-Scale;Innovative Practices;Knowledge Sharing","Companies;Software development management;Collaboration;Automation;Large-scale systems;Software tools","formal specification;innovation management;knowledge management;organisational aspects;software engineering","innovative practices;knowledge sharing practices;large-scale DevOps;agile development methods;knowledge-sharing practices;in-depth case study;DevOps-at-scale environment;constantly changing software development environment","","3","","20","IEEE","10 Dec 2019","","","IEEE","IEEE Magazines"
"Learning from, Understanding, and Supporting DevOps Artifacts for Docker","J. Henkel; C. Bird; S. K. Lahiri; T. Reps","University of Wisconsin-Madison,USA; Microsoft Research,USA; Microsoft Research,USA; University of Wisconsin-Madison,USA","2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)","21 Dec 2020","2020","","","38","49","With the growing use of DevOps tools and frameworks, there is an increased need for tools and techniques that support more than code. The current state-of-the-art in static developer assistance for tools like Docker is limited to shallow syntactic validation. We identify three core challenges in the realm of learning from, understanding, and supporting developers writing DevOps artifacts: (i) nested languages in DevOps artifacts, (ii) rule mining, and (iii) the lack of semantic rule-based analysis. To address these challenges we introduce a toolset, binnacle, that enabled us to ingest 900,000 GitHub repositories. Focusing on Docker, we extracted approximately 178,000 unique Dockerfiles, and also identified a Gold Set of Dockerfiles written by Docker experts. We addressed challenge (i) by reducing the number of effectively uninterpretable nodes in our ASTs by over 80% via a technique we call phased parsing. To address challenge (ii), we introduced a novel rule-mining technique capable of recovering two-thirds of the rules in a benchmark we curated. Through this automated mining, we were able to recover 16 new rules that were not found during manual rule collection. To address challenge (iii), we manually collected a set of rules for Dockerfiles from commits to the files in the Gold Set. These rules encapsulate best practices, avoid docker build failures, and improve image size and build latency. We created an analyzer that used these rules, and found that, on average, Dockerfiles on GitHub violated the rules five times more frequently than the Dockerfiles in our Gold Set. We also found that industrial Dockerfiles fared no better than those sourced from GitHub. The learned rules and analyzer in binnacle can be used to aid developers in the IDE when creating Dockerfiles, and in a post-hoc fashion to identify issues in, and to improve, existing Dockerfiles.","1558-1225","978-1-4503-7121-6","10.1145/3377811.3380406","ONR(grant numbers:N00014-17-1-2889,N00014-19-1-2318); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284129","Docker;DevOps;Mining;Static Checking","Gold;Ecosystems;Tools;Maintenance engineering;Encoding;Data mining;Software development management","data mining;learning (artificial intelligence);software engineering","DevOps artifacts;DevOps tools;static developer assistance;shallow syntactic validation;core challenges;supporting developers;rule mining;semantic rule-based analysis;900 GitHub repositories;000 GitHub repositories;approximately 178 Dockerfiles;000 unique Dockerfiles;Gold Set;Docker experts;address challenge;novel rule-mining technique;automated mining;manual rule collection;docker build failures;industrial Dockerfiles;learned rules;creating Dockerfiles;existing Dockerfiles","","8","","40","","21 Dec 2020","","","IEEE","IEEE Conferences"
"Atom-Task Precondition Technique to Optimize Large Scale GUI Testing Time based on Parallel Scheduling Algorithm","S. Wongkampoo; S. Kiattisin","Faculty of Engineering Mahidol University, Information Technology Management, Nakhon Pathom, Thailand; Faculty of Engineering Mahidol University, Information Technology Management, Nakhon Pathom, Thailand","2017 21st International Computer Science and Engineering Conference (ICSEC)","23 Aug 2018","2017","","","1","5","The modern software development mostly aims to reduce a development time. The product time to market must be fast for quick gathering feedback from the user. DevOps brings the continuous practice to improve software development process on both continuous integration and continuous delivery. In continuous processes, software testing is the most time-consuming part which significant for overall process especially graphic user interface or GUI. Several techniques can reduce GUI testing time such as a distributed testing which is help UI testing running in parallel on a distributed machine. By running distributed GUI testing initially without experience or knowledge from an expert lead to the un-optimized speed of running test or even the future problem such as an unpredictable number of worker, the bottleneck of the worker node. This paper has purpose the Atom-Task precondition technique, the technique for filtering the test before running the parallel testing process to optimize the testing time and avoiding worker bottleneck problem and also remain an ability to scale the worker process for desired testing time with predictable resource for large-scale testing in the distributed environment.","","978-1-5386-0787-9","10.1109/ICSEC.2017.8443913","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8443913","Automated Testing;Distributed Testing;Parallel Testing;Selenium;WebDriver;DevOps;Continuous Integration","Testing;Graphical user interfaces;Software;Selenium;Task analysis;Google","graphical user interfaces;program testing;scheduling;software engineering","parallel scheduling algorithm;modern software development;product time;quick gathering feedback;continuous practice;software development process;continuous integration;continuous processes;software testing;time-consuming part;process especially graphic user interface;GUI testing time;distributed testing;distributed machine;un-optimized speed;running test;Atom-Task precondition technique;parallel testing process;avoiding worker bottleneck problem;distributed environment;atom-task precondition technique;large scale GUI testing time","","1","","14","","23 Aug 2018","","","IEEE","IEEE Conferences"
"Quality-Aware DevOps Research: Where Do We Stand?","A. Alnafessah; A. U. Gias; R. Wang; L. Zhu; G. Casale; A. Filieri","Department of Computing, Imperial College London, London, U.K.; Department of Computing, Imperial College London, London, U.K.; Department of Computing, Imperial College London, London, U.K.; Department of Computing, Imperial College London, London, U.K.; Department of Computing, Imperial College London, London, U.K.; Department of Computing, Imperial College London, London, U.K.","IEEE Access","24 Mar 2021","2021","9","","44476","44489","DevOps is an emerging paradigm that reduces the barriers between developers and operations teams to offer continuous fast delivery and enable quick responses to changing requirements within the software life cycle. A significant volume of activity has been carried out in recent years with the aim of coupling DevOps stages with tools and methods to improve the quality of the produced software and the underpinning delivery methodology. While the research community has produced a sustained effort by conducting numerous studies and innovative development tools to support quality analyses within DevOps, there is still a limited cohesion between the research themes in this domain and a shortage of surveys that holistically examine quality engineering work within DevOps. In this paper, we address the gap by comprehensively surveying existing efforts in this area, categorizing them according to the stage of the DevOps lifecycle to which they primarily contribute. The survey holistically spans across all the DevOps stages, identify research efforts to improve architectural design, modeling and infrastructure-as-code, continuous-integration/continuous-delivery (CI/CD), testing and verification, and runtime management. Our analysis also outlines possible directions for future work in quality-aware DevOps, looking in particular at AI for DevOps and DevOps for AI software.","2169-3536","","10.1109/ACCESS.2021.3064867","National Center for Artificial Intelligence and Big Data Technologies, King Abdulaziz City for Science and Technology (KACST), Saudi Arabia; Commonwealth Scholarship Commission in the U.K.; RADON project, funded by the European Union’s Horizon 2020 Research and Innovation Program(grant numbers:825040); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9373305","DevOps;CI/CD;infrastructure as code;testing;artificial intelligence;verification","Software;Testing;Artificial intelligence;Computer architecture;Tools;Production;Software architecture","program testing;program verification;research and development;software architecture;software development management;software quality","software quality;innovative development tools;DevOps lifecycle;software life cycle;quality aware DevOps research;architectural design;modeling;infrastructure as code;continuous-integration/continuous-delivery;testing and verification;runtime management","","","","68","CCBY","9 Mar 2021","","","IEEE","IEEE Journals"
"Factors inhibiting the adoption of DevOps in large organisations: South African context","M. B. Kamuto; J. J. Langerman","Academy of Computer Science, University of Johannesburg; Software Engineering, Johannesburg, South Africa","2017 2nd IEEE International Conference on Recent Trends in Electronics, Information & Communication Technology (RTEICT)","15 Jan 2018","2017","","","48","51","DevOps has been identified as a phenomenon whereby stakeholders of a software development team work together to deliver software continuously, allowing the business to seize emerging and existing market opportunities while reducing the time required for inclusion of client feedback. However, little has been done to develop adoption strategies/frameworks for this phenomenon. The absence of such strategies may result in DevOps not being adequately communicated and its impact not fully comprehended in both the practitioner and academic research communities. This study investigates the factors that are hindering the adoption of DevOps and proposes strategies to address them using both literature study and interviews with practitioners actively involved in the DevOps movement. Five main factors hindering the adoption of DevOps are identified: lack of strategic direction from senior management; lack of education around DevOps; risk of disintermediation of roles; resistance to change and silo mentality. A proposed conceptual framework has been developed both to strategize the adoption of DevOps, and to contribute input for future research.","","978-1-5090-3704-9","10.1109/RTEICT.2017.8256556","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8256556","DevOps;Agile;Lean;Continuous deployment;Automation","Organizations;Software;Interviews;Resistance;Industries;Conferences","organisational aspects;software development management;software engineering;team working","large organisations;software development stakeholders;market opportunities;business;silo mentality;DevOps adoption;South African context;DevOps movement;adoption strategies/frameworks;software development team","","9","","14","","15 Jan 2018","","","IEEE","IEEE Conferences"
"Automated Inter-artefact Traceability Establishment for DevOps Practice","I. Rubasinghe; D. Meedeniya; I. Perera","Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka; Department of Computer Science & Engineering, University of Moratuwa, Sri Lanka","2018 IEEE/ACIS 17th International Conference on Computer and Information Science (ICIS)","20 Sep 2018","2018","","","211","216","Software traceability is an important aspect in DevOps based software development environments. DevOps practices connect the development level and operational level software artefacts with frequent updates. Consequently, traceability management of the artefacts is essential to avoid the conflicts and inconsistencies during the continuous deployment activities. This paper addresses traceability establishment throughout the entire software development, considering both development and operational level artefacts. In this work, we have extended our previously developed SAT-Analyser traceability tool by establishing traceability between artefacts in source code, unit test scripts and build scrips. The accuracy of the traceability link establishment is evaluated using centrality-based network analysis techniques. The statistical results show an average of 71% accuracy.","","978-1-5386-5892-5","10.1109/ICIS.2018.8466414","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8466414","heterogeneous software artefacts;traceability;DevOps;network analysis;SAT-Analyser tool;software evolution","Software;Tools;XML;Automation;Natural language processing;Maintenance engineering;Scalability","formal specification;program diagnostics;program testing;software engineering;software maintenance;software quality;software tools","software traceability;operational level software artefacts;frequent updates;traceability management;continuous deployment activities;entire software development;operational level artefacts;developed SAT-Analyser traceability tool;traceability link establishment;centrality-based network analysis techniques;automated inter-artefact traceability establishment;DevOps-based software development environments","","7","","34","","20 Sep 2018","","","IEEE","IEEE Conferences"
"Evolution of Handling Web Applications Up to the Current DevOps Tools","C. A. Rodríguez; L. Molinari; F. G. Tinetti","LINTI, Univ. Nac. de La Plata, La Plata, Argentina; LINTI, Univ. Nac. de La Plata, La Plata, Argentina; LINTI, Univ. Nac. de La Plata, La Plata, Argentina","2017 International Conference on Computational Science and Computational Intelligence (CSCI)","6 Dec 2018","2017","","","987","992","In this paper, we show the way in which many standard web applications have evolved. Most of them started with a complete independence among software development and its architecture, deployment and infrastructure design. Now, the current usage of DevOps (for Development and Operations) emerging tools are used in the context of new methodologies. We use a specific application and its own evolution as an example. Most of the development cycle, application architecture, and environments for development, testing, and QA (Quality Assurance) has changed in the last years. From 2006 to date, we have taken advantage of many new technologies as soon as they were available, each one providing some aid to (some) web development task. We also define a preliminary characterization for web applications evolution in order to analyze pros and cons of the current DevOps methodologies.","","978-1-5386-2652-8","10.1109/CSCI.2017.170","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8560930","DevOps;Continuous Delivery;Continuous Deploy;Infrastructure Management","","Internet;program testing;software architecture;software quality","software development;infrastructure design;development cycle;application architecture;quality assurance;DevOps methodologies;Web applications evolution;Web development task;standard Web applications;DevOps tools;development and operations tool","","","","43","","6 Dec 2018","","","IEEE","IEEE Conferences"
"Towards Continuous Consistency Checking of DevOps Artefacts","A. Colantoni; B. Horváth; Á. Horváth; L. Berardinelli; M. Wimmer","Johannes Kepler University,Linz,Austria; IncQuery Labs cPlc.,Budapest,Hungary; IncQuery Labs cPlc.,Budapest,Hungary; Johannes Kepler University,Linz,Austria; Johannes Kepler University,Linz,Austria","2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)","20 Dec 2021","2021","","","449","453","DevOps tools are often scattered over a multitude of technologies, and thus, their integration is a challenging endeavour. The existing DevOps integration platforms, e.g., Keptn, often employ a family of languages for this purpose. However, as we have learnt from UML, SysML, and many others, a family of languages requires inter-model constraints to be checked in order to guarantee a high consistency between the different artefacts.In this work-in-progress paper, we propose a Model-Driven Engineering (MDE) approach for the continuous consistency checking of DevOps artefacts. First, we explicitly represent each artefact as a model, second, we establish links across them to set a navigable network of model elements; and third, we enable MDE services on top of this network.We envision the possibility of using GitOps to pull the DevOps artefacts, executing services for checking consistency and performing model repairs, uploading the changes to the DevOps tools, and finally pushing the artefacts to Git, thus resulting in a continuous consistency checking process in practice.","","978-1-6654-2484-4","10.1109/MODELS-C53483.2021.00069","ITEA; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9643713","DevOps;MDE;consistency management","Unified modeling language;Maintenance engineering;Model driven engineering","cloud computing;formal specification;software engineering;Unified Modeling Language","devops artefacts;DevOps tools;inter-model constraints;high consistency;different artefacts;Model-Driven Engineering approach;artefact;model elements;performing model repairs;continuous consistency checking process","","","","30","IEEE","20 Dec 2021","","","IEEE","IEEE Conferences"
"A Model-Driven DevOps Framework for QoS-Aware Cloud Applications","M. Guerriero; M. Ciavotta; G. P. Gibilisco; D. Ardagna","Dipt. di Elettron., Inf. e Bioingegneria, Politec. di Milano, Milan, Italy; Dipt. di Elettron., Inf. e Bioingegneria, Politec. di Milano, Milan, Italy; Dipt. di Elettron., Inf. e Bioingegneria, Politec. di Milano, Milan, Italy; Dipt. di Elettron., Inf. e Bioingegneria, Politec. di Milano, Milan, Italy","2015 17th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing (SYNASC)","7 Mar 2016","2015","","","345","351","Recently we witnessed a deep transformation in the the design, development and management of modern applications, which have grown in scope and size becoming distributed and service-oriented. A big part in this metamorphosis is played by the Cloud with the availability of almost-infinite resources, high availability and outsourced maintenance. This has led to the emergence of new software development methodologies to effectively deal with this paradigm shift in the field of software engineering. DevOps is one of them, it advocates for a greater level of collaboration and convergence between developers and other IT professionals. Consequently, new tools, purposely designed to ease this process, are required. In this scenario, we present SPACE4Cloud, a DevOps integrated environment for model-driven design-time quality of service assessment and optimization, and runtime capacity allocation of Cloud applications.","","978-1-5090-0461-4","10.1109/SYNASC.2015.60","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7426104","Auto-Scaling;Capacity Allocation;Optimization;QoS","Quality of service;Runtime;Optimization;Cloud computing;Adaptation models;Resource management","cloud computing;convergence;quality of service;resource allocation;service-oriented architecture","model-driven DevOps framework;QoS-aware cloud applications;deep transformation;service-oriented size;metamorphosis;resource availability;maintenance outsourcing;software development methodologies;software engineering;IT professionals;SPACE4Cloud;DevOps integrated environment;model-driven design-time quality of service assessment;runtime capacity allocation;cloud applications","","4","","41","","7 Mar 2016","","","IEEE","IEEE Conferences"
"Versioning Strategy for DevOps Implementations","N. Paez","Department of Science and Technology, Universidad Nacional de Tres de Febrero Caseros, Argentina","2018 Congreso Argentino de Ciencias de la Informática y Desarrollos de Investigación (CACIDI)","20 Dec 2018","2018","","","1","6","DevOps is one of the most popular approaches for software delivery nowadays. Even though there is no unified definition of DevOps, there is wide consensus about the set of practices that are part of it. Two of those practices are Infrastructure as Code and Continuous Delivery, which bring new artifacts into the Software Development lifecycle. These new artifacts have direct impact on Software Configuration Management, which is a well-known practice that has been around for decades in the Software Engineering discipline. In particular, these new practices have a direct impact on Version Control. This article describes a Version Control Strategy to manage these new artifacts introduced by DevOps initiatives. The proposed strategy covers the identification of artifacts, versioning tools, version naming conventions and traceability between different artifacts versions. The strategy was validated in three cases of real world projects where it was successfully applied. Each case corresponds to a different kind of organization and in each case a different set of tools where used. Based on these cases, benefits and possible improvements are identified.","","978-1-5386-5447-7","10.1109/CACIDI.2018.8584362","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8584362","DevOps;Software Configuration Management;Version Control","Tools;Software;Configuration management;Proposals;Production;Software engineering;Organizations","configuration management;software development management","DevOps initiatives;DevOps implementations;software development lifecycle;software configuration management;software engineering discipline;artifacts versions;version control strategy","","5","","27","","20 Dec 2018","","","IEEE","IEEE Conferences"
"DevOps: A Historical Review and Future Works","M. Gokarna; R. Singh","IBM India Pvt Ltd,Bangalore,India; IBM India Pvt Ltd,Bangalore,India","2021 International Conference on Computing, Communication, and Intelligent Systems (ICCCIS)","12 Apr 2021","2021","","","366","371","DevOps is an emerging practice to be followed in the Software Development life cycle. The name DevOps indicates that it's an integration of the Development and Operations team. It is followed to integrate the various stages of the development lifecycle. DevOps is an extended version of the existing Agile method. DevOps aims at Continuous Integration, Continuous Delivery, Continuous Improvement, faster Feedback and Security. This paper reviews the building blocks of DevOps, challenges in adopting DevOps, Models to improve DevOps practices and Future works on DevOps.","","978-1-7281-8529-3","10.1109/ICCCIS51004.2021.9397235","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9397235","Agile software development;DevOps;Cloud Computing;Automation;Continuous Integration;Continuous Delivery","Computational modeling;Software;Security;Continuous improvement;Intelligent systems","software development management;software process improvement;software prototyping","software development life cycle;DevOps practices;development and operations team;agile method;continuous integration;continuous delivery;continuous improvement","","2","","53","","12 Apr 2021","","","IEEE","IEEE Conferences"
"An Intelligent DevOps Platform Research and Design Based on Machine Learning","Z. Wang; M. Shi; C. Li","University of China,School of Computer Science and Cybersecurity Communication,Beijing,China; University of China,School of Computer Science and Cybersecurity Communication,Beijing,China; University of China,School of Computer Science and Cybersecurity Communication,Beijing,China","2020 Eighth International Conference on Advanced Cloud and Big Data (CBD)","21 Apr 2021","2020","","","42","47","With the continuous deepens and expansion of IT business based on AI, machine learning and blockchain technologies, there are many developments in intelligent communication and Internet industries. Matured IT business cause daily DevOps (Development & Operations) works must deal with huge amounts of data. What the trickier work gradually emerged is that these data have complex sources, various formats, and other issues. Efficient and inexpensive DevOps of computer software and hardware systems become an important task which needs to be resolved. In SLC (Software Life Cycle), DevOps occupies more than half proportion. It impact entire IT business reflected in the business overall control, business risk control, and business cost control. In order to improve the efficiency of DevOps engineers and ensure the high-quality intelligence level of DevOps, this project starts with the DevOps theoretical framework, use machine learning method to do research, and design an intelligent DevOps platform, which can help engineers analyze huge amounts of multifarious system alarms, promotes the development of DevOps in the direction of informatization.","","978-1-6654-2313-7","10.1109/CBD51900.2020.00017","Communication University of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9406861","DevOps;machine learning;platform design","Industries;Cloud computing;Protocols;Machine learning algorithms;Data visualization;Machine learning;Software systems","business data processing;cloud computing;learning (artificial intelligence)","blockchain technologies;intelligent communication;complex sources;computer software;hardware systems;software life cycle;business risk control;business cost control;high-quality intelligence level;machine learning method;intelligent DevOps platform research;Development & Operations;SLC;business overall control","","","","25","","21 Apr 2021","","","IEEE","IEEE Conferences"
"DevOps Team Structures: Characterization and Implications","D. Lopez-Fernandez; J. Diaz; J. Garcia-Martin; J. Perez; A. Gonzalez-Prieto","Sistemas Informaticos, Universidad Politecnica de Madrid, 16771 Madrid, Madrid, Spain, (e-mail: daniel.lopez@upm.es); ETS. Ingeniera de Sistemas Informticos, Universidad Politcnica de Madrid, 16771 Madrid, Madrid, Spain, (e-mail: yesica.diaz@upm.es); ETS. Ingeniera de Sistemas Informticos, Universidad Politecnica de Madrid, 16771 Madrid, Comunidad de Madrid, Spain, (e-mail: javier.garciam@upm.es); ETS. Ingeniera de Sistemas Informticas, Universidad Politcnica de Madrid, 16771 Madrid, Comunidad de Madrid, Spain, 28031 (e-mail: jorgeenrique.perez@upm.es); ETS. Ingeniera de Sistemas Informticos, Universidad Politcnica de Madrid, 16771 Madrid, Comunidad de Madrid, Spain, (e-mail: angel.gonzalez.prieto@upm.es)","IEEE Transactions on Software Engineering","","2021","PP","99","1","1","Context: DevOps can be defined as a cultural movement to improve and accelerate the delivery of business value by making the collaboration between development and operations effective. Objective: This paper aims to help practitioners and researchers to better understand the organizational structure and characteristics of teams adopting DevOps. Method: We conducted an exploratory study by leveraging in-depth, semi-structured interviews with relevant stakeholders of 31 multinational software-intensive companies, together with industrial workshops and observations at organizations' facilities that supported triangulation. We used Grounded Theory as qualitative research method to explore the structure and characteristics of teams, and statistical analysis to discover their implications in software delivery performance. Results: We describe a taxonomy of team structures that shows emerging, stable and consolidated product teams that are classified according to six variables, such as collaboration frequency, product ownership sharing, and autonomy, among others, as well as their implications on software delivery performance. These teams are often supported by horizontal teams (DevOps platform teams, Centers of Excellence, and chapters) that provide them with platform technical capabilities, mentoring and evangelization, and even temporarily may facilitate human resources. Conclusion: This study aims to strengthen evidence and support practitioners in making better informed about organizational team structures by analyzing their main characteristics and implications in software delivery performance.","1939-3520","","10.1109/TSE.2021.3102982","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9508894","DevOps;Team Structures;Grounded Theory","Software;Companies;Interviews;Taxonomy;Telecommunications;Stakeholders;Collaboration","","","","","","","IEEE","6 Aug 2021","","","IEEE","IEEE Early Access Articles"
"Verification and validation framework for 5G network services and apps","M. Zhao; F. Le Gall; P. Cousin; R. Vilalta; R. Muñoz; S. Castro; M. Peuster; S. Schneider; M. Siapera; E. Kapassa; D. Kyriazis; P. Hasselmeyer; G. Xilouris; C. Tranoris; S. Denazis; J. Martrat","Easy Global Market; Easy Global Market; Easy Global Market; Centre Tecnològic de Telecomunicacions de Catalunya (CTTC/CERCA); Centre Tecnològic de Telecomunicacions de Catalunya (CTTC/CERCA); ATOS; Paderborn University, Germany; Paderborn University, Germany; University of Piraeus, Greece; University of Piraeus, Greece; University of Piraeus, Greece; National Center for Scientific Research Demokritos (NCSRD); University of Patras; NEC Laboratories Europe; NEC Laboratories Europe; ATOS","2017 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN)","11 Dec 2017","2017","","","321","326","5G does not only aim at higher capacity and lower latency than current 4G in mobile broadband networks, but also to increase the level of programmability, control and flexibility to meet the requirements from innovative use cases such as IoT, smart manufacturing, and immersive media. However, several difficulties still need to be overcome for a better technological adoption. To reduce the time-to-market for networked services and to lower the entry barrier to third party developers of VNFs and network services, an integrated development and operations (DevOps) methodology is a promising way. One of the biggest challenges in upcoming 5G DevOps is the validation and verification (V&V) of individual VNFs and network services (VNF graphs) so that operators can be sure of their behavior. In this paper, we propose an NFV architecture that supports the DevOps methodology with a V&V platform and an advanced NFV catalogue. The conceptual components of the V&V platform, the foreseen methodology and the outcomes are explained. Finally, we explore some perspectives in applying such V&V approach in another 5G research project.","","978-1-5386-3285-7","10.1109/NFV-SDN.2017.8169878","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8169878","","5G mobile communication;Metadata;Business;Tools;Conferences;Testing","4G mobile communication;5G mobile communication;broadband networks;Internet of Things;virtualisation","smart manufacturing;immersive media;technological adoption;time-to-market;networked services;integrated development;operations methodology;DevOps methodology;advanced NFV catalogue;foreseen methodology;5G research project;validation framework;5G network services;mobile broadband networks;5G DevOps","","16","","16","","11 Dec 2017","","","IEEE","IEEE Conferences"
"DevOps in Regulated Software Development: Case Medical Devices","T. Laukkarinen; K. Kuusinen; T. Mikkonen","Tampere Univ. of Technol., Tampere, Finland; Univ. of Central Lancashire, Preston, UK; Univ. of Helsinki, Helsinki, Finland","2017 IEEE/ACM 39th International Conference on Software Engineering: New Ideas and Emerging Technologies Results Track (ICSE-NIER)","3 Jul 2017","2017","","","15","18","DevOps and continuous development are getting popular in the software industry. Adopting these modern approaches in regulatory environments, such as medical device software, is not straightforward because of the demand for regulatory compliance. While DevOps relies on continuous deployment and integration, regulated environments require strict audits and approvals before releases. Therefore, the use of modern development approaches in regulatory environments is rare, as is the research on the topic. However, as software is more and more predominant in medical devices, modern software development approaches become attractive. This paper discusses the fit of DevOps for regulated medical device software development. We examine two related standards, IEC 62304 and IEC 82304-1, for obstacles and benefits of using DevOps for medical device software development. We found these standards to set obstacles for continuous delivery and integration. Respectively, development tools can help fulfilling the requirements of traceability and documentation of these standards.","","978-1-5386-2675-7","10.1109/ICSE-NIER.2017.20","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7966870","Regulated software;agile development;DevOps;medical software development standards","Software;IEC Standards;Medical diagnostic imaging;Tools;ISO Standards;Industries","biomedical equipment;DP industry;IEC standards;software development management;software prototyping","software development;medical devices;DevOps;continuous development;software industry;IEC 62304 standard;agile development;IEC 82304-1 standard","","23","","16","","3 Jul 2017","","","IEEE","IEEE Conferences"
"Automatic parameter tuning framework for performance diagnosis report","T. Uchiumi; Y. Saitoh; Y. Watanabe","FUJITSU LABORATORIES LTD.,DevOps Innovation Unit,4-1-1 Kamikodanaka, Nakahara-ku, Kawasaki,Japan,211-8588; FUJITSU LABORATORIES LTD.,DevOps Innovation Unit,4-1-1 Kamikodanaka, Nakahara-ku, Kawasaki,Japan,211-8588; FUJITSU LABORATORIES LTD.,DevOps Innovation Unit,4-1-1 Kamikodanaka, Nakahara-ku, Kawasaki,Japan,211-8588","2019 20th Asia-Pacific Network Operations and Management Symposium (APNOMS)","7 Nov 2019","2019","","","1","6","For ICT system operators, performance diagnosis reports that summarize the status and problems of systems in an easy-to-understand manner are important information for operating systems stably and maintaining normal conditions. In making the report, each analysis technique used for diagnosis needs its parameters tuned properly in accordance with the environment of the system. However, it is difficult for system operators to tune these parameters because they usually seem to not have enough knowledge on analysis. In this paper, we propose a framework for automatic parameter tuning that updates the parameters of analysis techniques by analyzing comments corrected by system operators in reports written in natural language. By using the framework, we confirmed that a system operator who does not have enough knowledge on analysis can easily tune the parameters of analysis techniques in accordance with the system environment.","2576-8565","978-4-88552-320-5","10.23919/APNOMS.2019.8892898","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8892898","Performance Diagnosis Reporting;Corrected Report Analysis;Automatic Parameter Tuning","Tuning;Time series analysis;Market research;Complex systems;Linear approximation;Technological innovation;Laboratories","natural language processing;operating systems (computers)","performance diagnosis;system environment;automatic parameter tuning framework;ICT system operators;easy-to-understand manner;operating systems;natural language;comment analysis","","","","11","","7 Nov 2019","","","IEEE","IEEE Conferences"
"Incorporation of Good Practices in the Development and Deployment of Applications through Alignment of ITIL and Devops","A. Belalcázar","Univ. Central del Ecuador, Quito, Ecuador","2017 International Conference on Information Systems and Computer Science (INCISCOS)","2 Apr 2018","2017","","","224","230","The areas of information technology and communications are often pressured by the organization to continuously deploy applications that meet corporate objectives. Application development is part of the driving force behind corporate strategies, whose main rationale is frequent deployment and application updates. The idea is to get a key component of IT services, which is to increase user productivity. The automation of tasks can be promoted by any traditional or agile methodology and supported by the conception of DevOps that represents the collaborative framework between developers and operators. This gear helps to achieve the most desired and complex goals. Software development lifecycle management through the DevOps structure, where each of its components is identified, helps to clearly visualize where the user's requirements are addressed and what elements are needed for optimal development of applications. The alignment of ITIL services in each of the software development phases with DevOps will give maturity to each stage of development. This paper presents the incorporation of good practices in the development and deployment of applications through the alignment of ITIL services with one of the components of the lifecycle with DevOps, in order to obtain software according to corporate objectives and user requirements.","","978-1-5386-2644-3","10.1109/INCISCOS.2017.31","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8328111","componente;DevOps;ITIL","Software;Hardware;Data centers;Computer science;Information technology;Organizations","business data processing;DP management;information technology;organisational aspects;software development management","good practices;information technology;communications;application development;driving force;corporate strategies;frequent deployment;application updates;user productivity;agile methodology;operators;complex goals;software development lifecycle management;DevOps structure;optimal development;software development phases;user requirements;ITIL services","","","","","","2 Apr 2018","","","IEEE","IEEE Conferences"
"DevOps - Preparing Students for Professional Practice","R. A. K. Jennings; G. Gannod","Tennessee Technological University,Department of Computer Science,Cookeville, TN,USA; Tennessee Technological University,Department of Computer Science,Cookeville, TN,USA","2019 IEEE Frontiers in Education Conference (FIE)","12 Mar 2020","2019","","","1","5","This work in progress paper presents a course on DevOps which is a combination of software development skills and software operations skills. This new course is for sophomores and juniors in the computer science program who want to be prepared for professional software engineering careers. Introduction to DevOps Is a hands-on laboratory course that brings students through Git for source code management, Capybara for automated testing, AWS, Docker, and Ansible for automated virtual machine provisioning and configuration, and Jenkins for Continuous Integration. Unlike our current course offerings which primarily focus on the single developer context in a localized environment, this course prepares students for highly collaborative, team-based projects that use cloud resources to facilitate management of the software deployment pipeline. We developed this course based on feedback from our external advisory board and under consultation from a number of industrial partners. This is complementary to our current offerings in software engineering which focus on Agile software practices. In this paper we describe the core concepts, the design, learning experiences, technologies, and lessons learned through developing and conducting this course. In future work we hope to present student perceptions of learning and provide data collected through direct assessment of student outcomes.","2377-634X","978-1-7281-1746-1","10.1109/FIE43999.2019.9028598","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9028598","","Tools;Software;Computer science;Testing;Pipelines;Education;Production","cloud computing;computer aided instruction;computer science education;educational courses;software prototyping;virtual machines","DevOps;professional practice;software development skills;software operations skills;computer science program;professional software engineering careers;hands-on laboratory course;source code management;automated testing;single developer context;highly collaborative team-based projects;cloud resources;software deployment pipeline;external advisory board;agile software practices;automated virtual machine","","6","","36","","12 Mar 2020","","","IEEE","IEEE Conferences"
"CloudWave: Where adaptive cloud management meets DevOps","D. Bruneo; T. Fritz; S. Keidar-Barner; P. Leitner; F. Longo; C. Marquezan; A. Metzger; K. Pohl; A. Puliafito; D. Raz; A. Roth; E. Salant; I. Segall; M. Villari; Y. Wolfsthal; C. Woods","Università degli Studi di Messina, Italia; University of Zurich, Switzerland; IBM, Haifa Research Lab, Israel; University of Zurich, Switzerland; Università degli Studi di Messina, Italia; University of Duisburg-Essen, Germany; University of Duisburg-Essen, Germany; University of Duisburg-Essen, Germany; Università degli Studi di Messina, Italia; Technion University, Israel; SAP, Germany; IBM, Haifa Research Lab, Israel; IBM, Haifa Research Lab, Israel; Università degli Studi di Messina, Italia; IBM, Haifa Research Lab, Israel; Intel, Ireland","2014 IEEE Symposium on Computers and Communications (ISCC)","29 Sep 2014","2014","Workshops","","1","6","The transition to cloud computing offers a large number of benefits, such as lower capital costs and a highly agile environment. Yet, the development of software engineering practices has not kept pace with this change. Moreover, the design and runtime behavior of cloud based services and the underlying cloud infrastructure are largely decoupled from one another.This paper describes the innovative concepts being developed by CloudWave to utilize the principles of DevOps to create an execution analytics cloud infrastructure where, through the use of programmable monitoring and online data abstraction, much more relevant information for the optimization of the ecosystem is obtained. Required optimizations are subsequently negotiated between the applications and the cloud infrastructure to obtain coordinated adaption of the ecosystem. Additionally, the project is developing the technology for a Feedback Driven Development Standard Development Kit which will utilize the data gathered through execution analytics to supply developers with a powerful mechanism to shorten application development cycles.","1530-1346","978-1-4799-4277-0","10.1109/ISCC.2014.6912638","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6912638","Cloud Computing;DevOps;Coordinated Adaptation;Feedback Driven Development","Cloud computing;Monitoring;Technological innovation;Software reliability;Real-time systems","cloud computing;data structures;feedback;software prototyping","CloudWave;adaptive cloud management;DevOps;cloud computing;agile environment;software engineering practice;runtime behavior;cloud based services;execution analytics cloud infrastructure;programmable monitoring;online data abstraction;ecosystem;coordinated adaption;feedback driven development standard development kit;application development cycle","","24","","29","","29 Sep 2014","","","IEEE","IEEE Conferences"
"A web-based service deployment method to edge devices in smart factory exploiting Docker","J. Ha; J. Kim; H. Park; J. Lee; H. Jo; H. Kim; J. Jang","Software R&D Center, Samsung Electronics Co., Ltd., Seoul, South Korea; Software R&D Center, Samsung Electronics Co., Ltd., Seoul, South Korea; Software R&D Center, Samsung Electronics Co., Ltd., Seoul, South Korea; Software R&D Center, Samsung Electronics Co., Ltd., Seoul, South Korea; Software R&D Center, Samsung Electronics Co., Ltd., Seoul, South Korea; Software R&D Center, Samsung Electronics Co., Ltd., Seoul, South Korea; Software R&D Center, Samsung Electronics Co., Ltd., Seoul, South Korea","2017 International Conference on Information and Communication Technology Convergence (ICTC)","14 Dec 2017","2017","","","708","710","Recently, a micro-service architecture has been adopted to an edge device in smart factory due to its maintainability and scalability. In the architecture, all services are generally implemented as Docker containers and deployed by Docker APIs which might be harsh to a factory operator. In this paper, we propose an easy-to-use web-based service deployment method for containerized service to in-factory edge device for supporting DevOps to factory operator.","","978-1-5090-4032-2","10.1109/ICTC.2017.8190760","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8190760","Service deployment;DevOps;Docker;Microservice;Smart factory","Containers;Production facilities;Software;Servers;Computer architecture;Image edge detection;Performance evaluation","application program interfaces;cloud computing;production engineering computing;production facilities;service-oriented architecture;virtualisation","containerized service;in-factory edge device;factory operator;microservice architecture;Docker containers;Docker APIs;Web-based service deployment method;smart factory;Docker;DevOps","","9","","5","","14 Dec 2017","","","IEEE","IEEE Conferences"
"Compliance at Velocity within a DevOps Environment","M. Z. Abrahams; J. J. Langerman","Academy of Computer Science and Software Engineering, Faculty of Science, University of Johannesburg, Johannesburg, Gauteng, South Africa; Academy of Computer Science and Software Engineering, Faculty of Science, University of Johannesburg, Johannesburg, Gauteng, South Africa","2018 Thirteenth International Conference on Digital Information Management (ICDIM)","26 Sep 2019","2018","","","94","101","DevOps has become an emerging force within the Information Technology field in today's development/operations climate. Information security within a DevOps environment has become a focal point for most organizations that have implemented the DevOps methodology and its principles. In most cases, the ability to secure a DevOps environment and the organization's ability to adhere to, and comply with, industry specific standards, frameworks and best practice is an integral part of information security within a DevOps environment. This investigation aims to address those issues that may arise when an organization seeks to adhere to and comply with industry standards, frameworks and best practice in a manner that does not limit the velocity of the organization's automated delivery/deployment pipeline. This study investigates this by collecting and analyzing industry and academic literature; and through a prototype demonstration, understanding technical compliance and its requirements within a DevOps environment, using existing industry tools and solutions.","","978-1-5386-5244-2","10.1109/ICDIM.2018.8847007","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8847007","DevOps;DevSecOps;Compliance at Velocity","","security of data;software prototyping","DevOps environment;information security;automated delivery pipeline;automated deployment pipeline","","1","","15","","26 Sep 2019","","","IEEE","IEEE Conferences"
"Communication Challenges and Strategies in Distributed DevOps","E. Diel; S. Marczak; D. S. Cruzes","Comput. Sci. Sch., PUCRS, Porto Alegre, Brazil; Comput. Sci. Sch., PUCRS, Porto Alegre, Brazil; SINTEF, Trondheim, Norway","2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)","29 Sep 2016","2016","","","24","28","Even though agile actively seeks collaboration from all its stakeholders, most agile projects do not extend themselves toward the operations people. To solve this problem, DevOps is introduced. DevOps is a conceptual framework for reintegrating development and operations of Information Systems, which is able to break the wall between developers and operations professionals. DevOps improves the work through a collection of principles and practices, centered around close collaboration between Development and Operations personnel. However, both sides have paid little attention to issues faced by each other. Communication gaps is a recurrent problem in agile teams that is also eminent in the relationship between developers and operations. Literature offers little research on this aspect of communication in DevOps. This position paper describes the communication practices from a distributed agile team composed of developers and operations based on communication challenges (geographical, socio-cultural, and temporal distance) and strategies (frequency, direction, modality, and content). From the results we outline possible research focus for future work, aiming to enrich the academia research on the matter as well as to help practitioners to improve their working practices.","2329-6313","978-1-5090-2680-7","10.1109/ICGSE.2016.28","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7577415","DevOps;communication challenges;communication strategy;distributed teams","Software;Interviews;Collaboration;Companies;Production;Personnel","distributed processing","communication challenge;communication strategy;distributed DevOps framework;information system;communication gaps;geographical challenge;socio-cultural challenge;temporal distance challenge;frequency strategy;direction strategy;modality strategy;content strategy;working practices","","13","","30","","29 Sep 2016","","","IEEE","IEEE Conferences"
"DevOps Improvements for Reduced Cycle Times with Integrated Test Optimizations for Continuous Integration","D. Marijan; M. Liaaen; S. Sen","Simula, Norway; Cisco Syst., Norway; Simula, Norway","2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC)","22 Jun 2018","2018","01","","22","27","DevOps, as a growing development practice that aims to enable faster development and efficient deployment of applications without compromising on quality, is often hampered by long cycle times. One contributing factor to long cycle times in DevOps is long build time. Automated testing in continuous integration is one of the build stages that is highly prone to long run-time due to software complexity and evolution, and inefficient due to unoptimized testing approaches. To be cost-effective, testing in continuous integration needs to use only a fast-running set of comprehensive tests that are able to ensure the level of quality needed for deployment to production. Known approaches use time-aware test selection methods to improve time-efficiency of continuous integration testing by providing optimized combinations and order of tests with respect to decreased run-time. However, focusing on time-efficiency as the sole criterion in DevOps often jeopardizes the quality of software deliveries. This paper proposes a technique that integrates fault-based and risk-based test selection and prioritization optimized for low run-time, to improve time-effectiveness of continuous integration testing, and thus reduce long cycle times in DevOps, without compromising on quality. The technique has been evaluated in testing of a large-scale configurable software in continuous integration, and has shown considerable improvement over industry practice with respect to time-efficiency.","0730-3157","978-1-5386-2667-2","10.1109/COMPSAC.2018.00012","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8377636","DevOps, Continuous integration testing, Test prioritization, History-based test prioritization, Risk-based test optimization, Fault-based test prioritization","Testing;Software;Optimization;Production;Fault detection;Industries;Indexes","program testing","unoptimized testing approaches;comprehensive tests;time-aware test selection methods;continuous integration testing;risk-based test selection;time-effectiveness;DevOps improvements;integrated test optimizations;automated testing","","5","","20","","22 Jun 2018","","","IEEE","IEEE Conferences"
"Auto-Generation of Domain-Specific Systems: Cloud-Hosted DevOps for Business Users","S. Sinha; T. Astigarraga; R. B. Hull; N. Jean-Louis; V. Sreedhar; H. Chen; L. X. Hu; F. E. Carpi; J. A. B. Cannata; W. Loach","IBM T.J. Watson Research Center,USA; IBM T.J. Watson Research Center,USA; New York University,USA; University of Illinois at Urbana-Champaign,USA; IBM Cloud,USA; IBM Research - China; IBM Research - China; IBM Argentina; IBM Argentina; IBM United Kingdom","2020 IEEE 13th International Conference on Cloud Computing (CLOUD)","18 Dec 2020","2020","","","219","228","The wide use of spreadsheet-based solutions for business processes illustrates the importance of giving business users simple mechanisms for specifying and managing their processes. However, spreadsheet-based solutions are hard to maintain, reuse, integrate, and scale. This paper describes an approach for supporting “DevOps for business users” that enables business-level users to manage the full lifecycle of a large class of cloud-hosted business processes. The approach builds on DevOps for software engineering, but removes software engineers from the loop. Unlike general-purpose “low code” business process management systems, the approach incorporates aspects of a processing domain (e.g., billing) to create a DevOps experience that business users can master easily. In the approach, business users follow an agile “specify-check-generate-deploy” methodology, enabling them to rapidly and iteratively generate and operationalize cloud-hosted processing systems, with little or no assistance from IT staff. We demonstrate and evaluate the approach using a system built for the billing application area, developed at IBM, which provides technology support and maintenance services for numerous clients, each with different billing needs and logic. The paper describes the system, requirements, empirical evaluation of key components, and lessons learned.","2159-6190","978-1-7281-8780-8","10.1109/CLOUD49709.2020.00041","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284260","Cloud application, model driven engineering, DevOps, business rules language, code generation, deployment automation","Cloud computing;Conferences;Maintenance engineering;Software;Business process management;Business;Software engineering","business data processing;cloud computing;general purpose computers;software engineering;spreadsheet programs","cloud-hosted processing systems;domain-specific systems;spreadsheet-based solutions;business users simple mechanisms;cloud-hosted business processes;software engineering;general-purpose low code business process management systems;cloud-hosted devops;specify-check-generate-deploy methodology","","","","22","","18 Dec 2020","","","IEEE","IEEE Conferences"
"CMMI Guided Process Improvement for DevOps Projects: An Exploratory Case Study","G. Rong; H. Zhang; D. Shao","State Key Lab. of Novel, Nanjing Univ., Nanjing, China; Software Inst., Nanjing Univ., Nanjing, China; Software Inst., Nanjing Univ., Nanjing, China","2016 IEEE/ACM International Conference on Software and System Processes (ICSSP)","26 Jan 2017","2016","","","76","85","Very recently, an increasing number of software companies adopted DevOps to adapt themselves to the ever-changing business environment. While it is important to mature adoption of the DevOps for these companies, no dedicated maturity models for DevOps exist. Meanwhile, maturity models such as CMMI models have demonstrated their effects in the traditional paradigm of software industry, however, it is not clear whether the CMMI models could guide the improvements with the context of DevOps. This paper reports a case study aiming at evaluating the feasibility to apply the CMMI models to guide process improvement for DevOps projects and identifying possible gaps. Using a structured method(i.e., SCAMPI C), we conducted a case study by interviewing four employees from one DevOps project. Based on evidence we collected in the case study, we managed to characterize the maturity/capability of the DevOps project, which implies the possibility to use the CMMI models to appraise the current processes in this DevOps project and guide future improvements. Meanwhile, several gaps also are identified between the CMMI models and the DevOps mode. In this sense, the CMMI models could be taken as a good foundation to design suitable maturity models so as to guide process improvement for projects adopting the DevOps.","","978-1-4503-4188-2","10.1109/ICSSP.2016.018","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7831578","DevOps;CMMI;Software Process Improvement","Software;Companies;Context;Context modeling;Appraisal","Capability Maturity Model;project management;software management","DevOps project;software process improvement;Capability Maturity Model Integration;CMMI model","","","","28","","26 Jan 2017","","","IEEE","IEEE Conferences"
"Design of Devops environment based on cloud platform architecture","J. Li; W. Li; X. Zhang; J. Duan; H. Wang","Information and Communication Branch of State Grid Corporation of China,Beijing,China; Information and Communication Branch of State Grid Corporation of China,Beijing,China; Information and Communication Branch of State Grid Corporation of China,Beijing,China; Information and Communication Branch of State Grid Corporation of China,Beijing,China; Information and Communication Branch of State Grid Corporation of China,Beijing,China","2022 IEEE 6th Information Technology and Mechatronics Engineering Conference (ITOEC)","23 Mar 2022","2022","6","","95","99","This paper designs a cloud-based R&D simulation environment construction method, builds an enterprise-level online DevOps system, opens up all aspects of R&D, testing, and production, realizes the online integration of the entire process of R&D, testing, and release, and improves the R&D and testing environment. Automated testing, automatic deployment capabilities, improved production environment “one-click release” capabilities, shortened the overall cycle of R&D and testing, explained the construction methods of unified code warehouse, dependent warehouse, and mirrored warehouse, realized centralized management of company code, and unified management of dependent warehouse version. Solve the problem of code leakage and reduce the risk of safe operation.","2693-289X","978-1-6654-3185-9","10.1109/ITOEC53115.2022.9734518","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9734518","R&D simulation environment;Integration;Devops;Cloud architecture","Codes;Mechatronics;Publishing;Conferences;Production;Companies;Maintenance engineering","","","","","","16","","23 Mar 2022","","","IEEE","IEEE Conferences"
"DevOps culture and its impact on cloud delivery and software development","M. Rajkumar; A. K. Pole; V. S. Adige; P. Mahanta","SAP Labs Pvt. Ltd., Bangalore, India; SAP Labs Pvt. Ltd., Bangalore, India; SAP Labs Pvt. Ltd., Bangalore, India; SAP Labs Pvt. Ltd., Bangalore, India","2016 International Conference on Advances in Computing, Communication, & Automation (ICACCA) (Spring)","29 Sep 2016","2016","","","1","6","DevOps presents a significant broader perspective in delivering software solutions. The perception of DevOps being a mere tool has been formulated into a change in culture, paradigms in automation, clarity in measuring risks and facilitating ease of sharing. DevOps has been responsible for companies to move from a monolithic pace of software releases to an agile mindset. This paper discovers the significance of DevOps and tries to explore the process of transformation from a legacy method and onto the impact of the change on overall architecture and software scale out. The transformation from a legacy mindset to agile mindset requires a formidable change to the organizational setup. The journey of adoption of such a culture requires various degrees of effort and techniques. In this paper, we cover the concepts, adoption strategies and the impact of such adoption strategies.","","978-1-5090-0673-1","10.1109/ICACCA.2016.7578902","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7578902","DevOps;Culture;Leadership;Agile","Software;Organizations;Engines;Computer architecture;Standards organizations;Production","cloud computing;software architecture;software prototyping","DevOps culture;cloud delivery;software development;software solutions;legacy method;legacy mindset;agile mindset;adoption strategies","","15","","14","","29 Sep 2016","","","IEEE","IEEE Conferences"
"DevOps for IoT Systems: Fast and Continuous Monitoring Feedback of System Availability","M. A. López-Peña; J. Díaz; J. E. Pérez; H. Humanes","Department of Innovation and Development, Sistemas Avanzados de Tecnología, S.A., Madrid, Spain; Departamento de Sistemas Informáticos, Universidad Politécnica de Madrid, Madrid, Spain; Departamento de Sistemas Informáticos, Universidad Politécnica de Madrid, Madrid, Spain; Department of Innovation and Development, Sistemas Avanzados de Tecnología, S.A., Madrid, Spain","IEEE Internet of Things Journal","9 Oct 2020","2020","7","10","10695","10707","Current Internet-of-Things (IoT) systems are highly distributed systems, which integrate cloud, fog, and edge computing approaches. Accelerating their maintenance and continuous improvement, while ensuring their availability, is complex. DevOps promotes fast and continuous feedback from operations to development to detect problems before customers are impacted, among other benefits. However, there is not any formal definition of how to do this. This article defines the “fast and continuous monitoring feedback of system availability” activity (F&CF availability) that supports automatic and continuous monitoring feedback from operations to the development of the IoT system availability. This activity has been formalized through the software and systems process engineering metamodel (SPEM). Its implementation is demonstrated in a real scenario that provides evidence that the formalization of the F&CF availability activity helps teams in better diagnosing and fixing outage problems. The result is a distributed and configurable monitoring component developed through code [monitoring as code (MaC)]. This component is embedded in the IoT infrastructure. MaC enables DevOps team to configure their own metrics and indicators at runtime, i.e., monitoring on demand. The formalization of this activity, based on an MaC technique, enables the automation, versioning, and replication of monitoring elements.","2327-4662","","10.1109/JIOT.2020.3012763","European Commission’s Horizon 2020 Research and Innovation Programme (RECAP, http://www.recapproject.eu)(grant numbers:732667); CROWDSAVING(grant numbers:TIN2016-79726-C2-1-R); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9151987","Availability;continuous monitoring;DevOps;fast and continuous feedback activity;Internet-of-Things (IoT) systems","Monitoring;Task analysis;Internet of Things;Software;Telemetry;Maintenance engineering","cloud computing;Internet of Things;systems engineering","Internet-of-Things systems;edge computing approaches;automatic monitoring feedback;IoT system availability;F&CF availability activity;fixing outage problems;distributed monitoring component;configurable monitoring component;IoT infrastructure;monitoring elements;distributed systems;fog computing approaches;cloud computing approaches;DevOps;fast and continuous monitoring feedback of system availability activity;software and systems process engineering metamodel;SPEM;MaC technique","","7","","41","IEEE","29 Jul 2020","","","IEEE","IEEE Journals"
"Standards-Based DevOps Automation and Integration Using TOSCA","J. Wettinger; U. Breitenbücher; F. Leymann","Inst. of Archit. of Applic. Syst. (IAAS), Univ. of Stuttgart, Stuttgart, Germany; Inst. of Archit. of Applic. Syst. (IAAS), Univ. of Stuttgart, Stuttgart, Germany; Inst. of Archit. of Applic. Syst. (IAAS), Univ. of Stuttgart, Stuttgart, Germany","2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing","2 Feb 2015","2014","","","59","68","DevOps is an emerging paradigm to tightly integrate developers with operations personnel. This is required to enable fast and frequent releases in the sense of continuously delivering software. Users and customers of today's Web applications and mobile apps running in the Cloud expect fast feedback to problems and feature requests. Thus, it is a critical competitive advantage to be able to respond quickly. Beside cultural and organizational changes that are necessary to implement DevOps in practice, tooling is required to implement end-to-end automation of deployment processes. Automation is the key to efficient collaboration and tight integration between development and operations. The DevOps community is constantly pushing new approaches, tools, and open-source artifacts to implement such automated processes. However, as all these proprietary and heterogeneous DevOps automation approaches differ from each other, it is hard to integrate and combine them to deploy applications in the Cloud. In this paper we present a systematic classification of DevOps artifacts and show how different kinds of artifacts can be transformed toward TOSCA, an emerging standard in this field. This enables the seamless and interoperable orchestration of arbitrary artifacts to model and deploy application topologies. We validate the presented approach by a prototype implementation, show its practical feasibility by a detailed case study, and evaluate its performance.","","978-1-4799-7881-6","10.1109/UCC.2014.14","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7027481","DevOps;Deployment Automation;Transformation;TOSCA;Chef;Juju;Cloud Standards;Cloud Computing","Servers;Automation;Topology;Databases;Communities;Runtime;Containers","cloud computing;formal specification","standards-based DevOps automation;TOSCA;cloud computing;topology and orchestration specification for cloud application","","46","2","35","","2 Feb 2015","","","IEEE","IEEE Conferences"
"Insights from SONATA: Implementing and integrating a microservice-based NFV service platform with a DevOps methodology","T. Soenen; S. Van Rossem; W. Tavernier; F. Vicens; D. Valocchi; P. Trakadas; P. Karkazis; G. Xilouris; P. Eardley; S. Kolometsos; M. -A. Kourtis; D. Guija; S. Siddiqui; P. Hasselmeyer; J. Bonnet; D. Lopez",Ghent University – imec; Ghent University – imec; Ghent University – imec; ATOS; University College London; Synelixis Solutions; Synelixis Solutions; NSCR Demokritos; BT; NSCR Demokritos; NSCR Demokritos; i2CAT Foundation Barcelona; i2CAT Foundation Barcelona; NEC Europe Ltd. Heidelberg; Altice Labs; Telefonica I+D,"NOMS 2018 - 2018 IEEE/IFIP Network Operations and Management Symposium","9 Jul 2018","2018","","","1","6","In pursuit of a flexible, resource efficient and high- performant 5G infrastructure, many operators, vendors and research consortia are currently developing, testing and inte­grating their NFV platform with associated management and orchestration (MANO) functionality. The SONATA NFV platform follows a micro-service design, which involves a tight coupling between an SDK, monitoring and MANO functionality, targeting a secure and stable software foundation. This experience paper gives a thorough overview on the encountered challenges, insights and resulting learnings when implementing and integrating the SONATA Service Platform using a continuous integration and delivery DevOps methodology. This is the result of a strong cooperation between prominent equipment vendors, network operators, software companies and universities, providing a set of constructive recommendations in hope of catalysing the development and deployment of NFV platforms.","2374-9709","978-1-5386-3416-5","10.1109/NOMS.2018.8406139","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8406139","","Monitoring;Task analysis;Measurement;5G mobile communication;Servers;Software;Tools","5G mobile communication;service-oriented architecture;software architecture;virtualisation","microservice-based NFV service platform;DevOps methodology;SONATA NFV platform;network function virtualization;SONATA service platform;software foundation;MANO functionality;associated management-orchestration functionality;high-performant 5G infrastructure;equipment vendors","","13","","15","","9 Jul 2018","","","IEEE","IEEE Conferences"
"Automated Capturing and Systematic Usage of DevOps Knowledge for Cloud Applications","J. Wettinger; V. Andrikopoulos; F. Leymann","Inst. of Archit. of Applic. Syst. (IAAS), Univ. of Stuttgart, Stuttgart, Germany; Inst. of Archit. of Applic. Syst. (IAAS), Univ. of Stuttgart, Stuttgart, Germany; Inst. of Archit. of Applic. Syst. (IAAS), Univ. of Stuttgart, Stuttgart, Germany","2015 IEEE International Conference on Cloud Engineering","23 Apr 2015","2015","","","60","65","DevOps is an emerging paradigm to actively foster the collaboration between system developers and operations in order to enable efficient end-to-end automation of software deployment and management processes. DevOps is typically combined with Cloud computing, which enables rapid, on-demand provisioning of underlying resources such as virtual servers, storage, or database instances using APIs in a self-service manner. Today, an ever-growing amount of DevOps tools, reusable artifacts such as scripts, and Cloud services are available to implement DevOps automation. Thus, informed decision making on the appropriate approach (es) for the needs of an application is hard. In this work we present a collaborative and holistic approach to capture DevOps knowledge in a knowledgebase. Beside the ability to capture expert knowledge and utilize crowd sourcing approaches, we implemented a crawling framework to automatically discover and capture DevOps knowledge. Moreover, we show how this knowledge is utilized to deploy and operate Cloud applications.","","978-1-4799-8218-9","10.1109/IC2E.2015.23","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7092900","DevOps;Crawling;Knowledge Management;Knowledge Model;Cloud Computing","Middleware;Servers;Databases;Knowledge engineering;Google;Engines;Collaboration","application program interfaces;cloud computing","systematic usage;automated capturing;DevOps knowledge;cloud applications;end-to-end automation;software deployment process;software management process;cloud computing;virtual servers;API;cloud services;knowledge base systems","","26","","15","","23 Apr 2015","","","IEEE","IEEE Conferences"
"From Agile to Continuous Development in the Healthcare Domain - Lessons Learned","W. Stocker","Siemens Healthineers, Forchheim, Germany","2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)","30 Aug 2018","2018","","","211","212","Starting in 2006 our organization in the healthcare domain began a shift towards agile-like development rather than a strict interpretation of the ""V-model"". But this was only the beginning of an ongoing journey. Today modern software engineering is characterized by much faster development cycles than those used in traditional models. Our business demands that we shorten release cycles and support many different deployment scenarios. Due to the nature of our products, it is also necessary to address the relevant regulatory requirements which make this task even more challenging. Over the years, we have made a number of improvements in the spirit of ""continuous improvement"" that have helped us reap the benefits of a more continuous way-of-working. These include organizational, architectural, and process-based improvements as well as explicitly focusing on the necessary culture in the organization. This experience report is a summary of our learnings and hopefully will provide something for everyone that helps on their own journey.","","978-1-4503-5659-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8449252","Agile;Continuous Delivery;DevOps;Software Architecture;Best Practice Sharing;Software Engineering","Software;Software engineering;Computed tomography;Medical services;Computer architecture;Architecture;Organizations","health care;learning (artificial intelligence);organisational aspects;software development management;software engineering;software quality","continuous development;strict interpretation;V-model;ongoing journey;today modern software engineering;faster development cycles;relevant regulatory requirements;process-based improvements;healthcare domain","","","","0","","30 Aug 2018","","","IEEE","IEEE Conferences"
"To Transform to Have Agility, Dont Do a Capital A, Capital T Agile Transformation","J. Smart",Barclays,"IEEE Software","29 Nov 2018","2018","35","6","56","60","This article presents antipatterns (and the corresponding patterns) based on the author's experience implementing agility at Barclays. In recent years, enterprise -wide DevOps and agile at scale have surged. Compared to nearly 30 years of ""lightweight methodologies"" for team -level software development, this is a new field. DevOps emerged as a term in 2009, with scaled agile frameworks coming out comparatively recently: SAFe (Scaled Agile Framework) in 2011, Disciplined Agile in 2012, and LeSS (Large Scale Scrum) in 2013. However, relatively little research is available about these frameworks' effectiveness in practice, especially on an enterprise scale.","1937-4194","","10.1109/MS.2018.4321245","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8552621","agile transformation;agile development;agility;Barclays;DevOps;software engineering;software development;On DevOps","Software engineering;Software development;Agile software development","DP industry;project management;software development management;software prototyping;team working","agile transformation;enterprise-wide DevOps;team-level software development;agile frameworks;SAFe;Scaled Agile Framework;antipatterns","","4","","14","","29 Nov 2018","","","IEEE","IEEE Magazines"
"A DevOps Approach for Cyber-Physical System-of-Systems Engineering through Arrowhead","C. Hegedũs; P. Varga; A. Frankó","Budapest University of Technology and Economics, 2 Magyar Tudósok krt.,Dept. of Telecommunications and Media Informatics,Budapest,Hungary,H-1117; Budapest University of Technology and Economics, 2 Magyar Tudósok krt.,Dept. of Telecommunications and Media Informatics,Budapest,Hungary,H-1117; Industrial IoT Division, 48-50 Czetz János str,AITIA International Inc.,Budapest,Hungary,H-1039","2021 IFIP/IEEE International Symposium on Integrated Network Management (IM)","30 Jun 2021","2021","","","902","907","The stakeholders in the Cyber-Physical System-of-Systems (CPS, SoS, CPSoS) domains need to adopt current methodologies that enable reliable but also flexible and timely completion of development, integration, deployment, operation, and even maintenance-related tasks. The so-called DevOps (Development & Operations) approach has been proven in various other domains of IT-related service completion and operation. Both the technology set and the management approaches of CPS and SoS practitioners can benefit the adoption of the DevOps toolchain success stories - the everyday life of software, cloud and IT-service development, and operations-focused companies. This paper proposes an expansion of the application area of the DevOps models, toolchains, and even utilities to the CPS and SoS domains. It proposes to create an abstraction of CPS devices as reusable infrastructure resources, which can be then automatically re-purposed for new workflow tasks, as well as to fill the remaining DevOps tooling gaps with actual Systems of the Arrowhead Framework.","1573-0077","978-3-903176-32-4","","European Commission; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9464069","","Companies;Software;Stakeholders;Reliability;Task analysis","cloud computing;cyber-physical systems;open systems;software engineering;systems engineering;systems of systems","DevOps approach;IT-related service completion;management approaches;DevOps toolchain success stories;IT-service development;operations-focused companies;CPS devices;cyber-physical system-of-systems engineering;development & operations approach;SoS practitioners;arrowhead framework","","","","37","","30 Jun 2021","","","IEEE","IEEE Conferences"
"Breaking down monoliths with Microservices and DevOps: an industrial experience report","D. Pianini; A. Neri","Alma Mater Studiorum—Università di Bologna,Cesena,Italy; Maggioli S.p.A. Santarcangelo di Romagna,Italy","2021 IEEE International Conference on Software Maintenance and Evolution (ICSME)","24 Nov 2021","2021","","","505","514","Recent trends in software production fostered the adoption of microservice architectures, where a product is the result of the coordinated execution of several loosely coupled autonomous services, thus promoting modularity, scalability, and integration of legacy products by wrapping. This architectural style also promotes parallel development, as different teams can be in charge of different services; however, this parallelization is at first sight at odds with the established practice of continuous integration: a change to a single service may cause cascading effects that the local testing cannot capture, and the overall functionality may thus get compromised even though all services apparently work. In this paper, we report an experience of a successful and thorough implementation of DevOps techniques into a large business, carried out by a relatively small team. We discuss the steps taken to build a continuous integration pipeline performing system-wide quality assurance, the development practices that enable such a pipeline to be effective, and the lessons learned by applying these practices in a digital publishing industry setting.","2576-3148","978-1-6654-2882-8","10.1109/ICSME52107.2021.00051","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9609206","Microservice architectures;DevOps;Continuous Integration;Parallel development;Distributed testing;Continuous delivery;Experience report","Software maintenance;Runtime environment;Quality assurance;Scalability;Pipelines;Production;Computer architecture","cloud computing;Internet;program testing;quality assurance;service-oriented architecture;software architecture;software prototyping;Web services","monoliths;Microservices;industrial experience report;software production;microservice architectures;coordinated execution;loosely coupled autonomous services;legacy products;wrapping;architectural style;parallel development;parallelization;odds;established practice;single service;cascading effects;local testing;successful implementation;thorough implementation;DevOps techniques;relatively small team;continuous integration pipeline;system-wide quality assurance;development practices;digital publishing industry setting","","","","29","","24 Nov 2021","","","IEEE","IEEE Conferences"
"Improving Digital Forensic Readiness in DevOps Context: Lessons Learned from XYZ Company","F. Gunawan; S. Yazid","Universitas Indonesia,Faculty of Computer Science,Jakarta,Indonesia; Universitas Indonesia,Faculty of Computer Science,Jakarta,Indonesia","2020 International Seminar on Application for Technology of Information and Communication (iSemantic)","26 Oct 2020","2020","","","459","463","DevOps is a relatively new methodology and culture in software development to deliver software faster and with higher quality. DevOps changes how an organization works by flattening structures, increasing collaboration, and also promotes automation. However, it might pose serious security problems if outsourcing, intellectual property, and data protection are not put into consideration. XYZ Company is a typical small software company that is transforming to embrace DevOps. Digital forensic is a post-mortem mechanism to analyze incidents to help organizations mitigate and doing lawsuits. Digital forensic readiness (DFR) is assessed using Elyas et al [3] DFR framework. DFR improvement is part of the company’s effort to maintain the security level. The method we took and the issues we faced in this transformation are shared in this report.","","978-1-7281-9068-6","10.1109/iSemantic50169.2020.9234194","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9234194","digital forensic;DevOps;software development;readiness","Training;Seminars;Digital forensics;Companies;Software;Knowledge management;Outsourcing","cloud computing;computer crime;cost reduction;digital forensics;organisational aspects;outsourcing","postmortem mechanism;DFR improvement;organizations;data protection;intellectual property;outsourcing property;serious security problems;flattening structures;software development;XYZ company;DevOps context;digital forensic readiness","","1","","27","","26 Oct 2020","","","IEEE","IEEE Conferences"
"User stories to user reality: A DevOps approach for the cloud","R. Punjabi; R. Bajaj","Dept. of Computer Engineering, Thadomal Shahani Engineering College, Mumbai, India; Dept. of Computer Engineering, Thadomal Shahani Engineering College, Mumbai, India","2016 IEEE International Conference on Recent Trends in Electronics, Information & Communication Technology (RTEICT)","9 Jan 2017","2016","","","658","662","The `DevOps' phenomenon that advocates a collaborative and unified method for delivering software, has been gaining tremendous attention from various sectors of the IT industry with organizations adopting this movement exhibiting significant growth in performance. It can be challenging for an organization to commence their DevOps journey owing to the abundant and diverse resources available. There is a need to have an all-inclusive picture of DevOps and how its related concepts can be leveraged to improve delivery of software applications to end-users while enhancing quality and reducing lead time. This paper strives to bring insight into the practices associated with DevOps. An end-to-end solution is provided through an integrated toolchain and a customizable workflow. The role of Docker containers is considered in the context of extending infrastructure provisioning capability of the workflow. In a bid to accelerate delivery and improve testability of applications, a framework to automate Model-View-Controller architectures has been proposed. Through these processes, the cyclical journey of an application is traced from `User Stories' to a running state - `User Reality' on the cloud.","","978-1-5090-0774-5","10.1109/RTEICT.2016.7807905","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7807905","DevOps;Continuous Delivery;Application Lifecycle Management;Software Engineering","Testing;Production;Containers;Automation;Navigation;Servers;Collaboration","cloud computing;software architecture;software quality","user stories;user reality;DevOps approach;IT industry;software applications;lead time;end-to-end solution;integrated toolchain;customizable workflow;docker containers;infrastructure provisioning capability;model-view-controller architectures;cloud","","7","","15","","9 Jan 2017","","","IEEE","IEEE Conferences"
"Adopting Autonomic Computing Capabilities in Existing Large-Scale Systems","H. Li; T. Chen; A. E. Hassan; M. Nasser; P. Flora","Queen's Univ., Kingston, ON, Canada; Concordia Univ., Montreal, QC, Canada; Queen's Univ., Kingston, ON, Canada; BlackBerry, Waterloo, ON, Canada; BlackBerry, Waterloo, ON, Canada","2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)","30 Aug 2018","2018","","","1","10","In current DevOps practice, developers are responsible for the operation and maintenance of software systems. However, the human costs for the operation and maintenance grow fast along with the increasing functionality and complexity of software systems. Autonomic computing aims to reduce or eliminate such human intervention. However, there are many existing large systems that did not consider autonomic computing capabilities in their design. Adding autonomic computing capabilities to these existing systems is particularly challenging, because of 1) the significant amount of efforts that are required for investigating and refactoring the existing code base, 2) the risk of adding additional complexity, and 3) the difficulties for allocating resources while developers are busy adding core features to the system. In this paper, we share our industrial experience of re-engineering autonomic computing capabilities to an existing large-scale software system. Our autonomic computing capabilities effectively reduce human intervention on performance configuration tuning and significantly improve system performance. In particular, we discuss the challenges that we encountered and the lessons that we learned during this re-engineering process. For example, in order to minimize the change impact to the original system, we use a variety of approaches (e.g., aspect-oriented programming) to separate the concerns of autonomic computing from the original behaviour of the system. We also share how we tested such autonomic computing capabilities under different conditions, which has never been discussed in prior work. As there are numerous large-scale software systems that still require expensive human intervention, we believe our experience provides valuable insights to software practitioners who wish to add autonomic computing capabilities to these existing large-scale software systems.","","978-1-4503-5659-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8449229","Autonomic computing;software re-engineering;performance engineering;software testing","Software systems;Large-scale systems;Maintenance engineering;Testing;Runtime","large-scale systems;object-oriented programming;software architecture;software development management;software fault tolerance;software maintenance;software quality","re-engineering autonomic computing capabilities;large-scale software systems;DevOps practice;resource allocation;performance configuration tuning","","","","","","30 Aug 2018","","","IEEE","IEEE Conferences"
"Cloud Ecosystems Support for Internet of Things and DevOps Using Patterns","M. H. Syed; E. B. Fernandez","Dept. of Comp. & Electr. Eng & Comput. Sci., Florida Atlantic Univ., Boca Raton, FL, USA; Dept. of Comp. & Electr. Eng & Comput. Sci., Florida Atlantic Univ., Boca Raton, FL, USA","2016 IEEE First International Conference on Internet-of-Things Design and Implementation (IoTDI)","19 May 2016","2016","","","301","304","An ecosystem is the expansion of a software product line architecture to include systems outside the product which interact with the product. A cloud ecosystem includes interdependent and communicating components. Not only the cloud ecosystem itself keeps evolving, but it also affects the way in which we develop and deploy software. We model the architecture of a cloud ecosystem as a set of patterns, showing partial descriptions for some of them. We then discuss the role of this evolving platform in facilitating the Internet of Things and the new DevOps framework for developing software.","","978-1-4673-9948-7","10.1109/IoTDI.2015.31","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7471379","Software ecosystems;Internet of Things;cloud computing;fog computing;software containers;DevOps;reference architectures","Cloud computing;Ecosystems;Containers;Unified modeling language;Security;Computer architecture","cloud computing;Internet of Things;object-oriented methods;object-oriented programming;software architecture;software product lines;software prototyping","cloud ecosystem support;Internet of Things;IoT;DevOps framework;software pattern;software product line architecture;agile software development","","9","","32","","19 May 2016","","","IEEE","IEEE Conferences"
"Agile Big Data Analytics Development: An Architecture-Centric Approach","H. Chen; R. Kazman; S. Haziyev","Shidler Coll. of Bus., Univ. of Hawaii at Manoa, Honolulu, HI, USA; Shidler Coll. of Bus., Univ. of Hawaii at Manoa, Honolulu, HI, USA; SoftServe Inc., Austin, TX, USA","2016 49th Hawaii International Conference on System Sciences (HICSS)","10 Mar 2016","2016","","","5378","5387","Agile development for big data analytics has become the new normal. However, research questions remain: 1) how should a big data system be designed and developed to effectively support advanced analytics? and 2) how should the agile process be adapted for big data analytics development? This article contributes an Architecture-centric Agile Big data Analytics (AABA) development methodology evolved and validated in 10 case studies through Collaborative Practice Research. Our studies showed that architecture agility is the key for successful agile big data analytics development. Employing an architecture-centric approach, the AABA methodology integrates the Big Data system Design (BDD) method and Architecture-centric Agile Analytics with architecture-supported DevOps (AAA) model for effective value discovery and rapid continuous delivery of value. The uses of a design concepts catalog and architectural spikes are advancements to architecture design methods that have proven to be critical to agile big data analytics development.","1530-1605","978-0-7695-5670-3","10.1109/HICSS.2016.665","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7427853","big data and analytics;software architecture;big data design method;agile devleopment methodology","Big data;Computer architecture;Data models;Collaboration;System analysis and design;Companies","Big Data;data analysis;software architecture;software prototyping","agile Big Data analytics development;architecture-centric approach;AABA development methodology;collaborative practice research;architecture agility;Big Data system design;BDD method;architecture-centric agile analytics;architecture-supported DevOps model;AAA model;value discovery;architecture design methods","","13","","27","","10 Mar 2016","","","IEEE","IEEE Conferences"
"Integrating Security with DevSecOps: Techniques and Challenges","Z. Ahmed; S. C. Francis","School of Engineering & IT, Manipal Academy of Higher Education,Dubai,U.A.E; School of Engineering & IT, Manipal Academy of Higher Education,Dubai,U.A.E","2019 International Conference on Digitization (ICD)","2 Jun 2020","2019","","","178","182","The delivery of software applications is key to the success of many development organizations. The software development process over the period increased its scope and included other areas like operations with core Information Technology. Software project practices with DevOps have demonstrated how to streamline these processes, improve the quality of products with present technologies and speed up the processes. In the project cell, a university students' organization which undertake software development projects and services implemented the DevOps methodology for student projects. This model showed results with effective completion of projects. However, what was missing was robust and secure applications, increasing concern and risk involved with insecure products that brought our attention to the implementation and integration of security model into our present development process. The goal of this article is to describe the integration of DevSecOps practice to our ongoing projects that will avoid insecure practices during development.","","978-1-7281-3841-1","10.1109/ICD47981.2019.9105789","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9105789","DevOps;DevOpsSec;Software Development","","information technology;project management;security of data;software development management","robust applications;student projects;DevOps methodology;software development projects;university students;information technology;DevSecOps;security model;insecure products;secure applications","","3","","9","","2 Jun 2020","","","IEEE","IEEE Conferences"
"Online Learning Platform for Application-Inspired Cloud and DevOps Curriculum","S. Wang; R. Neupane; A. Pandey; X. Cheng; P. Calyam","University of Missouri,Department of Electrical Engineering and Computer Science,MO,USA,65211; University of Missouri,Department of Electrical Engineering and Computer Science,MO,USA,65211; University of Missouri,Department of Electrical Engineering and Computer Science,MO,USA,65211; University of Missouri,Department of Electrical Engineering and Computer Science,MO,USA,65211; University of Missouri,Department of Electrical Engineering and Computer Science,MO,USA,65211","2021 IEEE 28th International Conference on High Performance Computing, Data and Analytics Workshop (HiPCW)","21 Jan 2022","2021","","","35","42","Cloud-hosted services are being increasingly used in hosting business applications due to cost effectiveness, scalability, and ease of deployment. To facilitate rapid development, change and release process of cloud-hosted applications, the area of Development and Operations (DevOps) is fast evolving. It is necessary to train the future generation of application development professionals such that they are knowledgeable in the continuous integration and continuous delivery automation. In this paper, we present the design and development of our “Mizzou Cloud DevOps platform”, an online platform to learn cutting-edge Cloud and DevOps tools/technologies using open/public cloud infrastructures for wide adoption amongst instructors/students. Our learning platform features scalability, flexibility, and extend ability in providing Cloud and DevOps concepts knowledge and hands-on skills. We detail our “application-inspired learning” methodology that is based on integration of real-world application use cases in four learning modules that include laboratory exercises and self-study activities using realistic cloud/HPC-based application testbeds. We describe the learning modules that allow students to gain skills in using latest technologies (e.g., containerization, cluster and edge computing, data pipeline automation) to implement relevant security, monitoring, and adaptation mechanisms. Lastly, we evaluate our platform via a knowledge growth study survey with instructors and students.","","978-1-6654-1037-3","10.1109/HiPCW54834.2021.00012","VMware; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9680807","application-inspired learning;microservices;containerized workloads;monitoring/management of infrastructure;clusters and apps across multiple clouds","Automation;Costs;Scalability;Conferences;High performance computing;Pipelines;Containers","cloud computing;computer aided instruction;parallel processing","fast evolving;future generation;application development professionals;continuous integration;continuous delivery automation;Mizzou Cloud DevOps platform;online platform;cutting-edge Cloud;learning platform features scalability;learning modules;knowledge growth study survey;online learning platform;application-inspired Cloud;DevOps curriculum;Cloud-hosted services;hosting business applications;release process;cloud-hosted applications","","","","34","IEEE","21 Jan 2022","","","IEEE","IEEE Conferences"
"Reproducing Scientific Experiment with Cloud DevOps","F. Zhao; X. Niu; S. -L. Huang; L. Zhang","Tsinghua University,Beijing,China; University of Washington,Tacoma,USA; Tsinghua University,Shenzhen,China; Tsinghua University,Shenzhen,China","2020 IEEE World Congress on Services (SERVICES)","21 Dec 2020","2020","","","259","264","The reproducibility of scientific experiment is vital for the advancement of disciplines based on previous work. To achieve this goal, many researchers focus on complex methodology and self-invented tools which have difficulty in practical usage. In this article, we introduce the Cloud DevOps infrastructure from software engineering community and shows how it can be used effectively for heterogeneous agents to reproduce experiments for computer science related disciplines. DevOps can be enabled using freely available cloud computing machines for medium-sized experiment and self-hosted computing engines for large-scale computing, thus powering researchers to share their experiment result with others in a more reliable way.","2642-939X","978-1-7281-8203-2","10.1109/SERVICES48979.2020.00058","Natural Science Foundation of China(grant numbers:61807021); Shenzhen Science and Technology Program(grant numbers:KQTD20170810150821146); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284159","cloud infrastructure;DevOps;scientific workflow management","Computer science;Cloud computing;Tools;Reliability;Engines;Software engineering","cloud computing;software engineering;workflow management software","software engineering community;heterogeneous agents;computer science related disciplines;medium-sized experiment;self-hosted computing engines;scientific experiment;reproducibility;cloud DevOps infrastructure;cloud computing machines","","","","20","","21 Dec 2020","","","IEEE","IEEE Conferences"
"Modern DevOps: Optimizing software development through effective system interactions","C. A. Cois; J. Yankel; A. Connell","Carnegie Mellon University, Software Engineering Institute; Carnegie Mellon University, Software Engineering Institute; Carnegie Mellon University, Software Engineering Institute","2014 IEEE International Professional Communication Conference (IPCC)","26 Jan 2015","2014","","","1","7","Software development processes are fundamentally based on efficient and effective communication. Communication between engineers, between engineers and managers, and between teams and clients are all essential components of a successful project. Requirements must be effectively transferred from client to engineer, specifications must be transitioned from architect to engineer, and constant communication between project team members, managers, and clients throughout the project life cycle is critical to the success of projects of any complexity. To succeed in a world where technologies, requirements, ideas, tools, and timelines are constantly changing, information must be accurate, readily available, easily found, and ideally delivered constantly, in real-time, to all team members. To meet these challenges, modern software development has evolved to encompass key concepts of adaptability to change and data-driven project management. A recent movement dubbed DevOps has attempted to use automated systems to bridge the information gap between project team entities and to enforce rigorous processes to ensure real-time communications. In this paper, the authors frame this challenge as a communications problem that can be addressed by the introduction of specifically designed autonomous system actors and processes. Successful implementation of such a methodology will enable efficient, effective, and immediate data collection, synthesis, and transfer of information between all requisite entities within the software project. A generalized model of DevOps will be presented and analyzed, offering a formalization of the communications and actors requisite to any effective software development process. These concepts will be further developed to illustrate the information flow between human and system actors, and explore how this model can be used to optimize the processes of a software development team to maximize productivity and quality of work products.","2158-1002","978-1-4799-3749-3","10.1109/IPCC.2014.7020388","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7020388","Software engineering;Software development;DevOps;Project management;Process improvement","Software;Productivity;Software engineering;Project management;Real-time systems;Testing;Context","productivity;project management;software development management;team working","software development optimization;system interactions;software development processes;project life cycle;project success;data-driven project management;automated systems;information gap;project team entities;real-time communications;communications problem;data collection;data synthesis;information transfer;software project;DevOps generalized model;human actors;system actors;software development team;productivity;work products quality","","21","1","21","","26 Jan 2015","","","IEEE","IEEE Conferences"
"Performance Evaluation of COINS Framework for Wireless Network Automation","I. Boškov; H. Yetgin; C. Fortuna; M. Mohorčič","Jožef Stefan International Postgraduate School,Ljubljana,Slovenia,SI-1000; Bitlis Eren University,Department of Electrical and Electronics Engineering,Bitlis,Turkey,13000; Jožef Stefan Institute,Department of Communication Systems,Ljubljana,Slovenia,SI-1000; Jožef Stefan Institute,Department of Communication Systems,Ljubljana,Slovenia,SI-1000","2021 Joint European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit)","28 Jul 2021","2021","","","466","471","With the evolution of mobile communications towards fifth-generation (5G) and beyond, all layers of the wireless networks are increasingly virtualized and software-controlled using automated tools. DevOps tools enabling smooth and fast testing through continuous integration (CI) and rapid deployment through continuous delivery (CD) of the software in cloud environments are permeating also communication infrastructures, eventually leading to the so-called “zero-touch network automation”. Such automation frameworks have been actively used in wireless testing infrastructures, such as FIRE and GENI. For instance, the continuous integration in wireless (COINS) technology development framework has been used in the LOG-a-TEC testbed facility of the FIRE federation. In this paper, we propose a task-based operational structure of COINS for a thorough evaluation of the time for operation (TFO) performance of each task. Moreover, we analyse the impact of different experiments and the number of nodes participating in the experiment on the TFO performance of the COINS framework. The results; i) demonstrate that the device tasks within COINS framework are the bottleneck occupying up to 92.6% of the total TFO, and ii) reveal that the TFO performances of the receive details task on the device side and the gather results task on the server side are significantly diminished with the increased number of nodes participating in the same type of experiment.","2575-4912","978-1-6654-1526-2","10.1109/EuCNC/6GSummit51104.2021.9482454","Slovenian Research Agency(grant numbers:P2-0016); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9482454","Continuous integration;continuous delivery;wireless networks;DevOps;experimentation;network automation;evaluation;operation time;automated operation;Internet of things","Performance evaluation;Automation;Wireless networks;Scalability;Tools;Software;Servers","5G mobile communication;cloud computing;telecommunication computing;virtualisation;wireless channels","performance evaluation;COINS framework;wireless network automation;fifth-generation mobile communications;wireless networks;software-controlled;automated tools;DevOps tools;smooth testing;fast testing;continuous integration;continuous delivery;communication infrastructures;zero-touch network automation;automation frameworks;wireless testing infrastructures;technology development framework;LOG-a-TEC testbed facility;FIRE federation;TFO performance;cloud environments;task-based operational structure;time for operation performance;server side","","1","","10","","28 Jul 2021","","","IEEE","IEEE Conferences"
"Virtual Environment for Evaluating the QoS of Distributed Mobile Applications","S. Laso; J. Berrocal; P. Fernández; A. Ruiz-Cortés; J. M. Murillo","University of Extremadura,Cáceres,Spain; University of Extremadura,Cáceres,Spain; I3US Institute, SCORE Lab., Universidad de Sevilla,Sevilla,Spain; I3US Institute, SCORE Lab., Universidad de Sevilla,Sevilla,Spain; University of Extremadura,Cáceres,Spain","2021 IEEE International Conference on Pervasive Computing and Communications Workshops and other Affiliated Events (PerCom Workshops)","24 May 2021","2021","","","407","409","The increasing capabilities of end devices has led to a wider distribution of the computation and the massive deployment of distributed mobile applications. The success of these applications is highly dependent on the Quality of Service they provide. This quality is especially difficult to assess due to the large number of entities involved and their heterogeneity. Current tools are usually focused on evaluating the QoS provided by a single entity. Nevertheless, the QoS of distributed applications not only depend on the QoS of each entity, the interactions among entities has also to be evaluated. Therefore, new techniques are required to perform a comprehensive evaluation of the expected QoS of these applications before their production deployment. This paper presents a framework, called Perses, for launching virtual environments to simulate and test the execution of distributed mobile applications. This simulation provides results of the QoS achieved. Moreover, the framework has been integrated into a DevOps methodology in order to automate its execution. Video showcase- https://youtu.be/wpIApe_sPFE.","","978-1-6654-0424-2","10.1109/PerComWorkshops51409.2021.9431133","European Regional Development Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9431133","Distributed Mobile Applications;Quality of Service;DevOps;Virtual Environment","Pervasive computing;Cloud computing;Conferences;Virtual environments;Quality of service;Production;Tools","mobile computing;quality of service;software engineering","distributed mobile applications;expected QoS;virtual environment;DevOps methodology","","","","16","","24 May 2021","","","IEEE","IEEE Conferences"
"Deriving Microservice Code from Underspecified Domain Models Using DevOps-Enabled Modeling Languages and Model Transformations","F. Rademacher; S. Sachweh; A. Zündorf","University of Applied Sciences and Arts Dortmund,IDiAL Institute,Dortmund,Germany,44227; University of Applied Sciences and Arts Dortmund,IDiAL Institute,Dortmund,Germany,44227; University of Kassel,Department of Computer Science and Electrical Engineering,Kassel,Germany,34121","2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)","16 Oct 2020","2020","","","229","236","Domain-driven Design (DDD) is a model-based software design methodology, which focuses on close collaboration of domain experts and software engineers. It promotes to capture relevant domain concepts in domain models in order to define a ubiquitous language, whose terms are well understood by stakeholders and consistently used throughout the software engineering process. DDD is considered particularly useful in Microservice Architecture (MSA) engineering, because it specifies patterns to structure modeled domain concepts in isolated contexts. These contexts determine concepts' applicability and validity, and make relationships between domain concepts beyond context boundaries explicit. Consequently, DDD contexts may be used to prescribe microservices' granularities and interaction relationships. However, domain models are usually underspecified, which facilitates communication with domain experts, but hampers the derivation of microservice code.In this paper, we present a model-driven methodology towards deriving microservice code from underspecified domain models. It relies on a set of viewpoint-based MSA modeling languages, which respect the concerns of DevOps teams, and a set of automatic model transformations, which decrease modeling effort and systematize source code derivation. We validate the applicability of our methodology by means of two case studies.","","978-1-7281-9532-2","10.1109/SEAA51224.2020.00047","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9226287","Services Architectures;Services Engineering;Modeling of computer architecture","Unified modeling language;Context modeling;Data models;Biological system modeling;Computational modeling;Stakeholders;Software","formal specification;object-oriented programming;ontologies (artificial intelligence);software architecture;software prototyping","microservice code;DevOps-enabled modeling languages;model-based software design methodology;software engineering process;DDD contexts;model-driven methodology;automatic model transformations;source code derivation;microservice architecture engineering;MSA engineering","","2","","20","","16 Oct 2020","","","IEEE","IEEE Conferences"
"A Model-Driven Engineering Framework to Support the Functional Safety Process","B. Meyers; K. Gadeyne; B. Oakes; M. Bernaerts; H. Vangheluwe; J. Denil",Flanders Make; Flanders Make; University of Antwerp; University of Antwerp; University of Antwerp; University of Antwerp,"2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)","21 Nov 2019","2019","","","619","623","The design of safety-related systems traditionally has long and costly development cycles due to the highly manual safety engineering process, which is guided by industry standards. In this paper, we present a modelling framework that supports DevOps principles of continuous testing and fast development iterations for the design of safety-critical systems. We show how modelling can help introducing DevOps in the context of functional safety analysis, and we also report how DevOps was used during the development of the framework.","","978-1-7281-5125-0","10.1109/MODELS-C.2019.00094","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8904799","devops;safety critical;verification;automotive;iso26262","","formal specification;program testing;safety-critical software","fast development iterations;safety-critical systems;functional safety analysis;model-driven engineering framework;functional safety process;safety-related systems;long development cycles;safety engineering process;industry standards;DevOps principles;continuous testing","","2","","21","","21 Nov 2019","","","IEEE","IEEE Conferences"
"Test orchestration a framework for Continuous Integration and Continuous deployment","N. Rathod; A. Surve","Department of Computer Science and Engineering, Walchand College of Engineering, Sangli, India; Department of Computer Science and Engineering, Walchand College of Engineering, Sangli, India","2015 International Conference on Pervasive Computing (ICPC)","16 Apr 2015","2015","","","1","5","The enterprises follow Agile Software Development methodology to because business requirements changes frequently. In Agile Software Development methodology, it is essential to continuously integrate the component into a main trunk of a project to test the new component of the system. Then test all the component of the project; this happens frequently so it needs to stream line processes to orchestrate the tests. So it is difficult to manage the software development life cycle for those changes and maintain the software code quality. To maintain the product quality it is essential to integrate the product component and need to deploy a product on pre-production environment and test the product. Hence the need for Continuous Integration and Continuous Delivery process for software product. The popularization of DevOps, and cloud computing has revolutionized the software delivery process- making it faster and affordable for business to release their software continuously. Hence Enterprises need for reliable and predictable delivery process of software. The objective of the paper is to design an effective framework for automated testing and deployment to help to automate the code analysis, test selection, test scheduling, environment provisioning, test execution, results analysis and deployment pipeline. Test orchestration framework typically very complicated to develop such pipeline to make software reliable, and bug free. For environment provisioning can be provided through virtualization and cloud computing.","","978-1-4799-6272-3","10.1109/PERVASIVE.2015.7087120","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7087120","ContinuousIntegration (CI);Continious Deployment (CD);DevOps;Agile Software Development;Test Oracle;Test Orchestration;Cloud Computing;Delivery Pipeline","Software;Automation;Pipelines;Software reliability;Software testing","program testing;scheduling;software prototyping;software quality","test orchestration;continuous integration process;continuous deployment process;agile software development methodology;component test;software development life cycle;software code quality;product quality;software product;DevOps;cloud computing;code analysis;test selection;test scheduling;environment provisioning;test execution;results analysis;deployment pipeline;virtualization","","13","2","13","","16 Apr 2015","","","IEEE","IEEE Conferences"
"Challenges of DevOps Implementation : A Case Study from Technology Companies in Indonesia","R. Anandya; T. Raharjo; A. Suhanto","University of Indonesia,Faculty of Computer Science,Jakarta,Indonesia; University of Indonesia,Faculty of Computer Science,Jakarta,Indonesia; University of Indonesia,Faculty of Computer Science,Jakarta,Indonesia","2021 International Conference on Informatics, Multimedia, Cyber and Information System (ICIMCIS","9 Feb 2022","2021","","","108","113","Although agile is an iterative approach that encourages collaboration and feedback from all its stakeholders, most agile projects do not extend toward operation people and create a gap between them. To solve that, the paradigm of DevOps is introduced. DevOps is considered the most effective way to improve collaboration between development and IT operations in achieving quality, stability, reliability, and team satisfaction. Due to these thrive factors, DevOps are still popular in IT project development nowadays. However, the present survey shows that organizations still face barriers and struggle in their adoption of DevOps. This study aims to identify the challenges which involved hindering DevOps adoption by conducting a literature review. The identified challenges were further validated and prioritized by IT practitioners from technology companies in Indonesia using AHP (Analytic Hierarchy Process) method. The result is ‘highly bureaucratic deployment process’, ‘insufficient communication and collaboration issues’, and ‘lack of clear definition and strategic direction’ are the most significant challenges that need to be addressed to successful DevOps implementation with value 16.1%, 14,4%, and 13.7 % respectively.","","978-1-6654-2733-3","10.1109/ICIMCIS53775.2021.9699240","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9699240","DevOps;Challenges;AHP;Continuous Development","Multimedia systems;Bibliographies;Collaboration;Companies;Stability analysis;Stakeholders;Reliability","","","","","","28","","9 Feb 2022","","","IEEE","IEEE Conferences"
"Strengthening harmonization of Development (Dev) and Operations (Ops) silos in IT environment through systems approach","S. W. Hussaini","Business Systems and Cybernetics Center, Tata Consultancy Services, Hyderabad, India","17th International IEEE Conference on Intelligent Transportation Systems (ITSC)","20 Nov 2014","2014","","","178","183","This paper presents a model based on cybernetics and systems thinking principles to overcome the challenges of strengthening the harmonization of Development and Operations functions in an enterprise. This was as a result of the challenges faced in applying industry standard tools/frameworks to complex problem. DevOps is an acronym for Development (Dev) and Operations (Ops) of information technology (IT) systems and applications. DevOps paradigm emerged as a response to the growing knowledge that there exists a gap of 4Cs (communications, co-operation, culture and collaboration) between what is usually considered IT development function and what is generally considered IT operations function of an organization. This gap often widens and manifests itself in many forms such as adverse competition, team conflict, inordinate delays and inefficiency of business applications/IT systems. There is a “Wall of Confusion” between IT development and operations as stated by Andrew Shafer and Lee Thompson. This “Wall” is caused by a combination of conflicting motivations among people, processes, and technology/tooling. Hence there is a pressing need for strengthening the harmonization of Development and Operations functions of an IT organization. IT Development (including testing and assurance services) professionals often tend to come with an outlook where change is the thing that they are mandated to accomplish. The business folks depend on them to respond to fast changing business and/or technology needs. Because of this intimate relationship, Dev are often expected to bring in as much change as possible. IT Operations folks tend to come with an outlook where change is the enemy. The business folks depend on them to keep the lights on and deliver the services that make the business money today. Operations folks tend to resist change as it undermines stability and reliability of IT systems/applications. Many times we heard that lion's share of all downtime is due to those self-inflicted injuries known as changes? To make matters worse and things more political and complex, development and operations teams generally position into different parts of a company's organizational structure (often with different General Managers and competing corporate politics) and often work at different geographic locations. According to a Gartner report[1], ""Through 2010, Gartner expects that most IT organizations will continue to focus on the basic IT processes of application development, project management and service management. They will fail toextend this process focus to all activities, and will fail to change organizational values and behaviors."". There was a pressing need to dive deep in to this complex problem with a systems thinking approach. “The model leveraged here is called SNACTM. This stands for Stakeholders, Needs, Alterables and Constraints. This model is used to increase variety in the system in focus. Stakeholders are identified in categories like internal and external to the program. This involves identifying all stakeholders in the program, their needs, interests and influences. The Stakeholders, their needs, constraints and the alterables that are introduced to overcome the constraints are identified and considered. Alterables are the things that the organization believes it can alter or change.”[13][15] This model enables to identify key objectives that are common to both Dev and Ops. This also involves identifying key themes of DevOps which form the levers of transformation that is being delivered. The stakeholders, their interests and influences help focus on the key themes of DevOps strategy. This helps the program managers/directors to focus on key themes that need to be in focus to respective stakeholders at right time when they are needed the most during delivery lifecycle. The paper covers an overview, the theoretical basis on which this model has been built. It also covers the model itself in detail. The paper also illustrates a case, which used this concept, conclusion and future direction for the framework. The model was deployed successfully to assess the feasibility and craft DevOps strategy of a large IT program of customer contact transformation for a large telecom company in EMEA (Europe, Middle East and Africa) region providing telecom services and products to tens of millions of customers. The results of application of the aforementioned systems science model to address the problem are also illustrated.. The outlined model here, helped in the identification of levers to protect DevOps stakeholders interest and enhance effectiveness and efficiency.","2153-0017","978-1-4799-6078-1","10.1109/ITSC.2014.6957687","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6957687","DevOps;SNAC™;Transorformation levers;Harmonization","Organizations;Object recognition;Cybernetics;Knowledge management;Pressing;Terminology","DP management","IT environment;information technology;systems approach;cybernetics principle;systems thinking principle;DevOps paradigm;IT development function;IT operation function;IT organization;4C knowledge;communications-cooperation-culture-collaboration knowledge;IT development;SNACTM model;stakeholders-needs-alterables-constraints model;IT program;customer contact transformation","","11","","12","","20 Nov 2014","","","IEEE","IEEE Conferences"
"Delivering Elastic Containerized Cloud Applications to Enable DevOps","C. Barna; H. Khazaei; M. Fokaefs; M. Litoiu","Dept. of Electr. Eng. & Comput. Sci., York Univ., Toronton, ON, Canada; Dept. of Electr. Eng. & Comput. Sci., York Univ., Toronton, ON, Canada; Dept. of Electr. Eng. & Comput. Sci., York Univ., Toronton, ON, Canada; Dept. of Electr. Eng. & Comput. Sci., York Univ., Toronton, ON, Canada","2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)","7 Jul 2017","2017","","","65","75","Following recent technological advancements in software systems, like microservices, containers and cloud systems, DevOps has risen as a new development paradigm. Its aim is to bridge the gap between development and management of software systems and enable continuous development, deployment and integration. Towards this end, automated tools and management systems play a crucial role. In this work, we propose a method to develop an autonomic management system for multi-tier, multi-layer data-intensive containerized applications based on a performance model of such systems. The model is shown to be robust and accurate in estimating and predicting the system's performance for various workloads and topologies, while the AMS is capable of regulating the application's behaviour by taking independent actions on its various parts.","","978-1-5386-1550-8","10.1109/SEAMS.2017.12","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7968133","devops;cloud computing;autonomic management systems;performance models;continuous delivery;containers;scaling;multi-tier big data applications","Containers;Cloud computing;Tools;Computer architecture;Adaptation models;Service-oriented architecture","cloud computing;integrated software;software management;software performance evaluation","elastic containerized cloud applications;DevOps;software system development;software system management;continuous development;software system deployment;software system integration;autonomic management system;multitier multilayer data-intensive containerized applications;performance model;AMS","","22","1","34","","7 Jul 2017","","","IEEE","IEEE Conferences"
"ATARI: Autonomous Testing and Real-Time Intelligence - A Framework for Autonomously Testing Modern Applications","K. Viswanadha; S. Shivaji; R. Shanmugam; S. Song; S. Choi; N. Kumar",AutonomIQ; AutonomIQ; AutonomIQ; AutonomIQ; AutonomIQ; AutonomIQ,"2019 IEEE International Conference On Artificial Intelligence Testing (AITest)","20 May 2019","2019","","","52","54","The emergence of modern web frameworks, microservices, and cloud architectures requires testers to generate and maintain test cases, scripts, and data in short agile sprints, sometimes in as little as a few hours. It is impossible to produce these assets in a comprehensive manner using legacy DevOps approaches that largely depend on the subjective judgement of test engineers. In this paper, we demonstrate the implementation of ATARI, an autonomous testing framework that uses a combination of search algorithms, page-rank heuristics, and reinforcement learning techniques to radically improve the completeness and velocity of testing to meet the needs of modern software engineering practices.","","978-1-7281-0492-8","10.1109/AITest.2019.000-8","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8718235","Artificial Intelligence;Autonomous;Reinforcement Learning","Testing;Reinforcement learning;Password;Software;Uniform resource locators;Business;Automation","cloud computing;Internet;learning (artificial intelligence);program testing;project management;software engineering;software maintenance","legacy DevOps approaches;subjective judgement;test engineers;ATARI;autonomous testing framework;modern software engineering practices;real-time intelligence;modern applications;modern web frameworks;microservices;cloud architectures;test cases;short agile sprints;comprehensive manner","","","","2","","20 May 2019","","","IEEE","IEEE Conferences"
"Analyzing Software Delivery with the Flow Framework","M. Kersten",Tasktop,"2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","19 Aug 2019","2019","","","3","3","Projects, org charts and software architecture are the best representations of value creation we have today. They are insufficient to support the scale and complexity of the software that is powering more and more of the world economy. In this talk, Dr. Kersten will propose a new set of abstractions for understanding and improving how software is built. He will introduce the concept of Value Stream Networks, which provide a set of models that span beyond the software architecture to include all of the artifacts involved in building software, from business idea to customer support. He will then show how we can visualize and operate on this new model in order to gain insights into the ground truth of what flows through organizations delivering software, and how we can improve that flow using the Flow Framework(tm). Kersten will summarize his experiences from open source, building a successful startup, and supporting some of the larges Agile and DevOps transformations in order to propose ideas for the research and practices still needed to better understand and manage software delivery at scale.","2574-1934","978-1-7281-1764-5","10.1109/ICSE-Companion.2019.00022","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8802662","","","project management;software architecture","software delivery;org charts;software architecture;value creation;building software;customer support;value stream networks;flow framework;DevOps transformations","","","","0","","19 Aug 2019","","","IEEE","IEEE Conferences"
"Open Banking & APIs for Transformation in Banking","A. Premchand; A. Choudhry","DevOps Architect, Presales & Solutions, Banking Technology Group, Tata Consultancy Services, Chennai, India; Solution Architect, Banking Technology Group, Tata Consultancy Services, New Delhi, India","2018 International Conference on Communication, Computing and Internet of Things (IC3IoT)","18 Mar 2019","2018","","","25","29","Open Banking and Open APIs have gained momentum and have grown from purely technical capabilities to being of business relevance. Open Banking is an innovative model for the financial industry not only from competition perspective but also from customer engagement perspective. Banks will have to help their customers with superior and more agile offerings. Banks should enable their customers to manage their financial affairs, make better decisions, save money etc. Digital disruption, FinTechs and Regulatory compliance such as Revised Payment Services Directive (PSD2) have accelerated the competition and forced banks to open up their systems. Using API, banks can transform their core systems for innovations and can integrate with internal system and external partners in a simpler, secure and controlled way.This paper takes a look at why open API is the foundation of open banking, values creating using open APIs, open banking framework/building blocks, and challenges faced by banks in implementing the open banking. It also highlights the various initiatives taken for API standardization.","","978-1-5386-2459-3","10.1109/IC3IoT.2018.8668107","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8668107","Open banking;open API;PSD2;open banking framework;API standardization;open data;financial institutions;banks","Banking;Standards;Organizations;Security","application program interfaces;bank data processing;innovation management","open API;PSD2;revised payment services directive;digital disruption;FinTechs;business relevance;open banking framework","","7","","5","","18 Mar 2019","","","IEEE","IEEE Conferences"
"Poster: A Declarative Approach for Updating Distributed Microservices","F. Boyer; X. Etchevers; N. de Palma; X. Tao",NA; NA; NA; NA,"2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion)","30 Aug 2018","2018","","","392","393","Microservice architectures are considered with much promises to achieve DevOps in IT organizations-mainly because they split applications into services that can be updated independently the ones from each other. But the challenge does not stop there: updating microservices still require DevOps teams to specify complex pipelines of commands to execute. In this paper, we propose a framework that strongly simplifies such updates: DevOps teams just specify the desired target architecture for their microservice application, instead of specifying how to reach it. In addition, updates managed with our framework can conform to various SLA requirements and resist to failures.","2574-1934","978-1-4503-5663-3","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8449592","Microservice;Continuous Delivery;Dynamic Update;Architecture based Management;DevOps","Computer architecture;Tools;Robustness;Platform as a service;Gold","distributed processing;information systems;service-oriented architecture","SLA requirements;poster;declarative approach;microservice architectures;DevOps teams;microservice application;IT organizations;target architecture;distributed microservices update","","1","","","","30 Aug 2018","","","IEEE","IEEE Conferences"
"A Framework for Managing Mission Needs, Compliance, and Trust in the DevOps Environment","B. S. Farroha; D. L. Farroha","Dept. of Defense, Fort Meade, MD, USA; Dept. of Defense, Fort Meade, MD, USA","2014 IEEE Military Communications Conference","20 Nov 2014","2014","","","288","293","The expanding pace of business competitiveness and increasing demand velocity for developing and deploying updated Operational and Security capabilities has created an environment where development and operations needed to work even closer together. The need was further enhanced due to the fact that all capabilities are being developed in a shared platform with no formal requirement processes, and no analysis of the overall enterprise capabilities and architecture. On the surface, the process lacks the usual discipline that most engineers are used to, but operationally it has the potential of bringing capabilities to operations at a quicker rate. The goal of providing continuously updated services should make sure that the overall enterprise performance and security posture are not compromised while the quick turnaround capability deployment is achieved. The proposed framework focuses on ensuring the continuity of strategic posturing while allowing maximum flexibility to tactical enhancements to meet emerging demands.","2155-7586","978-1-4799-6770-4","10.1109/MILCOM.2014.54","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6956773","","Security;Organizations;Software;Big data;Monitoring;Testing","business data processing;security of data;strategic planning;systems analysis","mission needs management;DevOps environment;business competitiveness;demand velocity;updated operational capabilities;updated security capabilities;formal requirement processes;enterprise capabilities;security posture;enterprise performance;continuously updated services;quick turnaround capability deployment;strategic posturing;tactical enhancements","","19","","18","","20 Nov 2014","","","IEEE","IEEE Conferences"
"Dockerfile Changes in Practice: A Large-Scale Empirical Study of 4,110 Projects on GitHub","Y. Wu; Y. Zhang; T. Wang; H. Wang","Science and Technology on Parallel and Distributed Laboratory , National University of Defense Technology,China; Science and Technology on Parallel and Distributed Laboratory , National University of Defense Technology,China; Science and Technology on Parallel and Distributed Laboratory , National University of Defense Technology,China; Science and Technology on Parallel and Distributed Laboratory , National University of Defense Technology,China","2020 27th Asia-Pacific Software Engineering Conference (APSEC)","1 Mar 2021","2020","","","247","256","Docker is one of the most popular containerization tools in current DevOps practice. Particularly, Dockerfile plays an important role in the Docker-based software development process by specifying the commands and build environment of Docker containers. As a project progresses through its development stages, the content of the Dockerfile may be revised many times. Previous studies have examined Dockerfile usage in open-source projects. However, little is known about the details of Dockerfile changes in practice. In this paper, we conduct an empirical study on Dockerfile changes for 4,110 open-source projects hosted on GitHub. Based on the Dockerfile data, we measure the frequency, magnitude, and instructions of Dockerfile changes and report how Dockerfile co-changed with other files. To explore the relationship between Dockerfile changes and project outcomes, i.e., popularity, success, and productivity, we also develop regression models, by controlling for various confounds. Our findings help to characterize and understand Dockerfile changes and motivate the need for collecting more empirical evidence.","2640-0715","978-1-7281-9553-7","10.1109/APSEC51365.2020.00033","National Key Research and Development Program of China(grant numbers:2018YFB1004202); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9359307","Dockerfile;Dockerfile changes;DevOps practice;Empirical study;Open-Source","Productivity;Tools;Maintenance engineering;Frequency measurement;Open source software;Software development management;Software engineering","cloud computing;public domain software;regression analysis;software development management;software quality","Dockerfile changes;Docker-based software development process;Dockerfile usage;open-source projects;Dockerfile data","","1","","29","","1 Mar 2021","","","IEEE","IEEE Conferences"
"Dynamic Autoselection and Autotuning of Machine Learning Models for Cloud Network Analytics","R. R. Karn; P. Kudva; I. A. M. Elfadel","Center for Cyber-Physical Systems, Khalifa University, Abu Dhabi, UAE; IBM Research, Yorktown Heights, NY, USA; Center for Cyber-Physical Systems, Khalifa University, Abu Dhabi, UAE","IEEE Transactions on Parallel and Distributed Systems","11 Apr 2019","2019","30","5","1052","1064","Cloud network monitoring data is dynamic and distributed. Signals to monitor the cloud can appear, disappear or change their importance and clarity over time. Machine learning (ML) models tuned to a given data set can therefore quickly become inadequate. A model might be highly accurate at one point in time but may lose its accuracy at a later time due to changes in input data and their features. Distributed learning with dynamic model selection is therefore often required. Under such selection, poorly performing models (although aggressively tuned for the prior data) are retired or put on standby while new or standby models are brought in. The well-known method of Ensemble ML (EML) may potentially be applied to improve the overall accuracy of a family of ML models. Unfortunately, EML has several disadvantages, including the need for continuous training, excessive computational resources, requirement for large training datasets, high risks of overfitting, and a time-consuming model-building process. In this paper, we propose a novel cloud methodology for automatic ML model selection and tuning that automates model building and selection and is competitive with existing methods. We use unsupervised learning to better explore the data space before the generation of targeted supervised learning models in an automated fashion. In particular, we create a Cloud DevOps architecture for autotuning and selection based on container orchestration and messaging between containers, and take advantage of a new autoscaling method to dynamically create and evaluate instantiations of ML algorithms. The proposed methodology and tool are demonstrated on cloud network security datasets.","1558-2183","","10.1109/TPDS.2018.2876844","IBM T. J. Watson Research Center, Yorktown Heights, NY; Joint Study Agreement(grant numbers:W1463335); IBM Research; Khalifa University, Abu Dhabi, UAE; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8500348","Cloud analytics;machine learning;ensemble learning;distributed learning;clustering;classification;autoselection;autotuning;decision feedback;cloud DevOps;containers;docker;Kafka","Machine learning;Cloud computing;Containers;Data models;Machine learning algorithms;Tuning;Computational modeling","cloud computing;data analysis;software architecture;unsupervised learning","dynamic autoselection;machine learning models;Cloud network analytics;Cloud network monitoring data;dynamic model selection;ML models;excessive computational resources;time-consuming model-building process;novel cloud methodology;automatic ML model selection;unsupervised learning;data space;targeted supervised learning models;Cloud DevOps architecture;ML algorithms;cloud network security datasets;EML method;Ensemble ML method;container orchestration;autoscaling method","","7","","34","IEEE","19 Oct 2018","","","IEEE","IEEE Journals"
"DevOps for Spacecraft Flight Software","C. Heistand; J. Thomas; N. Tzeng; A. R. Badger; L. M. Rodriguez; A. Dalton; J. Pai; A. Bodzas; D. Thompson","JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723; JHU Applied Physics Laboratory, Laurel, MD, 20723","2019 IEEE Aerospace Conference","20 Jun 2019","2019","","","1","16","The NASA Double Asteroid Redirection Test (DART)mission, led by the Johns Hopkins University Applied Physics Laboratory (JHU/APL), will be the first ever space mission to demonstrate asteroid deflection by a kinetic impactor. The DART flight software team recognizes that meeting this challenge, especially within cost and schedule constraints, requires enhancing software practices with a strong Development and Operations (DevOps)methodology. DevOps fuses software development and operations to form a tight feedback loop during software construction and release deployment. The team has established and implemented a DevOps architecture that has already benefited the DART mission, including successful integration testing with NASA's Evolutionary Xenon Thruster-Commercial (NEXT-C)electric propulsion system. This DevOps architecture consists of several key components: a Software-In-The-Loop (SWIL)environment that acts as a spacecraft on a laptop, enabling a scalable automated test program, a Continuous Integration (CI)regiment that provides rapid feedback during the daily development workflow, and a Continuous Delivery (CD)practice that enables single click deployment of the latest flight software to DART's Hardware-In-The-Loop (HWIL)testbeds. DART is on target to achieve the goal of a successful, nightly, simulated asteroid impact. This paper will introduce the DART mission, discuss DevOps and the philosophy as it applies to spacecraft flight software development, illustrate DART's DevOps architecture and walk the audience through each major component, and finally, present a resulting case study: the successful NEXT-C test campaign.","1095-323X","978-1-5386-6854-2","10.1109/AERO.2019.8742143","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8742143","","Software;Physics;NASA;Testing;Schedules;Space vehicles;Computer bugs","aerospace propulsion;asteroids;astronomy computing;electric propulsion;impact (mechanical);numerical analysis;space vehicles","scalable automated test program;daily development workflow;Continuous Deliverypractice;latest flight software;DART's Hardware-In-The-Looptestbeds;simulated asteroid impact;DART mission;spacecraft flight software development;DART's DevOps architecture;NEXT-C test campaign;NASA Double Asteroid Redirection Testmission;Johns Hopkins University Applied Physics Laboratory;JHU/APL;space mission;asteroid deflection;kinetic impactor;DART flight software team;schedule constraints;software practices;tight feedback loop;software construction;successful integration testing;Continuous Integration regiment;Software-In-The-Loop environment;electric propulsion system;NASA's Evolutionary XenonThruster","","","","29","","20 Jun 2019","","","IEEE","IEEE Conferences"
"SecDevOps: Is It a Marketing Buzzword? - Mapping Research on Security in DevOps","V. Mohan; L. B. Othmane","Dept. of Comput. Sci., Tech. Univ. Darmstadt, Darmstadt, Germany; Fraunhofer SIT, Darmstadt, Germany","2016 11th International Conference on Availability, Reliability and Security (ARES)","15 Dec 2016","2016","","","542","547","DevOps is changing the way organizations develop and deploy applications and service customers. Many organizations want to apply DevOps, but they are concerned by the security aspects of the produced software. This has triggered the creation of the terms SecDevOps and DevSecOps. These terms refer to incorporating security practices in a DevOps environment by promoting the collaboration between the development teams, the operations teams, and the security teams. This paper surveys the literature from academia and industry to identify the main aspects of this trend. The main aspects that we found are: definition, security best practices, compliance, process automation, tools for SecDevOps, software configuration, team collaboration, availability of activity data and information secrecy. Although the number of relevant publications is low, we believe that the terms are not buzzwords, they imply important challenges that the security and software communities shall address to help organizations develop secure software while applying DevOps processes.","","978-1-5090-0990-9","10.1109/ARES.2016.92","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7784617","DevOps;SecDevOps;Security;Mapping Research;DevSecOps","Security;Software;Organizations;Collaboration;Automation;Industries;Best practices","organisational aspects;security of data;software development management","SecDevOps;security best practices;compliance;process automation;software configuration;team collaboration;activity data availability;information secrecy;DevSecOps;software development operations","","32","","11","","15 Dec 2016","","","IEEE","IEEE Conferences"
"NetIDE: All-in-one framework for next generation, composed SDN applications","P. A. Aranda Gutiérrez; E. Rojas; A. Schwabe; C. Stritzke; R. Doriguzzi-Corin; A. Leckey; G. Petralia; A. Marsico; K. Phemius; S. Tamurejo",Telefónica I+D; Telcaria Ideas S.L.; Paderborn University; Fraunhofer IEM; CREATE-NET; Intel Labs Europe; Intel Labs Europe; CREATE-NET; Thales; IMDEA Networks,"2016 IEEE NetSoft Conference and Workshops (NetSoft)","4 Jul 2016","2016","","","355","356","Software-Defined Networking (SDN) is bringing DevOps [1] capabilities to current networks, reducing the time-to-market for new services and thereby providing a strong incentive for adoption to Service Providers and Network Operators. However, the current SDN landscape is extremely fragmented, so that different open and closed source controller frameworks such as OpenDaylight [2], Ryu [3], Floodlight [4] or ONOS [5] exist. This jeopardises the gains of introducing SDN, since porting SDN applications from one platform to another is time consuming and requires high effort. As a consequence, SDN users (e.g. network operators) face the danger of vendor (or platform) lock-in: they are confined to applications working for the platform of their choice, or forced to re-implement their solutions when they choose a new platform.","","978-1-4673-9486-4","10.1109/NETSOFT.2016.7502408","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7502408","","Engines;Monitoring;Network topology;Protocols;Runtime;Local area networks;Servers","software defined networking","NetIDE;SDN application;software-defined networking;DevOps;service provider;network operator;controller framework;OpenDaylight;Ryu;floodlight;ONOS;vendor lock-in","","5","","15","","4 Jul 2016","","","IEEE","IEEE Conferences"
"A Generic Method to Rapidly Release Internet Services on Commercial Platforms","X. Zhou; Z. Feng; J. Xiao; S. Chen; X. Xue; H. Wu","College of Intelligence and Computing, Tianjin University,Tianjin,China,300350; College of Intelligence and Computing, Tianjin University,Tianjin,China,300350; College of Intelligence and Computing, Tianjin University,Tianjin,China,300350; College of Intelligence and Computing, Tianjin University,Tianjin,China,300350; College of Intelligence and Computing, Tianjin University,Tianjin,China,300350; College of Intelligence and Computing, Tianjin University,Tianjin,China,300350","2021 IEEE International Conference on Web Services (ICWS)","11 Nov 2021","2021","","","364","371","The prosperous development of Internet services such as O2O, IoT, and Web API has brought new vitality to service commercial platforms. However, these services involve online and offline business, which are widely diverse without a unified design and development standard. In addition, Internet services update frequently, which leads to repeat releases on commercial platforms. Therefore, in this paper, we present a generic method to rapidly release Internet services on commercial platforms. The method uses a highly abstract metamodel to express service business extensively and realizes service functions by executing metamodel objects. This method has wide versatility. Meanwhile, it extends the DevOps theory to solve the frequent changes of service functions during use after the release. Finally, we verified the usability of this method in the elderly healthcare domain.","","978-1-6654-1681-8","10.1109/ICWS53863.2021.00055","National Natural Science Foundation of China(grant numbers:62032016,61832014,61972276); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9590282","Internet service;commercial platform;DevOps;service release;metamodel;elderly healthcare","Automation;Supply and demand;Web and internet services;Senior citizens;Medical services;Tools;Internet of Things","business data processing;Internet","Internet services;service business;service functions;service commercial platforms;unified design;development standard;commercial platforms;metamodel objects;DevOps theory;elderly healthcare domain;abstract metamodel","","","","16","IEEE","11 Nov 2021","","","IEEE","IEEE Conferences"
"The Role of Skillset in the Determination of DevOps implementation Strategy","R. W. Macarthy; J. M. Bass","University of Salford,School of Science, Engineering and Environment,Manchester,UK; University of Salford,School of Science, Engineering and Environment,Manchester,UK","2021 IEEE/ACM Joint 15th International Conference on Software and System Processes (ICSSP) and 16th ACM/IEEE International Conference on Global Software Engineering (ICGSE)","24 Jun 2021","2021","","","50","60","As the trend of interest in DevOps continues to rise significantly among industry practitioners, so does the need for software development organisations to understand how to successfully implement DevOps as they are faced with a wide range of choices, and very few guidelines on how to navigate through a plethora of valuable information.An important question is the skillset required, and its role in the determination of suitable DevOps implementation strategy for organisations. This study contributes to the above and provides insight by critically investigating the DevOps implementation of 14 organisations through interviews with practitioners who lead the transformation in these organisations. Interviews were transcribed, coded and analysed by a method informed by Grounded Theory. We identified six strategies used by organisations to implement DevOps, which we named Platform, Greenfield Application, Monolith Decomposition, Process Improvement, Cultural Improvement, and Advocacy. Based on our analysis, we conclude the following: 1. A striking correlation exists between the skillset and the strategy adopted by organisations to implement DevOps. 2. The inclination of an organisation towards upskilling is relevant for the determination of appropriate DevOps implementation strategy. From our research, we have come to believe that the choice of organisational DevOps implementation strategy should generally be based on a consideration of technologies, processes, culture, and skillsets as top-level concerns.","","978-1-6654-1401-2","10.1109/ICSSP-ICGSE52873.2021.00015","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9461018","","Correlation;Reliability engineering;Software;Software reliability;Cultural differences;Security;Interviews","organisational aspects;software engineering","skillset;industry practitioners;software development organisations;organisational DevOps implementation strategy","","","","49","","24 Jun 2021","","","IEEE","IEEE Conferences"
"Service Provider DevOps","W. John; G. Marchetto; F. Nemeth; P. Skoldstrom; R. Steinert; C. Meirosu; I. Papafili; K. Pentikousis",NA; NA; NA; NA; NA; NA; NA; NA,"IEEE Communications Magazine","19 Jan 2017","2017","55","1","204","211","Although there is consensus that software defined networking and network functions virtualization overhaul service provisioning and deployment, the community still lacks a definite answer on how carrier-grade operations praxis needs to evolve. This article presents what lies beyond the first evolutionary steps in network management, identifies the challenges in service verification, observability, and troubleshooting, and explains how to address them using our Service Provider DevOps (SP-DevOps) framework. We compendiously cover the entire process from design goals to tool realization and employ an elastic version of an industry-standard use case to show how on-the-fly verification, software-defined monitoring, and automated troubleshooting of services reduce the cost of fault management actions. We assess SP-DevOps with respect to key attributes of software-defined telecommunication infrastructures both qualitatively and quantitatively, and demonstrate that SP-DevOps paves the way toward carrier-grade operations and management in the network virtualization era.","1558-1896","","10.1109/MCOM.2017.1500803CM","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7823363","","Monitoring;Observability;Software defined networks;Software development;Telecommunication services;Scalability","software defined networking","service provider DevOps;software defined networking;network functions virtualization overhaul service provisioning;network management;service verification;SP-DevOp;carrier-grade operations;network virtualization","","12","","15","","19 Jan 2017","","","IEEE","IEEE Magazines"
"IT Resource Trend Analysis by Component Decomposition Based on Non-negative Matrix Factorization","Y. Saitoh; T. Uchiumi; Y. Watanabe","FUJITSU LABORATORIES LTD.,DevOps Innovation Unit,4-1-1 Kamikodanaka, Nakahara-ku, Kawasaki,Japan,211-8588; FUJITSU LABORATORIES LTD.,DevOps Innovation Unit,4-1-1 Kamikodanaka, Nakahara-ku, Kawasaki,Japan,211-8588; FUJITSU LABORATORIES LTD.,DevOps Innovation Unit,4-1-1 Kamikodanaka, Nakahara-ku, Kawasaki,Japan,211-8588","2019 20th Asia-Pacific Network Operations and Management Symposium (APNOMS)","7 Nov 2019","2019","","","1","6","In the field of ICT systems, understanding the long-term trends of resource usage is useful for efficient resource provisioning. Additionally, it is more useful to understand the trends for each business process running on a device. However, generally, analysis for each business process is not possible since the acquired resource data contains the resource data of multiple business processes. In this paper, we propose a novel analysis method that decomposes resource data into components of each business process. The proposed method is based on non-negative matrix factorization (NMF), which is generally applied for decomposing a sound signal into signals of musical instruments and vocals. By NMF, the resource data acquired for each device is decomposed into multiple components with different business characteristics, and the long-term trend for each component is estimated. As a result, it is possible to detect increases in the long-term load of a specific business process, which is not possible with conventional approaches. Finally, we evaluate the proposed method by using simulated data and real data and show that the proposed method can decompose resource data into components of each business process.","2576-8565","978-4-88552-320-5","10.23919/APNOMS.2019.8892844","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8892844","Non-negative matrix factorization;component analysis;capacity management;resource provisioning;IT operations management","Market research;Matrix decomposition;Hidden Markov models;Estimation;Batch production systems;Sparse matrices","business data processing;DP management;matrix decomposition;resource allocation","nonnegative matrix factorization;multiple components;business characteristics;long-term trend;business process;resource trend analysis;component decomposition;resource usage;resource provisioning;IT resource trend analysis;ICT systems","","1","","9","","7 Nov 2019","","","IEEE","IEEE Conferences"
"Empowering Network Service Developers: Enhanced NFV DevOps and Programmable MANO","T. Soenen; W. Tavernier; M. Peuster; F. Vicens; G. Xilouris; S. Kolometsos; M. Kourtis; D. Colle",NA; NA; NA; NA; NA; NA; NA; NA,"IEEE Communications Magazine","13 May 2019","2019","57","5","89","95","Although network functions virtualization redefined the role of the network service developer, existing concepts that are supposed to enable them are still limited, cumbersome, and time consuming in regard to the promised flexibility. This article describes how to move forward from these initial steps, identifies the challenges network service developers face during both development and runtime, and explains how to overcome them with our SCK and programmable MANO framework. We detail how our SCK facilitates the service creation process, resulting in two enhanced NFV DevOps cycles, test flexibility and quicker service development. We elaborate on our programmable MANO framework with both architectural considerations and a use case, to depict its customizability by network service developers, giving them fine-grained control over their service throughout its end-to-end operational life cycle.","1558-1896","","10.1109/MCOM.2019.1800810","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8713806","","Monitoring;Quality of service;Software defined networking;Network function virtualization;Runtime","software defined networking;virtualisation","service creation process;quicker service development;programmable MANO framework;network service developer;network functions virtualization;NFV DevOps cycles;fine-grained control","","9","","15","","13 May 2019","","","IEEE","IEEE Magazines"
"ResearchOps: The case for DevOps in scientific applications","M. de Bayser; L. G. Azevedo; R. Cerqueira","IBM Research, Av. Pasteur 146 & 138, Botafogo, Rio de Janeiro, RJ, Brazil - 2290-240; IBM Research, Av. Pasteur 146 & 138, Botafogo, Rio de Janeiro, RJ, Brazil - 2290-240; IBM Research, Av. Pasteur 146 & 138, Botafogo, Rio de Janeiro, RJ, Brazil - 2290-240","2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)","2 Jul 2015","2015","","","1398","1404","DevOps (a portmanteau of “development” and “operations”) is a software development method that extends the agile philosophy to rapidly produce software products and services and to improve operations performance and quality assurance. It was born to accelerate the delivery of Web-based systems and quickly bring new value to users. Many Web-based systems evolve according to usage trends without a clear long-term goal. Before the widespread use of Web services, most software with a clear goal were delivered as packages that users installed on their own system. New versions were delivered with a much lower frequency, with periods in between versions ranging from months to years. Development cycles were divided into large design, coding and testing phases culminating in the release of a new stable version. In software development in the context of applied science, even when the goal is clear, the process to attain it is not. Hence, working releases that capture the current software state must be released frequently in order to reduce the risks for all stakeholders and to make it possible to assess the current state of a project and steer it in the right direction. This paper explores the usefulness of DevOps concepts to improve the development of software that supports scientific projects. We establish the similarities and differences between scientific projects and Web applications development, and discuss where the related methodologies need to be extended. Unique challenges are discussed herewith developed solutions, and still open questions. Lessons learned are highlighted as best practices to be followed in research projects. This discussion is rooted in our experience in real-life projects at the IBM Research Brazil Lab, which just as well apply to other research institutions.","1573-0077","978-1-4799-8241-7","10.1109/INM.2015.7140503","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7140503","","Software;Testing;Prototypes;Conferences;Libraries;Servers;Production","program testing;project management;research and development;scientific information systems;software development management;software product lines;software prototyping;software quality;Web services","ResearchOps;DevOps;scientific applications;software development method;software products;software services;operation performance improvement;quality assurance improvement;agile software;Web-based system delivery;Web services;software packages;software development cycles;software design phase;software coding phase;software testing phase;risks reduction;project state assessent;research projects;IBM Research Brazil Lab","","15","","21","","2 Jul 2015","","","IEEE","IEEE Conferences"
"The DevOps Lab Platform for Managing Diversified Projects in Educating Agile Software Engineering","X. Bai; D. Pei; M. Li; S. Li","Department of Computer Science and Technology, Tsinghua University, Beijing, 10008, China; Department of Computer Science and Technology, Tsinghua University, Beijing, 10008, China; Department of Computer Science and Technology, Tsinghua University, Beijing, 10008, China; Department of Computer Science and Technology, Tsinghua University, Beijing, 10008, China","2018 IEEE Frontiers in Education Conference (FIE)","7 Mar 2019","2018","","","1","5","This Research Work-in-Progress paper presents the design of a Software Engineering (SE) course to support project-based practical training. Group projects, especially projects from industry partners, are deemed to be necessary for students to gain hands-on experiences. With projects from the real world, students learn not only practical engineering solutions, but also the context, constraints, and social aspects of SE. For a course having over 100 students with different interests and experiences, it is desired to provide diversified choices of projects to stimulate enthusiasm for learning. However, management and evaluation of diversified projects are challenging. Following the Agile principles, we need to continuously track progress and activities of each group, to provide quick feedback of deliveries, and to periodically evaluate students' performance. Therefore, we built a DevOps platform based on GitLab version control and continuous integration framework. Commits to GitLab code repositories automatically trigger build, testing, and analysis functions (which provide both qualitative and quantitative feedback to the students). This system has been in operations since 2014 for an undergraduate SE course, with over 500 students participating in over 130 project teams in total. The preliminary research showed promising results in improving SE education.","2377-634X","978-1-5386-1174-6","10.1109/FIE.2018.8658817","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8658817","","Software;Tools;Task analysis;Industries;Testing;Education;Collaboration","computer aided instruction;computer science education;educational courses;software prototyping;teaching","project-based practical training;industry partners;hands-on experiences;DevOps lab platform;software engineering course;SE course;agile software engineering education;social aspect;GitLab version control;continuous integration framework","","5","","13","","7 Mar 2019","","","IEEE","IEEE Conferences"
"A Requirement-based Regression Test Selection Technique in Behavior-Driven Development","J. Xu; Q. Du; X. Li","Tongji University,School of Software Engineering,Shanghai,China; Tongji University,School of Software Engineering,Shanghai,China; Tongji University,College of Civil Engineering,Shanghai,China","2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)","9 Sep 2021","2021","","","1303","1308","Regression testing is an essential software maintenance activity before the release of a new version implementing a bug fix or a new feature. A regression test selection (RTS) technique chooses a subset of existing test cases to ensure that the system will not be adversely affected by the latest modifications. With the rise of DevOps, behavior-driven development (BDD) is growing in popularity as it is in close alignment with agile practices, for example, continuous integration. Hence, it is necessary to propose a novel and effective RTS technique for BDD specifically to accelerate the development process while ensuring software quality. Since most existing techniques for RTS are code-based and thus subject to some limitations, we present a requirement-based technique which uses the requirements in BDD to select test cases in both high-level (acceptance testing) and low-level (unit testing). Our technique firstly illustrates the new requirement with a scenario, and subsequently computes the semantic similarity of the new scenario and all existing scenarios with the vector space model. According to the results, the modification-traversing regression test cases can be selected in a semi-automated way. We also conduct an experimental study to evaluate our technique in terms of inclusiveness, precision, efficiency and generality. The study shows that our technique is applicable for BDD and effective in practice.","0730-3157","978-1-6654-2463-9","10.1109/COMPSAC51774.2021.00182","Delta; National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9529903","regression test selection;behavior-driven development;requirement-based technique;vector space model","Software maintenance;Codes;Computational modeling;Conferences;Semantics;Computer bugs;Software quality","object-oriented methods;program testing;regression analysis;software maintenance;software quality","requirement-based regression test selection technique;behavior-driven development;regression testing;essential software maintenance activity;RTS;BDD specifically;software quality;code-based;requirement-based technique;acceptance testing;unit testing;existing scenarios;modification-traversing regression test cases","","","","19","","9 Sep 2021","","","IEEE","IEEE Conferences"
"DevOps Security and Privacy in the Development of Multicloud Applications","S. F. Ahamed; M. Dhar M S; S. K. Kishore; M. P. Borawake; T. D. R; M. Thenmozhi","V R Siddhartha Engineering College,Dept. of ECE,Vijayawada,India; Vel Tech Rangarajan Dr. Sagunthala R&D Institute of Science and Technology,Dept. of CSE,Chennai,India; Prasad V. Potluri Siddhartha Institute of Technology,Dept. of CSE,Vijayawada,India; PDEA’s College of Engineering,Pune,India; Bharath University,Dept. of CSE,Chennai,India; Vellore Institute of Technology,Vellore,India","2022 International Conference on Electronics and Renewable Systems (ICEARS)","13 Apr 2022","2022","","","1631","1635","There are many different types of services that can be provided to cloud computing consumers, such as on-demand services, flexible pricing, and risk transfer during resource sharing. The security of data, energy consumption, and server consolidation are all issues that cloud computing is now grappling with. There has been some research on enhancing security at several levels, including application, operating system, VM, and hardware. An innovative DevOps framework and methodology are presented in this thesis to help rationalize and systematize security and privacy analyses in multiCloud so that an informed decision-process for risk-cost balanced selection of the protections of system components and the protections requested from Cloud Service Providers can be enabled. MultiCloud application development is the primary emphasis of the work being done at this time.","","978-1-6654-8425-1","10.1109/ICEARS53579.2022.9752387","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9752387","DevOps","Cloud computing;Privacy;Renewable energy sources;Operating systems;Pipelines;Pricing;Servers","","","","","","15","","13 Apr 2022","","","IEEE","IEEE Conferences"
"DevOps for AI – Challenges in Development of AI-enabled Applications","L. E. Lwakatare; I. Crnkovic; J. Bosch","Chalmers University of Technology,Computer Science and Engineering,Gothenburg,Sweden; Chalmers University of Technology,Computer Science and Engineering,Gothenburg,Sweden; Chalmers University of Technology,Computer Science and Engineering,Gothenburg,Sweden","2020 International Conference on Software, Telecommunications and Computer Networks (SoftCOM)","28 Oct 2020","2020","","","1","6","When developing software systems that contain Machine Learning (ML) based components, the development process become significantly more complex. The central part of the ML process is training iterations to find the best possible prediction model. Modern software development processes, such as DevOps, have widely been adopted and typically emphasise frequent development iterations and continuous delivery of software changes. Despite the ability of modern approaches in solving some of the problems faced when building ML-based software systems, there are no established procedures on how to combine them with processes in ML workflow in practice today. This paper points out the challenges in development of complex systems that include ML components, and discuss possible solutions driven by the combination of DevOps and ML workflow processes. Industrial cases are presented to illustrate these challenges and the possible solutions.","1847-358X","978-953-290-099-6","10.23919/SoftCOM50211.2020.9238323","Vinnova; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9238323","AI;Machine Learning;Agile software development","Training;Buildings;Machine learning;Predictive models;Software systems;Computer networks;Telecommunications","cloud computing;learning (artificial intelligence);object-oriented programming;software maintenance;software prototyping","continuous delivery;frequent development iterations;modern software development processes;possible prediction model;ML process;developing software systems;AI-enabled applications;AI - challenges;ML workflow processes;DevOps;ML components;complex systems;building ML-based software systems;software changes","","2","","15","","28 Oct 2020","","","IEEE","IEEE Conferences"
"VeriDevOps: Automated Protection and Prevention to Meet Security Requirements in DevOps","A. Sadovykh; G. Widforss; D. Truscan; E. P. Enoiu; W. Mallouli; R. Iglesias; A. Bagnto; O. Hendel","Innopolis University,Russia; Mälardalen University,Sweden; Åbo Akademi University,Finland; Mälardalen University,Sweden; Montimage EURL,France; Ikerlan Technology Research Centre, Basque Research and Technology Alliance (BRTA),Spain; Softeam,France; Mälardalen University,Sweden","2021 Design, Automation & Test in Europe Conference & Exhibition (DATE)","16 Jul 2021","2021","","","1330","1333","Current software development practices are increasingly based on using both COTS and legacy components which make such systems prone to security vulnerabilities. The modern practice addressing ever changing conditions, DevOps, promotes frequent software deliveries, however, verification methods artifacts should be updated in a timely fashion to cope with the pace of the process. VeriDevOps, Horizon 2020 project, aims at providing a faster feedback loop for verifying the security requirements and other quality attributes of large scale cyber-physical systems. VeriDevOps focuses on optimizing the security verification activities, by automatically creating verifiable models directly from security requirements formulated in natural language, using these models to check security properties on design models and then generating artefacts such as, tests or monitors that can be used later in the DevOps process. The main drivers for these advances are: Natural Language Processing, a combined formal verification and model-based testing approach, and machine-learning-based security monitors. VeriDevOps is in its initial stage - the project started on 1.10.2020 and it will run for three years. In this paper we will present the major conceptual ideas behind the project approach as well as the organizational settings.","1558-1101","978-3-9819263-5-4","10.23919/DATE51398.2021.9474185","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9474185","Model-Driven Engineering;Cybersecurity;Security-by-design;Prevention and Reaction;Requirement;Design checking;Testing and validation;Runtime Analysis;Root cause analysis;Natural Language Processing;Machine Learning","Analytical models;Root cause analysis;Leadership;Runtime;Natural language processing;Security;Monitoring","data protection;formal specification;learning (artificial intelligence);natural language processing;program testing;program verification;security of data;software maintenance","automated protection;security requirements;current software development practices;legacy components;security vulnerabilities;software deliveries;verification methods artifacts;VeriDevOps;Horizon 2020 project;feedback loop;security verification activities;verifiable models;security properties;design models;DevOps process;Natural Language Processing;combined formal verification;machine-learning-based security monitors;large scale cyber-physical systems","","1","","11","","16 Jul 2021","","","IEEE","IEEE Conferences"
"Analysis on the Use of Declarative and Pull-based Deployment Models on GitOps Using Argo CD","Ramadoni; E. Utami; H. A. Fatta","Magister of Informatics Engineering, Universitas Amikom Yogyakarta,Yogyakarta,Indonesia; Magister of Informatics Engineering, Universitas Amikom Yogyakarta,Yogyakarta,Indonesia; Magister of Informatics Engineering, Universitas Amikom Yogyakarta,Yogyakarta,Indonesia","2021 4th International Conference on Information and Communications Technology (ICOIACT)","20 Oct 2021","2021","","","186","191","Currently, the problems faced by software developers in implementing the DevOps method include security issues of a person's ability to directly access and change clusters and the ineffective rollback process in the application deployment process to an application platform. The GitOps method was applied in this study to investigate and test how GitOps was able to solve these problems. This research used pull-based deployment and declarative deployment approaches rather than the push-based deployment models commonly used in today's CI/CD pipelines. The Argo CD tool serves as an operator, and Kubernetes serves as a platform for deploying container-based applications. This study is expected to be a recommendation for companies or institutions as well as individuals who want to start adopting DevOps or who want to take DevOps implementation to the next level using the GitOps method","","978-1-6654-3394-5","10.1109/ICOIACT53268.2021.9563984","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9563984","GitOps;DevOps;Declarative Deployment;Pull-based Deployment;Argo CD","Analytical models;Pipelines;Companies;Tools;Software;Security;Servers","cloud computing;service-oriented architecture","DevOps method;security issues;application deployment process;GitOps method;declarative deployment approaches;push-based deployment models;container-based applications;software developers;pull-based deployment models;argo CD tool","","","","14","IEEE","20 Oct 2021","","","IEEE","IEEE Conferences"
"Continuous Debugging of Microservices","H. Zhu; I. Bayley; H. Wang","School of Engineering, Computing and Mathematics, Oxford Brookes University,Oxford,UK,OX33 1HX; School of Engineering, Computing and Mathematics, Oxford Brookes University,Oxford,UK,OX33 1HX; School of Computer and Communication Engineering, University of Science and Technology Beijing,Beijing,China,100083","2020 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)","4 Jun 2021","2020","","","736","745","Debugging is one of the most difficult tasks during the development of cloud-native applications for the microservices architecture. This paper proposes a continuous debugging facility to support the DevOps continuous development methodology. It has been implemented and integrated into the Integrated DevOps Environment CIDE for microservices written in the agent-oriented programming language CAOPLE. The paper also reports controlled experiments with the debug facility. Experiment data show that the overhead is less than 3% of the execution time on average.","","978-1-6654-1485-2","10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00118","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9443989","Software-as-a-Service;Microservices;Cloud native applications;Integrated DevOps Environment;Debug facility;Continuous debugging","Computer languages;Debugging;Task analysis","cloud computing;object-oriented methods;program debugging;service-oriented architecture;software agents","cloud native applications;microservices architecture;Integrated DevOps Environment CIDE;continuous debugging;DevOps continuous development;agent oriented programming language;CAOPLE","","","","25","","4 Jun 2021","","","IEEE","IEEE Conferences"
"What Flows through a Software Value Stream?","M. Kersten",Tasktop,"IEEE Software","6 Jul 2018","2018","35","4","8","11","Most enterprise IT organizations don't have a well-defined productivity measure for what flows through their software production process. No clear consensus exists from academia or industry thought leaders on what constitutes software development productivity. Organizations know it when they see it-for example, through products that drive market adoption faster than others. But correlating development activities to those results has been more of an opaque art than a disciplined activity. To define productivity in a value stream, we must first define what flows.","1937-4194","","10.1109/MS.2018.2801538","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8405621","software delivery value stream;software delivery;software value stream;lean software development;agile software development;DevOps;flow units;features;defects;technical debt;risk;Scaled Agile Framework;SAFe;Information Technology Infrastructure Library;ITIL;software development tools;software development;software engineering;On DevOps","Software product lines;Computer security;Production management;Production systems;Task analysis;Performance evaluation","organisational aspects;productivity;software engineering","software value stream;software production process;software development productivity;enterprise IT organizations;productivity measure","","3","","10","","6 Jul 2018","","","IEEE","IEEE Magazines"
"MV4MS: A Spring Cloud based Framework for the Co-Deployment of Multi-Version Microservices","L. Liu; X. He; Z. Tu; Z. Wang","Harbin Institute of Technology,School of Computer Science and Technology; Harbin Institute of Technology,School of Computer Science and Technology; Harbin Institute of Technology,School of Computer Science and Technology; Harbin Institute of Technology,School of Computer Science and Technology","2020 IEEE International Conference on Services Computing (SCC)","11 Dec 2020","2020","","","194","201","Agile development and the loose coupling of microservices, make continuous delivery/deployment of large, complex service systems become much easier. The microservices are upgraded and released independently and have their own independent version trees. For compatibility, multiple versions of one microservice are to be deployed in the same system to offer slightly different functionalities to different users simultaneously. However, loosely-coupling does not mean multiple microservices keep absolutely independent but there are more or less dependencies among them, and such dependencies occur not only on functionalities but also on the version issue, too. Existing microservice frameworks have no enough capability for multi-version co-deployment and the corresponding version-oriented dependency management. In this paper, a Spring Cloud based framework called MV4MS is introduced for this challenge. It extracts version information from source codes of microservices, builds version dependencies, packs and deploys requisite versions of microservices, and routes user requests to desired versions at run-time. Architecture of MV4MS and detailed design of its components are elaborately introduced. Experiments are conducted in AWS cloud environment, and results show that our framework could reduce the complexity of multi-version microservice co-deployment and ensure the correctness of routing between multi-version microservice.","2474-2473","978-1-7281-8789-1","10.1109/SCC49832.2020.00033","Research and Development; National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284506","Microservices;Multi-Version Co-Deployment;Version Dependency;Spring Cloud;Routing;DevOps","Couplings;Conferences;Service computing;Computer architecture;Routing;Data mining;Springs","cloud computing;software prototyping","independent version trees;loosely-coupling;microservice frameworks;Spring Cloud based framework;version information;version dependencies;multiversion microservice;version-oriented dependency management;MV4MS framework","","4","","15","","11 Dec 2020","","","IEEE","IEEE Conferences"
"Towards MLOps: A Framework and Maturity Model","M. M. John; H. H. Olsson; J. Bosch","Malmö University,Computer Science and Media Technology,Malmö,Sweden; Malmö University,Computer Science and Media Technology,Malmö,Sweden; Chalmers University of Technology,Computer Science and Engineering,Gothenburg,Sweden","2021 47th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)","27 Oct 2021","2021","","","1","8","The adoption of continuous software engineering practices such as DevOps (Development and Operations) in business operations has contributed to significantly shorter software development and deployment cycles. Recently, the term MLOps (Machine Learning Operations) has gained increasing interest as a practice that brings together data scientists and operations teams. However, the adoption of MLOps in practice is still in its infancy and there are few common guidelines on how to effectively integrate it into existing software development practices. In this paper, we conduct a systematic literature review and a grey literature review to derive a framework that identifies the activities involved in the adoption of MLOps and the stages in which companies evolve as they become more mature and advanced. We validate this framework in three case companies and show how they have managed to adopt and integrate MLOps in their large-scale software development companies. The contribution of this paper is threefold. First, we review contemporary literature to provide an overview of the state-of-the-art in MLOps. Based on this review, we derive an MLOps framework that details the activities involved in the continuous development of machine learning models. Second, we present a maturity model in which we outline the different stages that companies go through in evolving their MLOps practices. Third, we validate our framework in three embedded systems case companies and map the companies to the stages in the maturity model.","","978-1-6654-2705-0","10.1109/SEAA53835.2021.00050","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9582569","MLOps;Framework;Maturity Model;SLR;GLR;Validation Study","Embedded systems;Systematics;Bibliographies;Companies;Machine learning;Software;Software engineering","embedded systems;learning (artificial intelligence);object-oriented programming;software development management;software engineering;software quality;software reusability","data scientists;operations teams;software development practices;systematic literature review;grey literature review;large-scale software development companies;review contemporary literature;MLOps framework;continuous development;machine learning models;maturity model;MLOps practices;embedded systems case companies;towards MLOps;continuous software engineering practices;business operations;shorter software development;deployment cycles;term MLOps;Machine Learning Operations","","1","","50","","27 Oct 2021","","","IEEE","IEEE Conferences"
"SafeOps: A Concept of Continuous Safety","C. Fayollas; H. Bonnin; O. Flebus",Continental - Vehicle Networking and Information; Continental - Vehicle Networking and Information; Continental - Vehicle Networking and Information,"2020 16th European Dependable Computing Conference (EDCC)","23 Oct 2020","2020","","","65","68","Improved safety is one of the key benefits expected from autonomous vehicles. This can only be achieved if the autonomous vehicles are guaranteed to be safe enough. This paper proposes a potential approach contributing to this safety improvement: it describes and investigates ""SafeOps"", a concept of ""continuous safety"", based on the DevOps approach, unifying development and operations. DevOps consists in a set of practices intended to reduce the time between committing a change to a system and the change being deployed into production, while ensuring high quality. DevOps benefits to system development and delivery by enabling software continuous delivery, faster changes management with faster issues resolution, and improved reliability. SafeOps key principle is to monitor the system in operation and to use this information for validating and certifying a certain safety assurance level. Following this approach, a system could be compliant to a first safety assurance level when it's first delivered and compliant to higher ones when validated in operation.","2641-810X","978-1-7281-8936-9","10.1109/EDCC51268.2020.00020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9237051","Functional Safety, DevOps, Autonomous vehicles, Continuous Integration, Continuous Deployment, CI/CD, Data-intensive Systems, Cloud-Native Systems, Artificial Intelligence, Machine Learning","Safety;Monitoring;Software;Testing;Microprogramming;ISO Standards;Accidents","formal specification;software quality;Web services","SafeOps key principle;safety assurance level;autonomous vehicles;DevOps approach;system development;software continuous delivery","","","","14","","23 Oct 2020","","","IEEE","IEEE Conferences"
"Walker: DevOps Inspired Workflow for Experimentation","M. Chwalisz; K. Geissdoerfer; A. Wolisz","Telecommunication Networks Group, Technische Universität Berlin, Berlin, Germany; Networked Embedded Systems Group, Technische Universität Dresden, Dresden, Germany; Telecommunication Networks Group, Technische Universität Berlin, Berlin, Germany","IEEE INFOCOM 2019 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)","23 Sep 2019","2019","","","277","282","Experimentation with computer networks under realistic conditions is a necessary step in debugging, profiling and validation towards real deployments and applications. Although the definition of relevant experimentation scenarios is usually relatively straightforward, their implementation and execution are unfortunately difficult and tedious. Generation of extensive experiment documentation assuring replicability is increasingly challenging even for experienced researchers. In this paper, we explain how a typical experimentation workflow can be supported using properly selected tools and components from the DevOps ecosystem, leading to repeatable, well-defined measurements. We start with a general approach using ad-hoc setups. Next, we show how the featured set of tools can be used with, and benefit from, existing testbeds.","","978-1-7281-1878-9","10.1109/INFCOMW.2019.8845199","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8845199","Experimentation;Wireless Networks;Monitoring;Wireless Testbeds","Tools;Hardware;Linux;Automation;Operating systems;Ad hoc networks","ad hoc networks;computer networks;computer testing;document handling;software quality;software tools","DevOps ecosystem;computer networks;experimentation workflow","","1","","24","","23 Sep 2019","","","IEEE","IEEE Conferences"
"Team Discussions and Dynamics During DevOps Tool Adoptions in OSS Projects","L. Yin; V. Filkov","University of California,DECAL and CS Department,Davis; University of California,DECAL and CS Department,Davis","2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)","24 Dec 2020","2020","","","697","708","In Open Source Software (OSS) projects, pre-built tools dominate DevOps-oriented pipelines. In practice, a multitude of configuration management, cloud-based continuous integration, and automated deployment tools exist, and often more than one for each task. Tools are adopted (and given up) by OSS projects regularly. Prior work has shown that some tool adoptions are preceded by discussions, and that tool adoptions can result in benefits to the project. But important questions remain: how do teams decide to adopt a tool? What is discussed before the adoption and for how long? And, what team characteristics are determinant of the adoption?In this paper, we employ a large-scale empirical study in order to characterize the team discussions and to discern the team-level determinants of tool adoption into OSS projects' development pipelines. Guided by theories of team and individual motivations and dynamics, we perform exploratory data analyses, do deep-dive case studies, and develop regression models to learn the determinants of adoption and discussion length, and the direction of their effect on the adoption. From data of commit and comment traces of large-scale GitHub projects, our models find that prior exposure to a tool and member involvement are positively associated with the tool adoption, while longer discussions and the number of newer team members associate negatively. These results can provide guidance beyond the technical appropriateness for the timeliness of tool adoptions in diverse programmer teams. Our data and code is available at https://github.com/lkyin/tool_adoptions. In this paper, we employ a large-scale empirical study in order to characterize the team discussions and to discern the team-level determinants of tool adoption into OSS projects' development pipelines. Guided by theories of team and individual motivations and dynamics, we perform exploratory data analyses, do deep-dive case studies, and develop regression models to learn the determinants of adoption and discussion length, and the direction of their effect on the adoption. From data of commit and comment traces of large-scale GitHub projects, our models find that prior exposure to a tool and member involvement are positively associated with the tool adoption, while longer discussions and the number of newer team members associate negatively. These results can provide guidance beyond the technical appropriateness for the timeliness of tool adoptions in diverse programmer teams. Our data and code is available at https://github.com/lkyin/tool_adoptions.","2643-1572","978-1-4503-6768-4","","National Science Foundation(grant numbers:1717370); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9285652","","Analytical models;Data analysis;Pipelines;Tools;Data models;Task analysis;Software development management","cloud computing;configuration management;data analysis;project management;public domain software;regression analysis;team working","DevOps tool adoptions;team-level determinants;team discussions;newer team members;large-scale GitHub projects;OSS projects;tool adoption","","","","54","","24 Dec 2020","","","IEEE","IEEE Conferences"
"NFV service dynamicity with a DevOps approach: Insights from a use-case realization","S. Van Rossem; X. Cai; I. Cerrato; P. Danielsson; F. Németh; B. Pechenot; I. Pelle; F. Risso; S. Sharma; P. Sköldström; W. John","Ghent University iMinds, Department of Information Technology, Belgium; Ericsson Research, Cloud Technologies, Sweden; Politecnico di Torino, Department of Control and Computer Engineering, Italy; SICS Swedish ICT AB, Sweden; Budapest University of Technology and Economics, Hungary; Acreo Swedish ICT AB, Sweden; Budapest University of Technology and Economics, Hungary; Politecnico di Torino, Department of Control and Computer Engineering, Italy; Ghent University iMinds, Department of Information Technology, Belgium; Acreo Swedish ICT AB, Sweden; Ericsson Research, Cloud Technologies, Sweden","2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM)","24 Jul 2017","2017","","","674","679","This experience paper describes the process of leveraging the NFV orchestration platform built in the EU FP7 project UNIFY to deploy a dynamic network service exemplified by an elastic router. Elasticity is realized by scaling dataplane resources as a function of traffic load. To achieve this, the service includes a custom scaling logic and monitoring capabilities. An automated monitoring framework not only triggers elastic scaling, but also a troubleshooting process which detects and analyzes anomalies, pro-actively aiding both dev and ops personnel. Such a DevOps-inspired approach enables a shorter update cycle to the running service. We highlight multiple learnings yielded throughout the prototype realization, focussing on the functional areas of service decomposition and scaling; programmable monitoring; and automated troubleshooting. Such practical insights will contribute to solving challenges such as agile deployment and efficient resource usage in future NFV platforms.","","978-3-901882-89-0","10.23919/INM.2017.7987357","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7987357","","Monitoring;Erbium;Prototypes;Tools;Computer architecture;Containers;Databases","cloud computing;virtualisation","NFV service dynamicity;DevOps;use-case realization;EU FP7 project UNIFY;elastic router;elasticity;dataplane resources;programmable monitoring","","8","1","16","","24 Jul 2017","","","IEEE","IEEE Conferences"
"Failure-Aware Application Placement Modeling and Optimization in High Turnover DevOps Environment","T. Suk; J. Hwang; M. F. Bulut; Z. Zeng","IBM T.J. Watson Research Center; IBM T.J. Watson Research Center; IBM T.J. Watson Research Center; University of California, Berkeley","2019 IEEE 12th International Conference on Cloud Computing (CLOUD)","29 Aug 2019","2019","","","115","123","DevOps (software DEVelopment and information technology OPerationS) has established a culture and environment, in which building, testing, and releasing software happen more rapidly, frequently, and reliably through automated pipelines. To support this high turnover application cycle, the cluster orchestration frameworks such as Kubernetes or Docker Swarm have evolved to provide high flexibility and reliability. However, while cluster orchestrators run on the cloud infrastructure, any failure incurred from the infrastructure can directly impact the nodes of a cluster, so infrastructure failures can disrupt applications running on the cluster. In this paper, we propose proactive application placement algorithms with prediction of infrastructure failures. The proposed algorithms utilize failure-risk measurements, Failure-Index, determined from turnover rate of applications and prediction of infrastructure failures. We build stochastic models for application turnover and infrastructure failure processes, and provide various types of Failure-Index. Our placement algorithms are implemented in an orchestration framework, Kubernetes, and in the simulation model. Experimental results show that our methods reduce the amount of application disruption by 20% than the state-of-the-art algorithms in Kubernetes.","2159-6190","978-1-7281-2705-7","10.1109/CLOUD.2019.00030","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8814582","Microservices;Placement Algorithm","Software;Cloud computing;Testing;Prediction algorithms;Servers;Pipelines;Clustering algorithms","cloud computing;program testing;software engineering","Kubernetes;cloud infrastructure;infrastructure failures;proactive application placement algorithms;failure-risk measurements;Failure-Index;application turnover;high turnover DevOps environment;cluster orchestration frameworks;failure-aware application placement modeling;software development and information technology operations;Docker Swarm","","1","","39","","29 Aug 2019","","","IEEE","IEEE Conferences"
"Software Services Engineering Manifesto - A Cross-Cutting Declaration","C. K. Chang; P. Ceravolo; R. N. Chang; S. Helal; Z. Jin; X. Liu; H. Ming","Iowa State University; University of Milan; IBM T.J., Watson Research Center; University of Florida; Peking University; Peking University; Oakland University","2021 IEEE International Conference on Web Services (ICWS)","11 Nov 2021","2021","","","703","709","As we have entered the Internet-of-Things (IoT) era, further blessed with rapid advances in several key technological areas including DevOps, AI/ML, 5G/6G/, neurocomputing, to name a few, it is imperative we think big and aim high. This new venture will require professionals in both software engineering and services computing to collaborate with an unprecedented intensity, and jointly develop the new interdisciplinary field hereby named Software Services Engineering (SSE). In SSE, the ever-deepening system dynamics emerging from both environments and humans in varying contexts are imposing steep challenges to both researchers and practitioners. Humans, both developers and the vast number of end users, are embedded ever closer to IoT environments, and are being afforded ample opportunities to continuously inject inputs during system development and after deployment. In fact, humans are increasingly playing the roles of both sensor and actuator. Traditional requirements engineering researchers are being lured more than ever into exploiting the IoT environments where human users are deeply embedded, to gather contextual information that inevitably introduces lots of ambiguity and uncertainty. Provisioning of highly adaptable and scalable microservices would be key to timely meeting ever-changing human desires and ever-evolving system requirements in the nimblest manner. As such, an ultra-agile and field-programmable development methodology and environment will be imperative to achieving such ultrafine grained microservices provisioning. Such ultra-agility and ultrafine granularity requirements imposed to the services industry obligate company executives to expect extreme manageability assurance to become the centroid of system operations and administration. The ultimate goal in pursuit of such a noble dream will be to provide genuinely individualized and trustworthy service, possibly enabled by AI, but it should be both explainable and ethical. Facing such grand challenges, this declaration samples a subset of burning issues in SSE through observations in seven themes, only meant to be starting points for the SSE community to further investigate. Through our declarations we also call for heightened attention to an assorted array of existing, barely emerging or non-existent services computing and software engineering methods for a concerted effort to research and explore.","","978-1-6654-1681-8","10.1109/ICWS53863.2021.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9590227","agile;AI;context-aware;DevOps;IoT;microservice;ML;requirements engineering;services computing;situation-aware;software engineering;software services engineering;uncertainty","Industries;Ethics;Uncertainty;Web services;System dynamics;Systems operation;Service computing","Internet of Things;software engineering;Web services","cross-cutting declaration;Internet-of-Things;system dynamics;IoT environments;system development;sensor;actuator;contextual information;scalable microservices;ultrafine granularity requirements;service industry;system operations;trustworthy service;declaration samples;SSE community;nonexistent service computing;ultrafine grained microservice provisioning;traditional requirement engineering researchers;software service engineering method;field-programmable development methodology;extreme manageability assurance;neurocomputing;DevOps;AI-ML;5G-6G","","","","53","","11 Nov 2021","","","IEEE","IEEE Conferences"
"A framework for a cost-efficient cloud ecosystem","E. Salant; P. Leitner; K. Wallbom; J. Ahtes","IBMResearch Haifa, University Campus, Haifa, 31905, Israel; Software evolution & architecture lab, University of Zurich, Switzerland; Cloudmore, Sweden; Atos, Avenue Diagonal 200, Barcelona, 08018, Spain","eChallenges e-2015 Conference","28 Mar 2016","2015","","","1","9","Cloud Computing has developed rapidly over the last ten years with worldwide spending on public and private cloud hosting passing the $32bn. mark this year, and savings to businesses using the cloud are typically stated as better than 30% due to the cloud's ability to better take advantage of economies of scale. Yet, in actuality, in commercial data centres the utilization of resources still remain low. In this paper we introduce a new approach from CloudWave which uses user-defined performance goals as well as monitoring across the Cloud ecosystem as a means for guiding runtime adaptation of both the cloud infrastructure and the hosted service to improve overall performance. In addition, inspired by the current industry trend of DevOps methodology, CloudWave feeds runtime performance and monitoring insights back to the DevOps engineers to enable identification and refactoring of problematic code sections. The potential impact for improving data centre efficiency is huge - as Google researcher John Wilkes has pointed out that at such large scales, ""A few percent here, a few percent there, and all of the sudden, you're talking about huge amounts of money"". After two years of research, the CloudWave platform is starting to test its ideas on actual applications, which in turn is exposing new avenues for research.","2166-1677","978-1-9058-2453-3","10.1109/eCHALLENGES.2015.7441074","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7441074","","Decision support systems;Electronic mail;Information management;Facsimile;Service-oriented architecture","cloud computing;computer centres;resource allocation;software maintenance","cost-efficient cloud ecosystem;public cloud hosting;private cloud hosting;resource utilization;user-defined performance goals;runtime adaptation;cloud infrastructure;DevOps methodology;runtime performance;runtime monitoring;problematic code section refactoring;problematic code section identification;data centre efficiency;CloudWave platform;cloud computing","","","","17","","28 Mar 2016","","","IEEE","IEEE Conferences"
"The Popper Convention: Making Reproducible Systems Evaluation Practical","I. Jimenez; M. Sevilla; N. Watkins; C. Maltzahn; J. Lofstead; K. Mohror; A. Arpaci-Dusseau; R. Arpaci-Dusseau",NA; NA; NA; NA; NA; NA; NA; NA,"2017 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)","3 Jul 2017","2017","","","1561","1570","Independent validation of experimental results in the field of systems research is a challenging task, mainly due to differences in software and hardware in computational environments. Recreating an environment that resembles the original is difficult and time-consuming. In this paper we introduce _Popper_, a convention based on a set of modern open source software (OSS) development principles for generating reproducible scientific publications. Concretely, we make the case for treating an article as an OSS project following a DevOps approach and applying software engineering best-practices to manage its associated artifacts and maintain the reproducibility of its findings. Popper leverages existing cloud-computing infrastructure and DevOps tools to produce academic articles that are easy to validate and extend. We present a use case that illustrates the usefulness of this approach. We show how, by following the _Popper_ convention, reviewers and researchers can quickly get to the point of getting results without relying on the original author's intervention.","","978-1-5386-3408-0","10.1109/IPDPSW.2017.157","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7965226","reproducibility;systems research;state of the practice;repeatability;replicability","Tools;Software;Packaging;Automation;Virtual machining;Guidelines;Virtualization","cloud computing;natural sciences computing;public domain software;software engineering","computational environments;open source software development principles;reproducible scientific publications;OSS project;DevOps approach;software engineering;cloud-computing infrastructure;DevOps tools;Popper convention;reproducible systems evaluation","","26","","34","","3 Jul 2017","","","IEEE","IEEE Conferences"
"Adoption, Support, and Challenges of Infrastructure-as-Code: Insights from Industry","M. Guerriero; M. Garriga; D. A. Tamburri; F. Palomba",Politecnico di Milano; Jheronimus Academy of Data Science & Tilburg University; Jheronimus Academy of Data Science & Eindhoven University of Technology; University of Zurich,"2019 IEEE International Conference on Software Maintenance and Evolution (ICSME)","5 Dec 2019","2019","","","580","589","Infrastructure-as-code (IaC) is the DevOps tactic of managing and provisioning infrastructure through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools. From a maintenance and evolution perspective, the topic has picked the interest of practitioners and academics alike, given the relative scarcity of supporting patterns, best practices, tools, and software engineering techniques. Using the data coming from 44 semistructured interviews to senior developers of as many companies, in this paper we shed light on the state of the practice in the adoption of IaC and the key software engineering challenges in the field. Particularly, we investigate (i) how practitioners adopt and develop IaC, (ii) which support is currently available, i.e., the typically used tools and their advantages/disadvantages, and (iii) what are the practitioner's needs when dealing with IaC development, maintenance, and evolution. Our findings clearly highlight the need for more research in the field: the support provided by currently available tools is still limited, and developers feel the need of novel techniques for testing and maintaining IaC code.","2576-3148","978-1-7281-3094-1","10.1109/ICSME.2019.00092","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8919181","Infrastructure-as-Code;DevOps;Software Maintenance & Evolution;Cloud Automation","Tools;Interviews;Companies;Cloud computing;Software maintenance;Maintenance engineering","cloud computing;program testing;project management;software development management;software maintenance","interactive configuration tools;evolution perspective;relative scarcity;supporting patterns;physical hardware configuration;machine-readable definition files;managing provisioning infrastructure;DevOps tactic;infrastructure-as-code;IaC code;currently available tools;IaC development;practitioner;key software engineering challenges;senior developers;44 semistructured interviews;software engineering techniques","","15","","24","","5 Dec 2019","","","IEEE","IEEE Conferences"
"Preliminary Findings about DevSecOps from Grey Literature","R. Mao; H. Zhang; Q. Dai; H. Huang; G. Rong; H. Shen; L. Chen; K. Lu","Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China; Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China; Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China; Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China; Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China; Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China; Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China; Nanjing University,State Key Laboratory for Novel Software Technology,Nanjing,China","2020 IEEE 20th International Conference on Software Quality, Reliability and Security (QRS)","11 Dec 2020","2020","","","450","457","Context: Emerging from the agile culture, DevOps particularly emphasizes development and deployment speed to achieve rapid value delivery, which however brings some security risks to the software development process. DevSecOps is an extension of DevOps, which is considered as a means to intertwine development, operation and security. Some companies with security concerns begin to take DevSecOps into consideration when it comes to the application of DevOps. Objective: The goal of this study is to report the state-of-the-practice of DevSecOps as well as calling for academia to pay more attention to DevSecOps. Method: Using Google search engine to collect articles on DevSecOps, we conducted a Grey Literature Review (GLR) on the selected articles. Results: Whilst there exists three major software security risks in DevOps, the establishment of DevOps pipeline provides opportunities for software security activities. Based on the preliminary consensus that DevSecOps is an extension of DevOps, it is observed that the interpretations of DevSecOps can be classified into three core aspects, which are: DevSecOps capabilities, cultural enablers, and technological enablers. Furthermore, to materialize the interpretations into daily software production activities, the recommended DevSecOps practices we obtain from Grey Literature (GL) can be categorized in terms of process, infrastructure and collaboration. Conclusion: Although DevSecOps is getting increasing attention by industry, it is still in its infancy and needs to be promoted by both academia and industry.","","978-1-7281-8913-0","10.1109/QRS51102.2020.00064","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9282798","DevSecOps;DevOps;Grey literature review;Empirical software engineering","Industries;Collaboration;Software quality;Software reliability;Security;Cultural differences;Software engineering","organisational aspects;search engines;security of data;software development management","Grey Literature;DevOps;software development process;software security risks;software security activities;DevSecOps capabilities;DevSecOps practices;Google search engine","","5","","35","","11 Dec 2020","","","IEEE","IEEE Conferences"
"A Machine Learning Based Monitoring Framework for Side-Channel Information Leaks","M. Lescisin; Q. H. Mahmoud","Department of Electrical, Computer, and Software Engineering, University of Ontario Institute of Technology, Oshawa, ON, Canada; Department of Electrical, Computer, and Software Engineering, University of Ontario Institute of Technology, Oshawa, ON, Canada","IEEE Open Journal of the Computer Society","26 Mar 2021","2021","2","","139","151","Computer and network security is an ever important field of study as information processed by these systems is of ever increasing value. The state of research on direct attacks, such as exploiting memory safety or shell input errors is well established and a rich set of testing tools are available for these types of attacks. Machine-learning based intrusion detection systems are also available and are commonly deployed in production environments. What is missing, however, is the consideration of implicit information flows, or <italic>side-channels</italic>. Research has revealed side-channels formed by everything from CPU acoustic noise, to encrypted network traffic patterns, to computer monitor ambient light. Furthermore, no portable method exists for distributing side-channel test cases. This paper introduces a framework for adversary modeling and feedback generation on what the adversary may learn from the various side-channel information sources. The framework operates by monitoring <italic>two</italic> data streams; the first being the stream of side-channel cues, and the second being the stream of private system activity. These streams are used for <italic>training</italic> and <italic>evaluating</italic> a <italic>machine learning classifier</italic> to determine its performance of private system activity prediction. A prototype has been built to evaluate side-channel effects on <italic>four</italic> popular scenarios.","2644-1268","","10.1109/OJCS.2021.3061445","Natural Sciences and Engineering Research Council of Canada; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9361206","Data mining;devops;machine learning;security;side-channel;software quality","Side-channel attacks;Monitoring;Software quality;Servers;Data models;Machine learning;Data mining","computer network security;cryptography;learning (artificial intelligence)","machine learning classifier;side-channel test cases;side-channel information leaks;private system activity prediction;feedback generation;adversary modeling;computer monitor ambient light;encrypted network traffic patterns;CPU acoustic noise;machine learning based intrusion detection systems;network security;monitoring framework","","","","29","CCBY","23 Feb 2021","","","IEEE","IEEE Journals"
"A Model-Driven Architectural Design Method for Big Data Analytics Applications","C. Castellanos; B. Pérez; D. Correal; C. A. Varela","University of Los Andes,System Engineering and Computing Department,Bogotá,Colombia; University of Los Andes,System Engineering and Computing Department,Bogotá,Colombia; University of Los Andes,System Engineering and Computing Department,Bogotá,Colombia; Rensselaer Polytechnic Institute,Computer Science Department,Troy,NY,USA","2020 IEEE International Conference on Software Architecture Companion (ICSA-C)","19 May 2020","2020","","","89","94","Big data analytics (BDA) applications use machine learning to extract valuable insights from large, fast, and heterogeneous data sources. The architectural design and evaluation of BDA applications entail new challenges to integrate emerging machine learning algorithms with cutting-edge practices whilst ensuring performance levels even in the presence of large data volume, velocity, and variety (3Vs). This paper presents a design process approach based on the Attribute-Driven Design (ADD) method and Architecture tradeoff analysis method (ATAM) to specify, deploy, and monitor performance metrics in BDA applications supported by domain-specific modeling and DevOps. Our design process starts with the definition of architectural drivers, followed by functional and deployment specification through integrated high-level modeling which enables quality scenarios monitoring. We used two use cases from avionics to evaluate this proposal, and the preliminary results suggest advantages by integrating multiple views, automating deployment and monitoring compared to similar approaches.","","978-1-7281-7415-0","10.1109/ICSA-C50368.2020.00026","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9095552","Software architecture;Attribute-Driven Design;ADD;ATAM;Big data analytics deployment;DevOps;Domain-specific model;Quality Scenarios","Analytical models;Computer architecture;Data models;Monitoring;Business;Software;Software architecture","avionics;Big Data;learning (artificial intelligence);software architecture;software quality","functional deployment specification;integrated high-level modeling;automating deployment;model-driven architectural design method;Big Data analytics applications;machine learning;heterogeneous data sources;BDA applications;data volume;design process approach;performance metrics;avionics","","","","13","","19 May 2020","","","IEEE","IEEE Conferences"
"A framework to facilitate management of services in cloud based 5G environments","N. Koutsouris; A. Voulkidis; K. Tsagkaris","WINGS ICT SOLUTIONS, 336 Syggrou Avenue, 17673 Athens, Greece; WINGS ICT SOLUTIONS, 336 Syggrou Avenue, 17673 Athens, Greece; WINGS ICT SOLUTIONS, 336 Syggrou Avenue, 17673 Athens, Greece","2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM)","24 Jul 2017","2017","","","1135","1138","The main target of 5G network technologies is to offer radically increased user capacity and quality of service, while saving energy and reducing investment and operating costs. A key technology in this pursue is the cloudification of the virtualized network functions, which can eventually create an environment where services for network operators and application / content providers are chained, configured, deployed and orchestrated as in a common plane. The ARCADIA framework provides the necessary functionalities for facilitating the development and management of component services that can fully exploit the underlying programmable 5G infrastructure. ARCADIA supports policy definition even at the developer level, as well as unified monitoring and dynamic reconfiguration of service parameters.","","978-3-901882-89-0","10.23919/INM.2017.7987447","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7987447","Highly distributed applications;micro-service;cloud;unikernel;virtualization;devops;reconfiguration;SDN;NFV;annotations","5G mobile communication;Cloud computing;Tools;Measurement;Java;Monitoring","5G mobile communication;cloud computing;telecommunication computing","service facilitate management;cloud-based 5G environments;5G network technologies;virtualized network functions;ARCADIA framework;programmable 5G infrastructure;service parameter dynamic reconfiguration","","","","5","","24 Jul 2017","","","IEEE","IEEE Conferences"
"If Docker is the Answer, What is the Question?","H. Zhu; I. Bayley","Sch. of Eng., Comput. & Math., Oxford Brookes Univ., Oxford, UK; Sch. of Eng., Comput. & Math., Oxford Brookes Univ., Oxford, UK","2018 IEEE Symposium on Service-Oriented System Engineering (SOSE)","17 May 2018","2018","","","152","163","The recent rise of cloud computing poses serious challenges for software engineering because it adds complexity not only to the platform and infrastructure, but to the software too. The demands on system scalability, performance and reliability are ever increasing. Industry solutions with widespread adoption include the microservices architecture, the container technology and the DevOps methodology. These approaches have changed software engineering practice in such a profound way that we argue that it is becoming a paradigm shift. In this paper, we examine the current support of programming languages for the key concepts behind the change in software engineering practice and argue that a novel programming language is required to support the new paradigm. We report a new programming language CAOPLE and its associated Integrated DevOps Environment CIDE and demonstrate the utility of both.","","978-1-5386-5207-7","10.1109/SOSE.2018.00027","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8359160","Cloud computing;Microservices;Container technology;DevOps;Service agent orientation;Software engineering paradigms;Parallel and distributed programming models;Software development methodology;Programming languages;Integrated Software Development Environment.","Containers;Object oriented modeling;Computational modeling;Software;Software engineering;Computer architecture;Computer languages","cloud computing;multi-agent systems;programming languages;software engineering","software engineering paradigm shift;service agent orientation;cloud computing;system scalability;CAOPLE programming language","","5","","39","","17 May 2018","","","IEEE","IEEE Conferences"
"A Modeling and Engineering Methodology for Developing Internet of Services from Scratch","J. Li; J. Wang; H. Xu; Z. Wang; X. Xu","Harbin Institute of Technology,Faculty of Computing,Harbin,China; Harbin Institute of Technology,Faculty of Computing,Harbin,China; Harbin Institute of Technology,Faculty of Computing,Harbin,China; Harbin Institute of Technology,Faculty of Computing,Harbin,China; Harbin Institute of Technology,Faculty of Computing,Harbin,China","2021 IEEE World Congress on Services (SERVICES)","15 Nov 2021","2021","","","78","83","In the Internet of Services(IoS), user requirements are becoming more and more complex, which leads to higher requirements put forward for the design and implementation of services. On the other hand, service systems are moving to the cloud, and the new requirements for the service are high availability, high scalability, easy deployment and maintenance, etc. To address these challenges, this paper proposes a modeling and engineering approach for developing services from scratch. This modeling approach uses the classical MDA concept to abstractly model the user’s value quality expectation and correlate the functional model with the user’s value quality in a concrete business scenario. At the same time, it incorporates the concept of DevOps and uses microservice architecture to realize service systems, and then obtains a service solution through the design of value-quality-constrained microservices. We implement a modeling tool to assist designers in the design and implementation of services according to the modeling approach, and validate the feasibility and practicality of the modeling approach on the health care case.","2642-939X","978-1-6654-2719-7","10.1109/SERVICES51467.2021.00040","Research and Development; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9604468","model-driven design;microservices dividing;value and quality perception;UML modeling","Cloud computing;Scalability;Unified modeling language;Medical services;Tools;Maintenance engineering;Business","business data processing;cloud computing;health care;Internet of Things;software architecture;Web services","user requirements;service systems;easy deployment;maintenance;modeling engineering approach;classical MDA concept;functional model;service solution;value-quality-constrained microservices;modeling tool;modeling engineering methodology;Internet of Services;IoS;DevOps","","","","14","IEEE","15 Nov 2021","","","IEEE","IEEE Conferences"
"Experiences in the Development and Usage of a Privacy Requirements Framework","I. Oliver","Security Res. Group, Bell Labs., Espoo, Finland","2016 IEEE 24th International Requirements Engineering Conference (RE)","5 Dec 2016","2016","","","293","302","Any reasonable implementation of privacy requirements can not be made through legal compliance alone. The belief that a software system can be developed without privacy being an integral concept, or that a privacy policy is sufficient as requirements or compliance check is at best dangerous for the users, customers and business involved. While requirements frameworks exist, the specialisation of these into the privacy domain have not been made in such a manner that they unify both the legal and engineering domains. In order to achieve this one must develop ontological structures to aid communication between these domains, provide a commonly acceptable semantics and a framework by which requirements expressed at different levels of abstractness can be linked together and support refinement. An effect of this is to almost completely remove the terms 'personal data' and 'PII' from common usage and force a deeper understanding of the data and information being processed. Once such a structure is in place - even if just partially or sparsely populated - provides a formal framework by which not only requirements can be obtained, their application (or not) be justified and a proper risk analysis made. This has further advantages in that privacy requirements and their potential implementations can be explored through the software development process and support ideas such as agile methods and 'DevOps' rather than being an 'add-on' exercise - a privacy impact assessment - poorly executed at inappropriate times.","2332-6441","978-1-5090-4121-3","10.1109/RE.2016.59","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7765535","Privacy Engineering;Privacy;Requirements;Ontologies;Semantics","Privacy;Law;Security;Ontologies;Context;Software","data privacy;software engineering","privacy requirement framework;legal compliance;software system;privacy policy;privacy domain;legal domains;engineering domains;ontological structure development;personal data;PII;risk analysis;software development process;DevOps;privacy impact assessment","","6","1","35","","5 Dec 2016","","","IEEE","IEEE Conferences"
"A Design Framework of Automatic Deployment for 5G Network Slicing","W. -P. Lai; H. -L. Lai; M. -J. Lai","Yuan Ze University,Department of Electrical Engineering,Taoyuan,Taiwan; Yuan Ze University,Department of Electrical Engineering,Taoyuan,Taiwan; National Central University,Department of Communication Engineering,Taoyuan,Taiwan","2020 Asia-Pacific Signal and Information Processing Association Annual Summit and Conference (APSIPA ASC)","31 Dec 2020","2020","","","1571","1577","Differential services driven user-end and operatorend challenges have been the main driving forces behind the 5G network, which is well perceived as an innovative platform for digital convergence of information, control and management. With both the network slicing (NS) and service slicing (SS) technologies, precious physical resources can thus be shared among multi-tenant mobile virtual network operators, such as over-the-top (OTT) service providers. This paper proposes a three-stage design for automatic slice deployment called LMA, namely (1) LCP: local charm provision for VNF services, (2) MSP: model-based slice planning for service chaining, and (3) ASD: automatic slice deployment for flexible and virtual resource allocation. The LMA is a model-based slice-specific platformneutral design framework for deploying the NS and SS, not only automatically deployable on both the x86-based desk-top computers and data-center bare-metal servers, but also on public or private clouds, as well as the 5G mobile edge. Our design framework adopts the Juju-as-a-Service and EurecomMosaic5G software technologies, where several customizable virtual network function (VNF) components can be flexibly chained together to form a desired NS or SS. This paper studies and presents two successful deployment showcases: a web-blogdatabase based SS and a virtual-evolved-packet-core based NS. Our preliminary results of performance benchmarking show a strong effect of the number of CPU cores on the average latency response of SS, in particular during congestions caused by concurrent user requests.","2640-0103","978-988-14768-8-3","","Ministry of Science and Technology; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9306316","5G;service slicing;network slicing;auto deployment;DevOps","5G mobile communication;Virtualization;Software;Network slicing;Containers;Servers;Planning","business communication;cloud computing;computer network management;Internet;mobile computing;mobile radio;network servers;resource allocation;virtualisation","automatic slice deployment;flexible resource allocation;virtual resource allocation;LMA;model-based slice-specific platformneutral design framework;5G mobile edge;Juju-as-a-Service;EurecomMosaic5G software technologies;customizable virtual network function components;successful deployment showcases;web-blogdatabase based SS;virtual-evolved-packet-core based NS;automatic deployment;differential services driven user-end;main driving forces;precious physical resources;multitenant mobile virtual network operators;over-the-top service providers;three-stage design;VNF services;service chaining","","","","25","","31 Dec 2020","","","IEEE","IEEE Conferences"
"The state of agile development adoption in Argentine software companies","V. A. Bollati; G. Gaona; L. C. Pletsch; S. Gonnet; H. Leone","Universidad Tecnológica Nacional CONICET, Resistencia, Chaco, Argentina; Universidad Tecnológica Nacional Resistencia, Chaco, Argentina; Universidad Tecnológica Nacional Resistencia, Chaco, Argentina; INGAR, Instituto de Desarrollo y Diseño, Universidad Tecnológica Nacional, CONICET, Avellaneda 3657, Santa Fe, Argentina; INGAR, Instituto de Desarrollo y Diseño, Universidad Tecnológica Nacional, CONICET, Avellaneda 3657, Santa Fe, Argentina","2017 XLIII Latin American Computer Conference (CLEI)","21 Dec 2017","2017","","","1","10","Agile development practices have been consolidated as an industry standard in recent years. Its fundamental stone was raised by professionals, who in 2001, made a manifesto where they proposed four values and twelve principles. Based on this manifesto emerged different initiatives such as: eXtreme Programming, Crystal Family, or Scrum and some more current as Continuous Integration and Delivery, DevOps, Managment 3.0 or Lean. Currently there are international industry reports showing an increasing adoption of these practices in teams of different size and characteristics. However, we have identified the lack of data about the degree to which companies in the region adopt these practices. With the objective of analyzing the state of practice of agility in the companies of the region, we have carried out an investigation by means of a survey. In this paper, we present the results of this survey and the main conclusions obtained from them.","","978-1-5386-3057-0","10.1109/CLEI.2017.8226394","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8226394","Agile;eXtreme Programming;Crystal Family;Scrum;Continuos Continuous Integration and Delivery;DevOps;Managment 3.0;Lean;Survey","Software;Companies;Silicon compounds;Industries;Programming profession;Crystals","DP industry;project management;software development management;software houses;software prototyping","Managment 3.0;DevOps;Lean;international industry reports;Scrum;Crystal Family;eXtreme Programming;professionals;fundamental stone;industry standard;agile development practices;Argentine software companies;agile development adoption","","","","","","21 Dec 2017","","","IEEE","IEEE Conferences"
"Landscape of Monitoring and Visualization of Technologies in DevOps for Classification and Prediction","A. Pailwan; J. Abraham; M. Saraf","College of Engineering Pune,Computer Department,Pune,India; Computer Engineering College of Engineering Pune,Pune,India; Reliance Industries Limited,Navi Mumbai,India","2020 Fourth World Conference on Smart Trends in Systems, Security and Sustainability (WorldS4)","1 Oct 2020","2020","","","581","588","As Isaac Asimov said “If knowledge can create problems then it is not through ignorance that this, we solve them” which is the main motto for this project. This project wanted to create the central platform where the knowledge could be shared and keeping the saying in mind this project used logs for the research. Despite the logs are created for every instance and applications, studying and using them is rarely done because of their illegibility for people who do not understand that specific application's log profile leading to the use of logs either entirely neglected or rarely used for specific cases. This project is separated into 3 sections : 1) A centralised platform where the logs are stored and manipulated and standardised method for reading them is created using Elasticsearch. 2) Visualisation with the help of kibana is done for interpreting data. 3) Logs are ingested into hadoop eco system from logstash. From logstatsh which increase the retention time period of logs and hense machine learning algorithms for detecting anomaly in the logs can be done easily. This project tries to create a fully encompasing and logterm architectural solution for application managemnet of environments. And a broad perspective solution for visualizing flow of data on a mangeral level.","","978-1-7281-6823-4","10.1109/WorldS450073.2020.9210398","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9210398","Elasticsearch;Logstash;Kibana;Isolation Forest;Local Outer Factor;Elliptic Envelop;Hadoop;Druid;PySpark;Ruby","Data visualization;Servers;Monitoring;Data mining;Task analysis;Real-time systems;Forestry","application program interfaces;data handling;data visualisation;learning (artificial intelligence);parallel processing;pattern classification;system monitoring","technologies monitoring;technologies visualization;Elasticsearch;Kibana;Hadoop ecosystem;machine learning algorithms;devops","","","","17","","1 Oct 2020","","","IEEE","IEEE Conferences"
"How Do Students Feel About Automated Security Static Analysis Exercises?","A. Rahman; H. Shahriar; D. B. Bose","Tennessee Technological University,Department of Computer Science,Cookeville,TN,USA; Kennessaw State University,College of Computing and Software Engineering,Kennessaw,Georgia,USA; Reeve Systems,Dhaka,Bangladesh","2021 IEEE Frontiers in Education Conference (FIE)","20 Dec 2021","2021","","","1","4","This Innovative Practice, work in progress (WIP) paper presents our experience related to two exercises that focus on automated security static analysis, a practice used to integrate security into development and operations (DevOps). The concept has gained popularity amongst information technology (IT) organizations. However, security-related concerns, such as security weaknesses in DevOps artifacts can cause serious consequences. Our preliminary findings indicate that (i) students positively perceive the introduced exercises; and (ii) the students perform well if they are provided necessary background on the exercises. Our WIP paper lays the groundwork to build course materials that will facilitate development, deployment, and dissemination of DevOps-related education materials that also incorporate cybersecurity concepts.","2377-634X","978-1-6654-3851-3","10.1109/FIE49875.2021.9637201","National Science Foundation (NSF)(grant numbers:2026869); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9637201","computer science;cybersecurity;devops;devsec-ops;education;exercise;experience report;student perception","Conferences;Static analysis;Organizations;Computer security;Information technology","cloud computing;computer aided instruction;computer science education;educational courses;program diagnostics;security of data;software tools","DevOps-related education materials;automated security static analysis exercises;information technology;security-related concerns","","","","14","IEEE","20 Dec 2021","","","IEEE","IEEE Conferences"
"A New Project Management Tool Based on DevSecOps","K. Zunnurhain; S. R. Duclervil","School of Computer Science, Kean University, Union, NJ, USA; School of Computer Science, Kean University, Union, NJ, USA","2019 International Conference on Computational Science and Computational Intelligence (CSCI)","20 Apr 2020","2019","","","239","243","Cyber Security has become an important and crucial part of our society. Software are many times developed with little to no guidelines and security components, costing the quality and security of the software. We investigated on different agile development life-cycle models including: Behavioral Driven Development, Scaled Agile Framework and DevOps and DevSecOps. Eventually, we decided to focus on the DevSecOps development life-cycle model. Different types of DevSecOps models were found and analyzed. The characteristics of each were gathered to develop criteria for a new and effective DevSecOps model. Our results show that the DevSecOps models were more reliable than the previous models. Hence we adapted this model to develop our website to allow more security. All the selected criteria are highlighted and discussed in this study along with the website.","","978-1-7281-5584-5","10.1109/CSCI49370.2019.00049","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9071258","Cyber Security, development models, scalability, DevOps, DevSecOps","Security;Software;Biological system modeling;Adaptation models;Tools;Project management;Analytical models","project management;security of data;software prototyping","scaled agile framework;DevSecOps development life-cycle model;cyber security;behavioral driven development;agile development life-cycle models;project management","","1","","5","","20 Apr 2020","","","IEEE","IEEE Conferences"
"Deep Neural Network Based Log Analysis","H. B. Ketmen; B. Bulut","Enforma Bilişim A.Ş.,İstanbul,Türkiye; Enforma Bilişim A.Ş.,İstanbul,Türkiye","2021 29th Signal Processing and Communications Applications Conference (SIU)","19 Jul 2021","2021","","","1","4","Today, the logs of the services running on virtual and real servers provide us with data from which statistical inferences can be made about the service itself and the ecosystem it is in, if it is analyzed. The usage purposes of the tools used in DevOps, the content of the logs they produce, the way they are stored and the frequency of reproduction may vary. Creating metrics by analyzing logs and taking necessary actions on metrics can potentially increase productivity when the hurdles such as fragmentation of unstructured data, processing of data and processing of data are overcome. In this study, it is shown that the logs can be modeled as a natural language sequence in order that the necessary actions be taken, and it is possible to classify the process logs of Jenkins, which is one of the services used in DevOps, by using the Bidirectional Long Short-Term Memory method, with high accuracy and Cohen's Kappa score.","2165-0608","978-1-6654-3649-6","10.1109/SIU53274.2021.9477836","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9477836","DevOps;Jenkins;log analysis;natural language sequence;Bidirectional Long Short Term Memory","Long short term memory;Conferences;Software;Measurement;Convolutional neural networks;Big Data;White spaces","convolutional neural nets;deep learning (artificial intelligence);information analysis;recurrent neural nets;system monitoring","deep neural network based log analysis;virtual servers;statistical inferences;DevOps;bidirectional long short-term memory method;Cohen Kappa score","","","","","","19 Jul 2021","","","IEEE","IEEE Conferences"
"Microservices for Continuous Deployment, Monitoring and Validation in Cyber-Physical Systems: an Industrial Case Study for Elevators Systems","A. Gartziandia; J. Ayerdi; A. Arrieta; S. Ali; T. Yue; A. Agirre; G. Sagardui; M. Arratibel",Ikerlan; Mondragon University; Mondragon University; Simula Research Laboratory; Simula Research Laboratory; Ikerlan; Mondragon University; Orona,"2021 IEEE 18th International Conference on Software Architecture Companion (ICSA-C)","10 May 2021","2021","","","46","53","Cyber-Physical Systems (CPSs) are systems that integrate digital cyber computations with physical processes. The software embedded in CPSs has a long life-cycle, requiring constant evolution to support new requirements, bug fixes, and deal with hardware obsolescence. To date, the development of software for CPSs is fragmented, which makes it extremely expensive. This could be substantially enhanced by tightly connecting the development and operation phases, as is done in other software engineering domains (e.g., web engineering through DevOps). Nevertheless, there are still complex issues that make it difficult to use DevOps techniques in the CPS domain, such as those related to hardware-software co-design. To pave the way towards DevOps in the CPS domain, in this paper we instantiate part of the reference architecture presented in the H2020 Adeptness project, which is based on microservices that allow for the continuous deployment, monitoring and validation of CPSs. To this end, we elaborate a systematic methodology that considers as input both domain expertise and a previously defined taxonomy for DevOps in the CPS domain. We obtain a generic microservice template that can be used in any kind of CPS. In addition, we instantiate this architecture in the context of an industrial case study from the elevation domain.","","978-1-6654-3910-7","10.1109/ICSA-C52384.2021.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9425852","Microservices;DevOps;Cyber-Physical Systems","Systematics;Software architecture;Conferences;Taxonomy;Computer architecture;Cyber-physical systems;Software","cyber-physical systems;hardware-software codesign;lifts;production engineering computing;program debugging;service-oriented architecture","CPS domain;domain expertise;elevation domain;continuous deployment;cyber-physical systems;elevators systems;long life-cycle;hardware obsolescence;software engineering domains;DevOps techniques;hardware-software co-design;H2020 Adeptness project;generic microservice template;bug fixes;industrial case study","","","","23","","10 May 2021","","","IEEE","IEEE Conferences"
"Continuous Testing in the Development of IoT Applications","L. G. Guşeilă; D. Bratu; S. Moraru","Transilvania University of Braşov,Department of Automatics and Information Technology,Braşov,România; Transilvania University of Braşov,Department of Automatics and Information Technology,Braşov,România; Transilvania University of Braşov,Department of Automatics and Information Technology,Braşov,România","2019 International Conference on Sensing and Instrumentation in IoT Era (ISSI)","23 Mar 2020","2019","","","1","6","Internet-of-Things has evolved with the increased volume of data of interconnecting the physical world to the Internet. Cloud provides the underlying power for IoT to become a disrupting technology, revolutionizing the cloud, as we know it. IoT applications need to adapt frequently and rapidly to new requests. Increasing competition and rapidly changing market needs require from nowadays companies' flexibility and fast time to market of their products. To achieve these goals more and more organizations are relying on new IT technologies and software development processes. Though there are many publications around DevOps as a methodology and the use of a process for continuous integration and continuous development, there are fewer solutions provided which incorporate a software delivery pipeline incorporating all processes: continuous business planning, agile development, continuous integration, continuous deployment and continuous testing. The paper proposes a DevOps architecture and agile tools to be used in the implementation of a fully integrated DevOps pipeline based on open-source. Furthermore, continuous testing is covering test best practices and methods, which along with the DevOps pipeline can be widely implemented in any cloud environment, regardless of the cloud provider chosen.","","978-1-7281-1022-6","10.1109/ISSI47111.2019.9043692","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9043692","IoT;Cloud Computing;Agile Development;DevOps;Continuous Integration;Continuous Development;Continuous Testing;Automated Testing","","cloud computing;DP industry;Internet;Internet of Things;program testing;software engineering","continuous testing;IoT applications;Internet of Things applications;software development processes;continuous integration;continuous development;software delivery pipeline;continuous business planning;agile development;fully integrated DevOps pipeline;cloud environment;cloud provider","","1","","13","","23 Mar 2020","","","IEEE","IEEE Conferences"
"An Agile Software Development Life Cycle Model for Machine Learning Application Development","R. Ranawana; A. S. Karunananda","Enterprise Machine Learning (Pvt) ltd,Colombo,Sri Lanka; Department of Computational Mathematics,Moratuwa,Sri Lanka","2021 5th SLAAI International Conference on Artificial Intelligence (SLAAI-ICAI)","5 Jan 2022","2021","","","1","6","Software development teams are often hampered when aligning machine learning production with standard software development processes. Iterative experimentation is needed to address the inherent complexities of data collection and preparation, model entanglement, and the technical debt of machine learning. The complexity of this process is compounded due to dependencies on the production environment and real- time data. We propose a unified framework which facilitates the planning, development, and deployment of a machine learning application through parallel processes for software and machine learning engineering. This allows for the risk of both the project and machine learning development to be significantly reduced through continuous integration, evaluation, and production. The framework, named MLASDLC, unifies concepts from standard software development life cycle methodologies (SDLC), development operations (DevOps) and machine learning operations (MLOps) to present a framework for the development of machine learning applications.","","978-1-6654-0655-0","10.1109/SLAAI-ICAI54477.2021.9664736","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9664736","Machine learning;MLOps;DevOps;agile;SDLC;software development life cycle;experimentation;data-centric","Agile software development;Machine learning;Production;Data collection;Software;Data models;Complexity theory","computer aided instruction;learning (artificial intelligence);project management;software development management;software engineering;software prototyping;software quality","model entanglement;standard software development life cycle methodologies;development operations;agile software development life cycle model;machine learning application development;software development teams;aligning machine learning production;standard software development processes","","","","28","IEEE","5 Jan 2022","","","IEEE","IEEE Conferences"
"Enterprise-Driven Open Source Software: A Case Study on Security Automation","F. Angermeir; M. Voggenreiter; F. Moyón; D. Mendez","Technical University of Munich, Germany; Siemens Technology and Ludwig Maximilians University Munich, Germany; Siemens Technology and Technical University of Munich, Germany; Blekinge Institute of Technology and fortiss GmbH, Sweden and Germany","2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)","7 May 2021","2021","","","278","287","Agile and DevOps are widely adopted by the industry. Hence, integrating security activities with industrial practices, such as continuous integration (CI) pipelines, is necessary to detect security flaws and adhere to regulators' demands early. In this paper, we analyze automated security activities in CI pipelines of enterprise-driven open source software (OSS). This shall allow us, in the long-run, to better understand the extent to which security activities are (or should be) part of automated pipelines. In particular, we mine publicly available OSS repositories and survey a sample of project maintainers to better understand the role that security activities and their related tools play in their CI pipelines. To increase transparency and allow other researchers to replicate our study (and to take different perspectives), we further disclose our research artefacts. Our results indicate that security activities in enterprise-driven OSS projects are scarce and protection coverage is rather low. Only 6.83% of the analyzed 8,243 projects apply security automation in their CI pipelines, even though maintainers consider security to be rather important. This alerts industry to keep the focus on vulnerabilities of 3rd Party software and it opens space for other improvements of practice which we outline in this manuscript.","","978-1-6654-3869-8","10.1109/ICSE-SEIP52600.2021.00037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402050","Security;Secure Software Engineering;Continuous Integration;Open Source Software;DevOps;DevSecOps","Industries;Automation;Pipelines;Tools;Security;Open source software;Software engineering","pipelines;public domain software;security of data;service-oriented architecture;software development management","enterprise-driven open source software;security automation;integrating security activities;continuous integration pipelines;security flaws;CI pipelines;automated pipelines;enterprise-driven OSS projects","","1","","30","","7 May 2021","","","IEEE","IEEE Conferences"
"Towards Continuous Delivery by Reducing the Feature Freeze Period: A Case Study","E. Laukkanen; M. Paasivaara; J. Itkonen; C. Lassenius; T. Arvonen","Dept. of Comput. Sci., Aalto Univ., Aalto, Finland; Dept. of Comput. Sci., Aalto Univ., Aalto, Finland; Dept. of Comput. Sci., Aalto Univ., Aalto, Finland; Dept. of Comput. Sci., Aalto Univ., Aalto, Finland; R&D Center Finland, Ericsson, Jorvas, Finland","2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)","3 Jul 2017","2017","","","23","32","Today, many software companies continuously deliver and deploy new features to their customers. However, many software systems are still released traditionally with long feature freeze periods and time-based releases due to historical reasons. Currently, only a few empirical inquiries of transformations towards continuous delivery exist. In this paper, we aim to understand how feature freeze was practiced and the feature freeze period reduced in an R&D program at Ericsson. The case organization has struggled with the feature freeze approach and is now moving towards the continuous delivery paradigm. We investigated the intended and actual effects of the feature freeze practice, how the feature freeze period was reduced and what effects the reduction had. We interviewed 11 employees, covering all the development teams at the largest site of the distributed organization. In addition, we analyzed data from software repositories to get quantitative triangulation of the qualitative results. Historically, the organization was not able to comply with the intended feature freeze practice, due to pressure for new feature development and long feature freeze periods leaving little time to perform actual development. By implementing test automation, the organization was able to reduce the feature freeze period by 56%, after which the amount of changes during the freeze decreased by 63% and the amount of changes close to the release date by 59%. We conclude that reducing the feature freeze period is possible using test automation, and reducing the freeze time can increase conformance to the intended feature freeze practice. To further reduce feature freeze, attention must be paid to deployment automation and collaboration between development and operations, in addition to test automation.","","978-1-5386-2717-4","10.1109/ICSE-SEIP.2017.21","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7965426","code freeze;feature freeze;release stabilization;continuous integration;continuous delivery;continuous deployment;devops;case study","Interviews;Automation;Companies;Testing;Software systems","organisational aspects;program testing;research and development","feature freeze period reduction;software companies;software systems;time-based releases;R&D program;Ericsson;case organization;continuous delivery paradigm;distributed organization;data analysis;software repositories;quantitative triangulation;feature development;test automation","","4","","14","","3 Jul 2017","","","IEEE","IEEE Conferences"
"Context-based analytics - establishing explicit links between runtime traces and source code","J. Cito; F. Oliveira; P. Leitner; P. Nagpurkar; H. C. Gall","Dept. of Inf., Univ. of Zurich, Zurich, Switzerland; IBM T.J. Watson Res. Center, Yorktown Heights, NY, USA; Dept. of Inf., Univ. of Zurich, Zurich, Switzerland; IBM T.J. Watson Res. Center, Yorktown Heights, NY, USA; Dept. of Inf., Univ. of Zurich, Zurich, Switzerland","2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)","24 Aug 2017","2017","","","193","202","Diagnosing problems in large-scale, distributed applications running in cloud environments requires investigating different sources of information to reason about application state at any given time. Typical sources of information available to developers and operators include log statements and other runtime information collected by monitors, such as application and system metrics. Just as importantly, developers rely on information related to changes to the source code and configuration files (program code) when troubleshooting. This information is generally scattered, and it is up to the troubleshooter to inspect multiple implicitly-connected fragments thereof. Currently, different tools need to be used in conjunction, e.g., log aggregation tools, source-code management tools, and runtime-metric dash boards, each requiring different data sources and workflows. Not surprisingly, diagnosing problems is a difficult proposition. In this paper, we propose Context-Based Analytics, an approach that makes the links between runtime information and program-code fragments explicit by constructing a graph based on an application-context model. Implicit connections between information fragments are explicitly represented as edges in the graph. We designed a framework for expressing application-context models and implemented a prototype. Further, we instantiated our prototype framework with an application-context model for two real cloud applications, one from IBM and another from a major telecommunications provider. We applied context-based analytics to diagnose two issues taken from the issue tracker of the IBM application and found that our approach reduced the effort of diagnosing these issues. In particular, context-based analytics decreased the number of required analysis steps by 48% and the number of needed inspected traces by 40% on average as compared to a standard diagnosis approach.","","978-1-5386-2717-4","10.1109/ICSE-SEIP.2017.1","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7965443","DevOps;Software Analytics;Runtime Information","Runtime;Context;Measurement;Context modeling;Tools;Software;Time series analysis","cloud computing;software engineering","context-based analytics;runtime traces;source code;cloud environments;program-code fragments;application-context models","","3","","32","","24 Aug 2017","","","IEEE","IEEE Conferences"
"Research and Practice of Container System","H. Jin","School of Computer Science and Technology, Huazhong University of Science and Technology,National Engineering Research Center for Big Data Technology and System Services Computing Technology and System Lab, Cluster and Grid Computing Lab,Wuhan,China","2021 International Symposium on Theoretical Aspects of Software Engineering (TASE)","30 Sep 2021","2021","","","13","14","Container technology has been widely used in various real-world situations, like cloud platforms, CI/CD, and DevOps. By enabling a layered image system and OS-level virtualization, container technology can provide agile deployment and isolate execution environment for applications. However, existing container systems fail to support containers efficiently and securely. On the one hand, coarse-grained image management makes the deployment and update of applications time-consuming when the corresponding images need to be delivered in network. On the other hand, shared OS kernel may arise resource contention and security issues. This talk shows our research and practice of container systems. Specifically, I will introduce approaches of image management for fast container deployment, OS kernel isolation for secure and high-performance container execution environment, and container live migration for mitigating resource contention.","","978-1-6654-4163-6","10.1109/TASE52547.2021.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9546738","","Cloud computing;Containers;Security;Kernel;Virtualization;Software engineering","cloud computing;operating system kernels;operating systems (computers);security of data;virtual machines;virtualisation","container system;container technology;cloud platforms;layered image system;OS-level virtualization;agile deployment;existing container systems;coarse-grained image management;applications time-consuming;corresponding images;shared OS kernel;resource contention;fast container deployment;OS kernel isolation;high-performance container execution environment","","","","11","","30 Sep 2021","","","IEEE","IEEE Conferences"
"On the Design and Architecture of Deployment Pipelines in Cloud- and Service-Based Computing - A Model-Based Qualitative Study","U. Zdun; E. Ntentos; K. Plakidas; A. El Malki; D. Schall; F. Li",University of Vienna; University of Vienna; University of Vienna; University of Vienna; Siemens Corporate Technology; Siemens Corporate Technology,"2019 IEEE International Conference on Services Computing (SCC)","29 Aug 2019","2019","","","141","145","DevOps and Continuous Delivery (CD) are becoming the de-facto standard for software deployment in the cloud. Deployment pipelines are a core artefact in such practices, but so far their design is largely discussed informally, and existing sources on DevOps and CD practices are often inconsistent or incomplete. The lack of a generic, complete, tool-agnostic, and application-independent treatment of deployment pipeline design and architecture impedes their understanding by human designers and the creation of generic tools that work across different technologies and applications. To alleviate this problem, we have performed a qualitative, in-depth study of 25 deployment practice descriptions by practitioners containing informal deployment pipeline models. From our study we derived a precisely specified model of deployment pipeline architectures. We can show that the formal model substantially increases the precision of the modelling compared to the informally modelled pipelines in the original sources.","2474-2473","978-1-7281-2720-0","10.1109/SCC.2019.00033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8814264","DevOps;Delivery pipelines;Continuous Delivery;Qualitative study;Software Architecture","","cloud computing;pipeline processing;software architecture","DevOps;software deployment;CD practices;application-independent treatment;deployment pipeline design;human designers;generic tools;informal deployment pipeline models;deployment pipeline architectures;formal model;continuous delivery;service-based computing","","","","13","","29 Aug 2019","","","IEEE","IEEE Conferences"
"Detecting Software Security Vulnerability during an Agile Development by Testing the Changes to the Security Posture of Software Systems","B. Arnold; Y. Qu","Colorado Technical Univesrity,School of Computer Science,Colorado Springs,CO,USA; Colorado Technical Univesrity,School of Computer Science,Colorado Springs,CO,USA","2020 International Conference on Computational Science and Computational Intelligence (CSCI)","23 Jun 2021","2020","","","1743","1748","The purpose of this quantitative quasi-experimental study is to identify the possible correlation between software changes and the likelihood that software releases developed using an agile methodology like DevOps will introduce vulnerabilities into the software application when integrated. There are several scholarly articles that provide details on how Agile development methodologies like scrum and DevOps rely on automated testing for security. The majority of literature on the subject recommend manual security and penetration testing, but there is currently no objective measure to determine when this manual testing should take place. In Agile scrum and in DevOps, manual security testing is usually conducted after a large feature is completed and integrated into production. If a correlation can be found between aspects of software changes and their propensity to introduce vulnerabilities into a software application, then that data can be used to build an objective process for measuring when manual security testing should be performed in Agile development.","","978-1-7281-7624-6","10.1109/CSCI51800.2020.00323","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9458121","Agile Development;Software Testing;DevOps;Vulnerability;SDLC","Software testing;Correlation;Scientific computing;Manuals;Production;Tools;Software systems","program testing;security of data;software maintenance;software prototyping","software security vulnerability;security posture;software systems;software changes;software releases;DevOps;software application;automated testing;penetration testing;Agile scrum;security testing;agile development;quantitative quasiexperimental study","","","","28","","23 Jun 2021","","","IEEE","IEEE Conferences"
"Model-Driven Orchestration for Cloud Resources","H. Brabra; A. Mtibaa; W. Gaaloul; B. Benatallah; F. Gargouri","Telecom SudParis, University of Paris-Saclay, & University of Sfax; University of Sfax; Telecom SudParis & University of Paris-Saclay; University of New South Wales-Sydney; University of Sfax","2019 IEEE 12th International Conference on Cloud Computing (CLOUD)","29 Aug 2019","2019","","","422","429","Several DevOps tools have emerged to orchestrate cloud resources. However, inherent heterogeneity and complex implementation within these tools make it hard for DevOps users to design required resource-related artifacts. Currently, the defacto standard for cloud resource modeling and orchestration is TOSCA. Nonetheless, TOSCA is usually bound to TOSCA-compliant orchestration tools. Moreover, the actual integration between TOSCA and DevOps tools is still performed using costly coding and in ad-hoc manner. To resolve this, we believe that mapping and translation mechanisms between TOSCA and DevOps tools should be provided. In this paper, we propose a new model-driven approach for cloud resource orchestration. Our approach (i) adopts TOSCA to design resource-related artifacts regardless of a specific DevOps tool; (ii) enables a new model-driven translation technique that serves to translate the designed artifacts using TOSCA into DevOps specific artifacts and (iii) provides Connectors that intend to establish the bridge between DevOps-specific artifacts and the DevOps tools. Our approach provides a powerful enhancement to DevOps productivity and reusability by assisting toward a seamless integration between TOSCA and DevOps tools.","2159-6190","978-1-7281-2705-7","10.1109/CLOUD.2019.00074","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8814534","Artifact, TOSCA, Orchestration, Transformation, MDE","","cloud computing;software engineering","model-driven orchestration;cloud resource modeling;TOSCA-compliant orchestration tools;model-driven approach;cloud resource orchestration;model-driven translation technique;DevOps specific artifacts;resource-related artifacts","","5","","21","","29 Aug 2019","","","IEEE","IEEE Conferences"
"An Infrastructure Modelling Tool for Cloud Provisioning","J. Sandobalin; E. Insfran; S. Abrahao","Dept. de Inf. y Cienc. de la Comput., Escuela Politec. Nac., Quito, Ecuador; Dept. de Sist. Informaticos y Comput., Univ. Politec. de Valencia, Valencia, Spain; Dept. de Sist. Informaticos y Comput., Univ. Politec. de Valencia, Valencia, Spain","2017 IEEE International Conference on Services Computing (SCC)","14 Sep 2017","2017","","","354","361","Cloud computing offers computing, network, and storage capabilities through services that abstract the capabilities of the underlying hardware. Currently, a variety of tools exist that manage the infrastructure provisioning and use scripts to define the final state of the hardware to be deployed in the cloud. However, there are major challenges that need to be addressed to automate the infrastructure management so that they are effectively used in initiatives such as DevOps. In particular, the management of Infrastructure as a Code (IaC) is one of the most important technical challenges to support activities such as the integration, deployment, and continuous delivery of applications. To address this problem, we present a support for the management of DevOps tools, through the definition of a Domain Specific Language (DSL) based on the concept of Infrastructure as a Code, and a tool that supports this language allowing to model the final state of a provisioning infrastructure in the cloud and generating the provisioning scripts for the Amazon Web Services (AWS) platform. The proposed tool reduces the work for development and operations personnel and facilitates their communication.","2474-2473","978-1-5386-2005-2","10.1109/SCC.2017.52","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8035005","Infrastructure as Code;DevOps;Infrastructure Provisioning;Cloud Services;Model Driven Development","Virtual machining;Syntactics;Load modeling;IP networks;Concrete;Argon;Cloud computing","cloud computing;Web services","Domain Specific Language;final state;provisioning scripts;Amazon Web Services platform;Infrastructure modelling tool;cloud provisioning;cloud computing;storage capabilities;abstract the capabilities;underlying hardware;infrastructure provisioning;infrastructure management;support activities;DevOps tools","","14","","15","","14 Sep 2017","","","IEEE","IEEE Conferences"
"Middleware-Oriented Deployment Automation for Cloud Applications","J. Wettinger; V. Andrikopoulos; F. Leymann; S. Strauch","Stuttgart, Germany; Stuttgart, Germany; Stuttgart, Germany; Stuttgart, Germany","IEEE Transactions on Cloud Computing","4 Dec 2018","2018","6","4","1054","1066","Fully automated provisioning and deployment of applications is one of the most essential prerequisites to make use of the benefits of Cloud computing in order to reduce the costs for managing applications. A huge variety of approaches, tools, and providers are available to automate the involved processes. The DevOps community, for instance, provides tooling and reusable artifacts to implement deployment automation in an application-oriented manner. Platform-as-a-Service frameworks are available for the same purpose. In this work we systematically classify and characterize available deployment approaches independently from the underlying technology used. For motivation and evaluation purposes, we choose Web applications with different technology stacks and analyze their specific deployment requirements. Afterwards, we provision these applications using each of the identified types of deployment approaches in the Cloud to perform qualitative and quantitative measurements. Finally, we discuss the evaluation results and derive recommendations to decide which deployment approach to use based on the deployment requirements of an application. Our results show that deployment approaches can also be efficiently combined if there is no `best fit' for a particular application.","2168-7161","","10.1109/TCC.2016.2535325","EU's Seventh Framework Programme(grant numbers:FP7/2007-2013); 4CaaSt(grant numbers:258862); ALLOW Ensembles(grant numbers:600792); BMBF project ECHO(grant numbers:01XZ13023G); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7420657","Middleware-oriented deployment;application-oriented deployment;Cloud computing;DevOps;decision support","Cloud computing;Middleware;Decision support systems;Databases;Graphical user interfaces","cloud computing;middleware","middleware-oriented deployment automation;essential prerequisites;managing applications;application-oriented manner;Web applications;cloud applications;platform-as-a-service frameworks;fully automated provisioning;fully automated deployment;DevOps community;qualitative measurements;quantitative measurements","","8","","37","IEEE","26 Feb 2016","","","IEEE","IEEE Journals"
"DeCaf: Diagnosing and Triaging Performance Issues in Large-Scale Cloud Services","C. Bansal; S. Renganathan; A. Asudani; O. Midy; M. Janakiraman","Microsoft Research,Redmond,WA,USA; Stanford University,Stanford,CA,USA; Microsoft,Redmond,WA,USA; Microsoft,Redmond,WA,USA; Amazon,Seattle,WA,USA","2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)","8 Dec 2020","2020","","","201","210","Large scale cloud services use Key Performance Indicators (KPIs) for tracking and monitoring performance. They usually have Service Level Objectives (SLOs) baked into the customer agreements which are tied to these KPIs. Dependency failures, code bugs, infrastructure failures, and other problems can cause performance regressions. It is critical to minimize the time and manual effort in diagnosing and triaging such issues to reduce customer impact. Large volume of logs and mixed type of attributes (categorical, continuous) in the logs makes diagnosis of regressions non-trivial.In this paper, we present the design, implementation and experience from building and deploying DeCaf, a system for automated diagnosis and triaging of KPI issues using service logs. It uses machine learning along with pattern mining to help service owners automatically root cause and triage performance issues. We present the learnings and results from case studies on two large scale cloud services in Microsoft where DeCaf successfully diagnosed 10 known and 31 unknown issues. DeCaf also automatically triages the identified issues by leveraging historical data. Our key insights are that for any such diagnosis tool to be effective in practice, it should a) scale to large volumes of service logs and attributes, b) support different types of KPIs and ranking functions, c) be integrated into the DevOps processes.","","978-1-4503-7123-0","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9276568","performance analysis;root causing;machine learning;issue triaging;cloud services","Computer bugs;Feature extraction;Servers;Anomaly detection;Monitoring;Manuals;Software","cloud computing;data mining;learning (artificial intelligence);program debugging;program diagnostics;software performance evaluation","DeCaf;large-scale cloud services;key performance indicators;performance tracking;performance monitoring;service level objectives;customer agreements;dependency failures;infrastructure failures;performance regressions;customer impact;automated diagnosis;KPI;service logs;service owners;triage performance issues;SLO;code bugs;automated triaging;machine learning;pattern mining;Microsoft;DevOps","","","1","35","","8 Dec 2020","","","IEEE","IEEE Conferences"
"Operation Changes Recommendation Method Using Histories of Operation Changes in Cloud Computing Environment","S. Kitajima; S. Kikuchi; Y. Matsumotoy","NA; NA; Software Lab., Fujitsu Labs. Ltd., Kawasaki, Japan","2015 IEEE 7th International Conference on Cloud Computing Technology and Science (CloudCom)","4 Feb 2016","2015","","","322","330","Virtualization technologies in a cloud computing system enable its users to create and delete virtual machines easily. This flexibility accelerates the update cycle of applications to keep up with user demand. When updating applications, the application management process should also be modified. If necessary changes in the management process are overlooked, this lack of changes can cause inconsistencies between an application and its management, resulting in improper system status. To identify required changes in management process, we propose a method to identify them based on an assumption that similar application updates often require similar operation changes. Evaluation results show that our method can recommend the necessary operation changes with high accuracy and can reduce the possibility of operators overlooking them about 63% of the time if operation changes are overlooked.","","978-1-4673-9560-1","10.1109/CloudCom.2015.48","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7396173","Application management;DevOps;Operation management;Autonomic computing;Cloud computing","Monitoring;Databases;Cloud computing;History;Production;Servers","cloud computing;recommender systems;virtual machines;virtualisation","recommendation method;operation changes;cloud computing environment;virtualization technologies;cloud computing system;virtual machines;user demand;management process","","","","18","","4 Feb 2016","","","IEEE","IEEE Conferences"
"The Quality Triage Method: Quickly Identifying User Stories with Quality Risks","G. Brataas; I. A. TØndel; E. Okstad; O. LØkberg; M. G. Jaatun; G. K. Hanssen; T. Myklebust","SINTEF Digital,Trondheim,Norway; Norwegian University of Science and Technology (NTNU),Trondheim,Norway; SINTEF Digital,Trondheim,Norway; SINTEF Digital,Trondheim,Norway; SINTEF Digital,Trondheim,Norway; SINTEF Digital,Trondheim,Norway; SINTEF Digital,Trondheim,Norway","2020 2nd International Conference on Societal Automation (SA)","13 Aug 2021","2021","","","1","7","Quality requirements often receive insufficient attention, both in agile and in traditional software development. This paper describes the quality triage, a quick, agile method in which user stories or features with quality risks are identified. This paper shows how the four qualities scalability, security, safety, and availability are scored at short expert meetings ― triages. In this way, quality risks are made explicit and can be immediately addressed. We illustrate the method with a scenario involving semi-autonomous cars.","","978-1-7281-9690-9","10.1109/SA51175.2021.9507110","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9507110","quality requirements;non-functional requirements;agile software development;DevOps;large complex systems;scalability;security;safety;availability;ATAM","Automation;Scalability;Software;Safety;Security;Automobiles","security of data;software prototyping;software quality","user stories;quality risks;quality triage method;quality requirements;traditional software development;short expert meetings;short expert triages;user features;agile software development;security quality;scalability quality;safety quality;availability quality","","","","29","","13 Aug 2021","","","IEEE","IEEE Conferences"
"Beyond Continuous Delivery: An Empirical Investigation of Continuous Deployment Challenges","M. Shahin; M. A. Babar; M. Zahedi; L. Zhu","Centre for Res. on Eng. Software Technol., Univ. of Adelaide, Adelaide, SA, Australia; Centre for Res. on Eng. Software Technol., Univ. of Adelaide, Adelaide, SA, Australia; Centre for Res. on Eng. Software Technol., IT Univ. of Copenhagen, Copenhagen, Denmark; Data61, Commonwealth Sci. & Ind. Res. Organ., Sydney, NSW, Australia","2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)","11 Dec 2017","2017","","","111","120","Context: A growing number of software organizations have been adopting Continuous DElivery (CDE) and Continuous Deployment (CD) practices. Researchers have started investing significant efforts in studying different aspects of CDE and CD. Many studies refer to CDE (i.e., where an application is potentially capable of being deployed) and CD (i.e., where an application is automatically deployed to production on every update) as synonyms and do not distinguish them from each other. Despite CDE being successfully adopted by a large number of organizations, it is not empirically known why organizations still are unable or demotivated to have automatic and continuous deployment (i.e., CD practice). Goal: This study aims at empirically investigating and classifying the factors that may impact on adopting and implementing CD practice. Method: We conducted a mixed-method empirical study consisting of interviewing 21 software practitioners, followed by a survey with 98 respondents. Results: Our study reveals 11 confounding factors that limit or demotivate software organizations to push changes automatically and continuously to production. The most important ones are ""lack of automated (user) acceptance test"", ""manual quality check"", ""deployment as business decision"", ""insufficient level of automated test coverage"", and ""highly bureaucratic deployment process"". Conclusion: Our findings highlight several areas for future research and provide suggestions for practitioners to streamline deployment process.","","978-1-5090-4039-1","10.1109/ESEM.2017.18","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8170091","continuous delivery;continuous deployment;DevOps;empirical study","Software;Interviews;Organizations;Production;Manuals;Electronic mail;Data analysis","Internet;organisational aspects;software engineering","adopting implementing CD practice;mixed-method empirical study;interviewing 21 software practitioners;highly bureaucratic deployment process;software organizations;CDE;continuous delivery","","13","1","41","","11 Dec 2017","","","IEEE","IEEE Conferences"
"Reframing Security in Contemporary Software Development Life Cycle","P. Frijns; R. Bierwolf; T. Zijderhand","Bureau Gateway Ministry of Interior The Hague, The Netherlands; MBBI bv, IEEE TEMS Utrecht, The Netherlands; Deloitte Risk Advisory B.V Deloitte Touche Tohmatsu Limited Amsterdam, The Netherlands","2018 IEEE International Conference on Technology Management, Operations and Decisions (ICTMOD)","14 Apr 2019","2018","","","230","236","The purpose of the current paper is to gain insight in the manner in which security is taken into account when building information systems. In particular by comparing the concepts of Agile Scrum and DevOps, along the phases of the Software Development Life Cycle (SDLC), using Open Software Assurance Maturity Model as a measure, and the Lucky Clover Model to address the soft- and hard factors, in terms of Content, Process, Relation and Culture, which lead to a new framework. The initial results based on desk research confirm the general notion of there is limited coverage of security in such frameworks. There is only partial coverage of security in the DevOps approach and does so primarily in the later stages of the SDLC, and it also embraces cultural aspects more. Cultural aspects relating to shared value and behavioral aspects are not operationalized. Given the impact of security in the ever digitalizing society nowadays, the recommendation is that security is not just a feature but should be an inherent part of the iterative software development approach starting with the Minimal Viable Product version. Hence security by design is embraced by the team. Secondly, security is not only a technical nor procedural issue. Hence it is not only the hard controls (Content and Process) that should be taken into account. Also, soft controls (Relations and Culture) should be in managerially addressed in a balanced manner.","2159-5119","978-1-5386-4315-0","10.1109/ITMC.2018.8691277","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8691277","Software Development Life Cycle (SDLC);Project Management;DevOps;Agile;Scrum;OpenSAMM;Security;Lucky Glover;Behavior","Security;Software;Organizations;Scrum (Software development);Standards organizations;Current measurement;Cultural differences","cultural aspects;information systems;security of data;software development management","Lucky Clover Model;DevOps approach;SDLC;cultural aspects;iterative software development approach;information systems;Agile Scrum;software development life cycle;open software assurance maturity model;minimal viable product version;reframing security","","3","","24","","14 Apr 2019","","","IEEE","IEEE Conferences"
"Recent Advances in Software Reliability Assurance","R. Mijumbi; K. Okumoto; A. Asthana; J. Meekel","Bell Labs. CTO, Nokia, Dublin, Ireland; Bell Labs. CTO, Nokia, Dublin, Ireland; Bell Labs. CTO, Nokia, Westford, MA, USA; Nokia, Murray Hill, NJ, USA","2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)","18 Nov 2018","2018","","","77","82","Achieving true service agility requires development teams to be able to continuously integrate and deliver software every few weeks. This requires capabilities for test automation, modelling and prediction of software reliability. In this paper, we report on our recent experiences applying a simple and novel curve shifting technique to software defect prediction for a continuous integration, continuous delivery project. The technique transforms the defect arrival curve from a given previous release using the user story (or feature)1 development plan so as to predict defect arrival for the required release. We also discuss the different views on software defects from a quality vis-a-vis project management perspective and how the proposed technique applies to either.","","978-1-5386-9443-5","10.1109/ISSREW.2018.00-27","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8539167","software, quality, reliability, defect prediction, DevOps, integration, delivery","Software;Predictive models;Software reliability;Correlation;Market research;Testing","program testing;software prototyping;software reliability","software reliability assurance;service agility;software defect prediction;defect arrival curve;software defects;project management perspective;curve shifting technique;test automation","","2","","5","","18 Nov 2018","","","IEEE","IEEE Conferences"
"Automatically Annotating Sentences for Task-specific Bug Report Summarization","A. Galappaththi; J. Anvik; R. Bin Islam","University of Alberta,Department of Computing Science,Edmonton,Canada; University of Lethbridge,Department of Mathematics and Computer Science,Lethbridge,Canada; University of Lethbridge,Department of Mathematics and Computer Science,Lethbridge,Canada","2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)","20 Jan 2022","2021","","","1177","1179","There is a need to summarize bug reports as they can become long due to many comments from conversations between developers and various DevOps tools. Although automated approaches to bug report summarization have been developed, we believe they aim at the wrong target - getting as close as possible to a gold-standard summary. Instead, researchers should create automated bug report annotation approaches that allow project members to create summaries based on their task-specific information needs. We present such an approach.","2643-1572","978-1-6654-0337-5","10.1109/ASE51524.2021.9678554","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9678554","bug report summarization;text tagging;text annotation;natural language processing","Annotations;Computer bugs;Task analysis;Software engineering","program debugging;software engineering;text analysis","task-specific information needs;task-specific bug report summarization;DevOps tools;gold-standard summary;automatically annotating sentences","","","","19","IEEE","20 Jan 2022","","","IEEE","IEEE Conferences"
"Open-source RANs in Practice: an Over-The-Air Deployment for 5G MEC","J. Haavisto; M. Arif; L. Lovén; T. Leppänen; J. Riekki","Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Centre for Wireless Communications, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland; Center for Ubiquitous Computing, University of Oulu, Oulu, Finland","2019 European Conference on Networks and Communications (EuCNC)","15 Aug 2019","2019","","","495","500","Edge computing that leverages cloud resources to the proximity of user devices is seen as the future infrastructure for distributed applications. However, developing and deploying edge applications, that rely on cellular networks, is burdensome. Such network infrastructures are often based on proprietary components, each with unique programming abstractions and interfaces. To facilitate straightforward deployment of edge applications, we introduce open-source software (OSS) based radio access network (RAN) on over-the-air (OTA) commercial spectrum with Development Operations (DevOps) capabilities. OSS allows software modifications and integrations of the system components, e.g., Evolved Packet Core (EPC) and edge hosts running applications, required for new data pipelines and optimizations not addressed in standardization. Such an OSS infrastructure enables further research and prototyping of novel end-user applications in an environment familiar to software engineers without telecommunications background. We evaluated the presented infrastructure with end-to-end (E2E) OTA testing, resulting in 7.5MB/s throughput and latency of 21ms, which shows that the presented infrastructure provides low latency for edge applications.","2575-4912","978-1-7281-0546-8","10.1109/EuCNC.2019.8801973","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8801973","","","5G mobile communication;cellular radio;cloud computing;mobile computing;public domain software;radio access networks;software engineering","5G MEC;E2E OTA testing;development operations capabilities;DevOps capabilities;software engineers;OSS infrastructure;over-the-air commercial spectrum;open-source software based radio access network;unique programming abstractions;proprietary components;network infrastructures;cellular networks;distributed applications;cloud resources;edge computing;over-the-air deployment;open-source RANs;end-to-end OTA testing","","12","","38","","15 Aug 2019","","","IEEE","IEEE Conferences"
"On the Effectiveness of Tools to Support Infrastructure as Code: Model-Driven Versus Code-Centric","J. Sandobalín; E. Insfran; S. Abrahão","Departamento de Informática y Ciencias de la Computación, Escuela Politécnica Nacional, Quito, Ecuador; Instituto Universitario Mixto de Tecnología Informática, Universitat Politècnica de València, Valencia, Spain; Instituto Universitario Mixto de Tecnología Informática, Universitat Politècnica de València, Valencia, Spain","IEEE Access","28 Jan 2020","2020","8","","17734","17761","Infrastructure as Code (IaC) is an approach for infrastructure automation that is based on software development practices. The IaC approach supports code-centric tools that use scripts to specify the creation, updating and execution of cloud infrastructure resources. Since each cloud provider offers a different type of infrastructure, the definition of an infrastructure resource (e.g., a virtual machine) implies writing several lines of code that greatly depend on the target cloud provider. Model-driven tools, meanwhile, abstract the complexity of using IaC scripts through the high-level modeling of the cloud infrastructure. In a previous work, we presented an infrastructure modeling approach and tool (Argon) for cloud provisioning that leverages model-driven engineering and supports the IaC approach. The objective of the present work is to compare a model-driven tool (Argon) with a well-known code-centric tool (Ansible) in order to provide empirical evidence of their effectiveness when defining the cloud infrastructure, and the participants' perceptions when using these tools. We, therefore, conducted a family of three experiments involving 67 Computer Science students in order to compare Argon with Ansible as regards their effectiveness, efficiency, perceived ease of use, perceived usefulness, and intention to use. We used the AB/BA crossover design to configure the individual experiments and the linear mixed model to statistically analyze the data collected and subsequently obtain empirical findings. The results of the individual experiments and meta-analysis indicate that Argon is more effective as regards supporting the IaC approach in terms of defining the cloud infrastructure. The participants also perceived that Argon is easier to use and more useful for specifying the infrastructure resources. Our findings suggest that Argon accelerates the provisioning process by modeling the cloud infrastructure and automating the generation of scripts for different DevOps tools when compared to Ansible, which is a code-centric tool that is greatly used in practice.","2169-3536","","10.1109/ACCESS.2020.2966597","Ministry of Science, Innovation, and Universities (Adapt@Cloud project), Spain(grant numbers:TIN2017-84550-R); Escuela Politécnica Nacional; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8959180","Infrastructure as code;DevOps;model-driven engineering;controlled experiments;crossover design;linear mixed model","Tools;Cloud computing;Software;Argon;Unified modeling language;Computational modeling;Automation","cloud computing;resource allocation;software engineering;source code (software)","infrastructure automation;IaC approach;code-centric tool;cloud infrastructure resources;infrastructure resource;cloud provider;model-driven tool;IaC scripts;infrastructure modeling approach;Argon;model-driven engineering;DevOps tools;Infrastructure as Code","","3","","61","CCBY","14 Jan 2020","","","IEEE","IEEE Journals"
"Continuous evaluation for application development on cloud computing environments","C. H. Kao","Department of Applied Mathematics, National Taitung University, Taiwan","2017 International Conference on Applied System Innovation (ICASI)","24 Jul 2017","2017","","","1457","1460","As the technologies of cloud computing grow and mature, software developers, software companies, and academia are more likely to develop, deploy, and operate their applications or services on cloud computing environments. By leveraging cloud computing environments, the complexity and the cost of physical hardware, operation, and related management tasks can be reduced. The capacities brought by cloud computing environments can also improve particular quality characteristics of the deployed applications or services. However, separate or late consideration and evaluation of both application and cloud computing environment could cause negative impacts on the overall functionalities and qualities. In this paper, the concept and the design of continuous evaluation for application development on cloud computing environments are introduced. Through the continuous evaluation framework, it facilitates the joint consideration and evaluation of application and cloud computing environment as the development is performed and streamlines the development, deployment, and evaluation tasks for better quality and efficiency.","","978-1-5090-4897-7","10.1109/ICASI.2017.7988191","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7988191","Cloud computing;evaluation;DevOps","Cloud computing;Monitoring;Benchmark testing;Conferences;Technological innovation","cloud computing","application development;cloud computing environments;quality characteristics;continuous evaluation framework","","2","","8","","24 Jul 2017","","","IEEE","IEEE Conferences"
"Towards Autonomic Policy-based Network Service Deployment with SLA and Monitoring","G. Xilouris; S. Kolometsos; C. Parada; J. Bonnet; P. Stavrianos; E. Kapassa; M. Touloupou; D. Kyriazis; P. Gouvas; E. Fotopoulou; A. Zafeiropoulos; F. Vicens; J. Martrat; P. Alemany; R. Muñoz; R. Vilalta","NCSRD, Greece; NCSRD, Greece; ALTICE LABS, Portugal; ALTICE LABS, Portugal; UNIVERSITY OF PIRAEUS, Greece; UNIVERSITY OF PIRAEUS, Greece; UNIVERSITY OF PIRAEUS, Greece; UNIVERSITY OF PIRAEUS, Greece; UBITECH, Greece; UBITECH, Greece; UBITECH, Greece; ATOS, Spain; ATOS, Spain; Centre Tecnològic de Telecomunicacions de Catalunya (CTTC/CERCA), Spain; Centre Tecnològic de Telecomunicacions de Catalunya (CTTC/CERCA), Spain; Centre Tecnològic de Telecomunicacions de Catalunya (CTTC/CERCA), Spain","2018 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN)","30 May 2019","2018","","","1","2","Unlike previous generations, 5G will need to be faster, more efficient, reliable, flexible, agile, and, at the same time, cost less. For this to be possible, 5G has to engage with the best-of-breed of the emerging technologies, where NFV is definitely in the top list. In this context, this paper describes the SONATA Service Platform, an open source MANO framework extended in the scope of the 5GTANGO H2020 project. In particular, this demo presents some features that go beyond the state-of-the-art including Monitoring, Policy, and SLA Management.","","978-1-5386-8281-4","10.1109/NFV-SDN.2018.8725695","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8725695","Network Slicing;planning;(re-)optimization;5G;SDN/NFV;DevOps;SDK","Monitoring;5G mobile communication;Conferences;Computer architecture;Production;Network function virtualization;Software defined networking","5G mobile communication;public domain software;telecommunication computing;virtualisation","emerging technologies;SONATA Service Platform;open source MANO framework;5GTANGO H2020 project;autonomic policy-based network service deployment;NFV;SLA management","","4","","4","","30 May 2019","","","IEEE","IEEE Conferences"
"A New Approach for End to End Automation Testing Platform with Cloud Computing for 5G Product","S. Zhang; D. Fan; J. He; P. Zhang","Nokia-Sbell,Hangzhou,China; Nokia-Sbell,Hangzhou,China; Nokia-Sbell,Hangzhou,China; Yalla Group Limited,Hangzhou,China","2021 International Conference on Computer Engineering and Application (ICCEA)","28 Oct 2021","2021","","","322","326","Fast development, fast integration, fast delivery is extremely critical for any organizations. It is essential to develop end to end automation platform for quick delivery of software features in the entire software lifecycle management. Developing one platform can help to reduce the separation between developer, tester and operators which including continuous integration, continuous testing and continuous delivery. In addition, it will reduce the software development lifecycle, delivery frequent and high quality software versions in automated way. Meanwhile, moving the platform to cloud will speed up the platform deployment and enhance the portability. Besides, it promote the process more and more agile at software development and operations.This paper presents an entire automated pipeline, trigger from source code change by developers, create resource from data center to deploy the containerized testing framework. It follows the best practice of DevOps and base on Jenkins for Cl stage. The innovation here is we use the resource from data center which is a private cloud resource, thus it fully support the scalability and overall ease of use.","","978-1-6654-2616-9","10.1109/ICCEA53728.2021.00070","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9581107","Devops;CI/CD;Cloud computing;docker;Jenkins;pipeline;5G","Cloud computing;Data centers;Technological innovation;Automation;Codes;Scalability;Pipelines","5G mobile communication;automation;cloud computing;computer centres;integration;program testing;software quality","end automation testing platform;cloud computing;fast delivery;end automation platform;quick delivery;software features;software lifecycle management;continuous integration;continuous testing;continuous delivery;software development lifecycle;high quality software versions;platform deployment;entire automated pipeline;data center;private cloud resource;5G product;fast integration;Cl stage","","","","10","IEEE","28 Oct 2021","","","IEEE","IEEE Conferences"
"A Cloud-Based Framework for Machine Learning Workloads and Applications","Á. López García; J. M. De Lucas; M. Antonacci; W. Zu Castell; M. David; M. Hardt; L. Lloret Iglesias; G. Moltó; M. Plociennik; V. Tran; A. S. Alic; M. Caballer; I. C. Plasencia; A. Costantini; S. Dlugolinsky; D. C. Duma; G. Donvito; J. Gomes; I. Heredia Cacha; K. Ito; V. Y. Kozlov; G. Nguyen; P. Orviz Fernández; Z. Šustr; P. Wolniewicz","IFCA (CSIC-UC), Santander, Spain; IFCA (CSIC-UC), Santander, Spain; INFN Bari, Bari, Italy; Helmholtz Zentrum München, Deutsches Forschungszentrum für Gesundheit, Oberschleißheim, Germany; Laboratory of Instrumentation and Experimental Particle Physics, Lisbon, Portugal; Karlsruhe Institute of Technology, Karlsruhe, Germany; IFCA (CSIC-UC), Santander, Spain; Instituto de Instrumentación para Imagen Molecular (I3M), CSIC, Universitat Politècnica de València, Valencia, Spain; Poznan Supercomputing and Networking Center, IBCh PAS, Poznan, Poland; Slovak Academy of Sciences (IISAS), Institute of Informatics, Bratislava, Slovakia; Instituto de Instrumentación para Imagen Molecular (I3M), CSIC, Universitat Politècnica de València, Valencia, Spain; Instituto de Instrumentación para Imagen Molecular (I3M), CSIC, Universitat Politècnica de València, Valencia, Spain; IFCA (CSIC-UC), Santander, Spain; INFN CNAF, Bologna, Italy; Slovak Academy of Sciences (IISAS), Institute of Informatics, Bratislava, Slovakia; INFN CNAF, Bologna, Italy; INFN Bari, Bari, Italy; Laboratory of Instrumentation and Experimental Particle Physics, Lisbon, Portugal; IFCA (CSIC-UC), Santander, Spain; Helmholtz Zentrum München, Deutsches Forschungszentrum für Gesundheit, Oberschleißheim, Germany; Karlsruhe Institute of Technology, Karlsruhe, Germany; Slovak Academy of Sciences (IISAS), Institute of Informatics, Bratislava, Slovakia; IFCA (CSIC-UC), Santander, Spain; CESNET, Prague, Czech Republic; Poznan Supercomputing and Networking Center, IBCh PAS, Poznan, Poland","IEEE Access","30 Jan 2020","2020","8","","18681","18692","In this paper we propose a distributed architecture to provide machine learning practitioners with a set of tools and cloud services that cover the whole machine learning development cycle: ranging from the models creation, training, validation and testing to the models serving as a service, sharing and publication. In such respect, the DEEP-Hybrid-DataCloud framework allows transparent access to existing e-Infrastructures, effectively exploiting distributed resources for the most compute-intensive tasks coming from the machine learning development cycle. Moreover, it provides scientists with a set of Cloud-oriented services to make their models publicly available, by adopting a serverless architecture and a DevOps approach, allowing an easy share, publish and deploy of the developed models.","2169-3536","","10.1109/ACCESS.2020.2964386","DEEP-Hybrid-DataCloud “Designing and Enabling E-infrastructures for intensive Processing in a Hybrid DataCloud”; European Commission(grant numbers:777435); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8950411","Cloud computing;computers and information processing;deep learning;distributed computing;machine learning;serverless architectures","Cloud computing;Computational modeling;Task analysis;Deep learning;Tools;Computer architecture","cloud computing;learning (artificial intelligence)","distributed architecture;machine learning practitioners;cloud services;development cycle;models creation;transparent access;existing e-Infrastructures;distributed resources;compute-intensive tasks;cloud-oriented services;serverless architecture;easy share;cloud-based framework;machine learning workloads;DEEP-hybrid-datacloud framework","","17","","75","CCBY","6 Jan 2020","","","IEEE","IEEE Journals"
"Process Model for Integrated Product Lifecycles Using Digital Twins and Predictive Analytics","F. Reiche; H. Timinger","Institute for Data and Process Science University of Applied Sciences Landshut,Landshut,Germany; Institute for Data and Process Science University of Applied Sciences Landshut,Landshut,Germany","2021 IEEE Technology & Engineering Management Conference - Europe (TEMSCON-EUR)","26 Jul 2021","2021","","","1","5","Digital development processes and methods are already established in software development. They promise speed, more flexibility in case of changes and thus customer-oriented products. In mechanical and plant engineering, as well as in mechanical products in general, these methods and this approach are not yet common. With our process model, we show how digitalisation can bring these development processes and methods. Therefore, a process model based on DevOps, known from software development, was created to allow iterative and digital engineering in hardware design. According to a case study concerned, this process model allows to accept changes during development at a later point in time and enable iterative testing. The concept has to be proven in practice in a planned development project based on this method.","","978-1-6654-4091-2","10.1109/TEMSCON-EUR52034.2021.9488653","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9488653","developing;Devops;digital twin;integrated product life cycle;predictive analytics;process model;virtual engineering","Analytical models;Digital twin;Time to market;Tools;Software;Hardware;Iterative methods","customer services;mechanical engineering;mechanical products;product design;product life cycle management;production engineering computing;software engineering","iterative testing;hardware design;DevOps process model;plant engineering;mechanical engineering;predictive analytics;digital twins;digital development processes;integrated product lifecycles;planned development project;digital engineering;software development;mechanical products;customer-oriented products","","","","22","","26 Jul 2021","","","IEEE","IEEE Conferences"
"Model Driven Deployment of Auto-Scaling Services on Multiple Clouds","H. Alipour; Y. Liu","Electron. & Comput. Eng., Concordia Univ., Montreal, QC, Canada; Electron. & Comput. Eng., Concordia Univ., Montreal, QC, Canada","2018 IEEE International Conference on Software Architecture Companion (ICSA-C)","13 Aug 2018","2018","","","93","96","Hybrid cloud platforms have been adopted to facilitate different parts of services to deliver functionalities to service consumers. Each cloud platform offers elastic resource allocation, which accommodates fluctuating demands on services by automating the provision/deprovision of resources, referred as auto-scaling. In term of service deployment, auto-scaling is usually not interoperable between multiple cloud platforms. As a result, the service level auto-scaling strategy needs to be configured separately on disparate cloud platforms, which incurs difficulties in tracing the configuration and maintaining consistent deployment. This paper presents a model-driven method to connect a cloud platform independent model of services with cloud specific operations. Through the automated transformation from model to the configuration, we use cloud management tools to deliver auto-scaling deployment across clouds. We demonstrate our method with scaling configuration and deployment of an open source benchmark application - Dell DVD store on two cloud platforms, AWS and Rackspace. The experiment demonstrates our proposed method resolves the vendor lock issues by a model-to-configuration-to-deployment automation. The empirical measurement shows our method reduces the effort of deploying auto-scaling services on cloud platforms.","","978-1-5386-6585-5","10.1109/ICSA-C.2018.00033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8432188","Model-Driven;Auto-scaling;Cloud Computing;DevOps","Cloud computing;Unified modeling language;Tools;DVD;Manuals;Computational modeling;Benchmark testing","cloud computing;resource allocation","service level auto-scaling strategy;model-driven method;cloud platform independent model;cloud specific operations;cloud management tools;auto-scaling deployment;model-to-configuration-to-deployment automation;auto-scaling services;model driven deployment;hybrid cloud platforms;elastic resource allocation;service deployment;Dell DVD store;AWS platform;Rackspace platform","","5","","6","","13 Aug 2018","","","IEEE","IEEE Conferences"
"Anomaly Detection in a Large-Scale Cloud Platform","M. S. Islam; W. Pourmajidi; L. Zhang; J. Steinbacher; T. Erwin; A. Miranskyy","Ryerson University, Canada; Ryerson University, Canada; Ryerson University, Canada; IBM Canada Lab, Canada; IBM, USA; Ryerson University, Canada","2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)","7 May 2021","2021","","","150","159","Cloud computing is ubiquitous: more and more companies are moving the workloads into the Cloud. However, this rise in popularity challenges Cloud service providers, as they need to monitor the quality of their ever-growing offerings effectively. To address the challenge, we designed and implemented an automated monitoring system for the IBM Cloud Platform. This monitoring system utilizes deep learning neural networks to detect anomalies in near-real-time in multiple Platform components simultaneously. After running the system for a year, we observed that the proposed solution frees the DevOps team's time and human resources from manually monitoring thousands of Cloud components. Moreover, it increases customer satisfaction by reducing the risk of Cloud outages. In this paper, we share our solutions' architecture, implementation notes, and best practices that emerged while evolving the monitoring system. They can be leveraged by other researchers and practitioners to build anomaly detectors for complex systems.","","978-1-6654-3869-8","10.1109/ICSE-SEIP52600.2021.00024","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402147","","Cloud computing;Time series analysis;Detectors;Reliability;Monitoring;Best practices;Software engineering","cloud computing;learning (artificial intelligence);neural nets;ubiquitous computing","anomaly detection;cloud computing;cloud service providers;automated monitoring system;IBM cloud platform;neural networks;DevOps team;cloud components;cloud outages;anomaly detectors;complex systems;large-scale cloud platform;ubiquitous computing;multiple platform components","","2","","57","","7 May 2021","","","IEEE","IEEE Conferences"
"Conceptual Framework for Next-Generation Software Ecosystems","K. Matsumoto","Nara Institute of Science and Technology,Division of Information Science,Ikoma,Japan","2021 IEEE/ACIS 22nd International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","11 Feb 2022","2021","","","218","223","This paper proposes a conceptual framework for developing new technologies that will solve today’s technical issues in software development and operations (DevOps) and support the future software ecosystems. The proposed framework perceives resources essential for software DevOps from three perspectives: products, people, and technical information, and actively utilizes and link the latest digital technologies such as AI, natural language processing, microservices, and blockchain. The goal is not to aim fully automate software DevOps, but also to achieve high economic efficiency and sustainability by eliminating waste in software DevOps, assuming a human-centered society. The principal approaches of new technology development in the framework are ""product up-cycling"", ""placement of the right people and AI in the right places"", and ""quality control linked to external technical information."" New technologies to be developed with these approaches will expand conventional concepts in software DevOps with three dimensions of ""reuse,"" ""human resources,"" and ""quality control.""","2693-8421","978-1-6654-0403-7","10.1109/SNPD51163.2021.9705010","Japan Society for the Promotion of Science; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9705010","Software Reuse;Microservices;AI Applications;Blockchain Technology","Technological innovation;Ecosystems;Software algorithms;Quality control;Solids;Software;Sustainable development","","","","","","18","IEEE","11 Feb 2022","","","IEEE","IEEE Conferences"
"Dyn Tail - Dynamically Tailored Deployment Engines for Cloud Applications","J. Wettinger; U. Breitenbücher; F. Leymann","Inst. of Archit. of Applic. Syst., Univ. of Stuttgart, Stuttgart, Germany; Inst. of Archit. of Applic. Syst., Univ. of Stuttgart, Stuttgart, Germany; Inst. of Archit. of Applic. Syst., Univ. of Stuttgart, Stuttgart, Germany","2015 IEEE 8th International Conference on Cloud Computing","20 Aug 2015","2015","","","421","428","Shortening software release cycles increasingly becomes a critical competitive advantage, not exclusively for software vendors in the field of Web applications, mobile apps, and the Internet of Things. Today's users, customers, and other stakeholders expect quick responses to occurring issues and feature requests. DevOps and Cloud computing are two key paradigms to enable rapid, continuous deployment and delivery of applications utilizing automated software delivery pipelines. However, it is a highly complex and sophisticated challenge to implement such pipelines by installing, configuring, and integrating corresponding general-purpose deployment automation tooling. Therefore, we present a method in conjunction with a framework and implementation to dynamically generate tailored deployment engines for specific application stacks to deploy corresponding applications. Generated deployment engines are packaged in a portable manner to run them on various platforms and infrastructures. The core of our work is based on generating APIs for arbitrary deployment executables such as scripts and plans that perform different tasks in the automated deployment process. As a result, deployment tasks can be triggered through generated API endpoints, abstracting from lower-level, technical details of different deployment automation tooling.","2159-6190","978-1-4673-7287-9","10.1109/CLOUD.2015.63","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7214073","Deployment;Deployment Engine;Provisioning;Application Topology;APIfication;DevOps;Cloud Computing","Engines;Topology;Servers;Runtime;Cloud computing;Automation;Generators","application program interfaces;cloud computing;Internet","DynTail;dynamically tailored deployment engines;cloud computing;software release cycles;Web applications;Internet of Things;mobile apps;DevOps;automated software delivery pipelines;general-purpose deployment automation tooling;specific application stacks;APIs","","7","","30","","20 Aug 2015","","","IEEE","IEEE Conferences"
"A light-weight application monitoring and statistical debugging for a black-box application","T. Tonouchi","Knowledge Discovery Laboratories, NEC, Japan","2015 17th Asia-Pacific Network Operations and Management Symposium (APNOMS)","28 Sep 2015","2015","","","523","526","ICT systems have to be continuously maintained and revised because they have to catch up with business trend. For the continuous maintenance and revision, an operator team must share with an application development team the status of running application programs so that the development can revise the application programs. However, the internal behavior of application programs is a black box to the operator team, and it is difficult to monitor the internal behavior of the running application program. As a result, it takes time for the AP development team to get to know the running situation of the application program, and it results in a long revision period. In this paper, we introduce a prototype of an application monitoring system, which enables the operator team to monitor the method calls in Java application programs. It can also localize a failure method with statistical debugging. We implemented a prototype, and show the usefulness of the method.","","978-4-8855-2296-3","10.1109/APNOMS.2015.7275404","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7275404","Application Monitoring;Instrument;DevOps;Statistical Debugging","Decision support systems;Erbium","Java;program debugging;statistical analysis;system monitoring","light-weight application monitoring system;statistical debugging;black-box application;ICT system;running application program;Java application program;failure method","","1","","18","","28 Sep 2015","","","IEEE","IEEE Conferences"
"FADI - A Deployment Framework for Big Data Management and Analytics","R. Sellami; F. Zalila; A. Nuttinck; S. Dupont; J. -C. Deprez; S. Mouton","CETIC - Centre d’Excellence en Technologies de l’Information et de la Communication,Charleroi,Belgium; CETIC - Centre d’Excellence en Technologies de l’Information et de la Communication,Charleroi,Belgium; CETIC - Centre d’Excellence en Technologies de l’Information et de la Communication,Charleroi,Belgium; CETIC - Centre d’Excellence en Technologies de l’Information et de la Communication,Charleroi,Belgium; CETIC - Centre d’Excellence en Technologies de l’Information et de la Communication,Charleroi,Belgium; CETIC - Centre d’Excellence en Technologies de l’Information et de la Communication,Charleroi,Belgium","2020 IEEE 29th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE)","1 Feb 2021","2020","","","153","158","The production of huge amount of data and the emergence of new technologies in the industry sector have introduced new requirements for big data management. Many applications need to interact with several heterogeneous data sources to ingest, harmonise (normalise), persist, analyse and synthesize results to enable informed decisions and draw benefits from data. These operations are ensured by different tools and these tools are heterogeneous and not connected with each other. Besides, the whole tool-chain lacks automation in terms of its deployment, its operational workflow and its orchestration for satisfying the elastic and resilient properties needed by Industry. In this paper, we present FADI, a framework for deploying and orchestrating a Big Data management and analysis platform fully composed of open source tools. FADI has been developed through several research projects, namely, BigData@MA, Grinding 4.0, Quality 4.0 and ARTEMTEC where Industry use cases are used for validation purposes.","2641-8169","978-1-7281-6975-0","10.1109/WETICE49692.2020.00038","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9338535","Big Data;Deployment;DevOps;Kubernetes (K8s);Helm;Open Source","Industries;Pipelines;Tools;Big Data;Security;Testing;Software development management","Big Data;data analysis;public domain software","open source tools;FADI;big data management;heterogeneous data sources;operational workflow","","","","11","","1 Feb 2021","","","IEEE","IEEE Conferences"
"A Cloud Automation Platform for Flexibility in Applications and Resources Provisioning","M. Boschetti; V. Baglio; P. Ruiu; O. Terzo","CSI Piedmont, Turin, Italy; CSI Piedmont, Turin, Italy; Ist. Superiore Mario Boella (ISMB), Turin, Italy; Ist. Superiore Mario Boella (ISMB), Turin, Italy","2015 Ninth International Conference on Complex, Intelligent, and Software Intensive Systems","13 Aug 2015","2015","","","204","208","Cloud technologies are still characterized by critical issues, which pose specific challenges for application developers and operators. In particular cloud application-level and infrastructure-level are completely decoupled both in the development and runtime phases leading in poor QoS cloud services. Main issues related to the optimize the use of the hardware resources are partially solve with virtualization technologies but innovative methodology in the automatic management of resources, applications provisioning and deployment are urgently needed. This paper presents ALM Automation Platform over CHEF framework in context of services virtualization for Public Administration where typically a large number of technologies heterogeneous resources, applications are deployed and managed.","","978-1-4799-8870-9","10.1109/CISIS.2015.29","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7185187","Cloud Computing;automation;virtualization;self-provisionin;DevOps","Automation;Cloud computing;Servers;Production;Scalability","cloud computing;innovation management;quality of service;resource allocation;virtualisation","heterogeneous resources;public administration;CHEF framework;ALM Automation Platform;automatic resource management;innovative methodology;virtualization technologies;QoS cloud services;cloud infrastructure-level;cloud application-level;cloud technologies;resource provisioning;application flexibility;cloud automation platform","","3","","13","","13 Aug 2015","","","IEEE","IEEE Conferences"
"Towards MLOps: A Case Study of ML Pipeline Platform","Y. Zhou; Y. Yu; B. Ding","National University of Defence Technology,Key Lab. of Parallel and Distributed Computing Lab., College of Computer,ChangSha,China; National University of Defence Technology,Key Lab. of Parallel and Distributed Computing Lab., College of Computer,ChangSha,China; National University of Defence Technology,Key Lab. of Parallel and Distributed Computing Lab., College of Computer,ChangSha,China","2020 International Conference on Artificial Intelligence and Computer Engineering (ICAICE)","1 Mar 2021","2020","","","494","500","The development and deployment of machine learning (ML) applications differ significantly from traditional applications in many ways, which have led to an increasing need for efficient and reliable production of ML applications and supported infrastructures. Though platforms such as TensorFlow Extended (TFX), ModelOps, and Kubeflow have provided end-to-end lifecycle management for ML applications by orchestrating its phases into multistep ML pipelines, their performance is still uncertain. To address this, we built a functional ML platform with DevOps capability from existing continuous integration (CI) or continuous delivery (CD) tools and Kubeflow, constructed and ran ML pipelines to train models with different layers and hyperparameters while time and computing resources consumed were recorded. On this basis, we analyzed the time and resource consumption of each step in the ML pipeline, explored the consumption concerning the ML platform and computational models, and proposed potential performance bottlenecks such as GPU utilization. Our work provides a valuable reference for ML pipeline platform construction in practice.","","978-1-7281-9146-1","10.1109/ICAICE51518.2020.00102","National Natural Science Foundation of China; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9361315","MLOps;machine learning;end-to-end platform;DevOps;continuous training","Training;Computational modeling;Pipelines;Graphics processing units;Tools;Data models;Task analysis","learning (artificial intelligence);software development management","machine learning;Kubeflow;end-to-end lifecycle management;multistep ML pipelines;functional ML platform;computational models;ML pipeline platform construction;MLOps;TensorFlow extended;TFX;DevOps;continuous integration;continuous delivery tools;computing resources;resource consumption;GPU utilization","","2","","42","","1 Mar 2021","","","IEEE","IEEE Conferences"
"TIRA: An OpenAPI Extension and Toolbox for GDPR Transparency in RESTful Architectures","E. Grünewald; P. Wille; F. Pallas; M. C. Borges; M. -R. Ulbricht","Technische Universität Berlin,Information Systems Engineering,Berlin,Germany; Technische Universität Berlin,Information Systems Engineering,Berlin,Germany; Technische Universität Berlin,Information Systems Engineering,Berlin,Germany; Technische Universität Berlin,Information Systems Engineering,Berlin,Germany; Technische Universität Berlin,Information Systems Engineering,Berlin,Germany","2021 IEEE European Symposium on Security and Privacy Workshops (EuroS&PW)","29 Oct 2021","2021","","","312","319","Transparency – the provision of information about what personal data is collected for which purposes, how long it is stored, or to which parties it is transferred – is one of the core privacy principles underlying regulations such as the GDPR. Technical approaches for implementing transparency in practice are, however, only rarely considered. In this paper, we present a novel approach for doing so in current, RESTful application architectures and in line with prevailing agile and DevOps-driven practices. For this purpose, we introduce 1) a transparency-focused extension of OpenAPI specifications that allows individual service descriptions to be enriched with transparency-related annotations in a bottom-up fashion and 2) a set of higher-order tools for aggregating respective information across multiple, interdependent services and for coherently integrating our approach into automated CI/CD-pipelines. Together, these building blocks pave the way for providing transparency information that is more specific and at the same time better reflects the actual implementation givens within complex service architectures than current, overly broad privacy statements.","2768-0657","978-1-6654-1012-0","10.1109/EuroSPW54576.2021.00039","Ministry of Justice; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9583685","privacy engineering;privacy;data protection;transparency;REST;GDPR;OpenAPI;DevOps;Agile","Privacy;Data privacy;Annotations;Architecture;Tools;Regulation","application program interfaces;data privacy;software architecture;Web services","RESTful application architectures;DevOps-driven practices;transparency-focused extension;OpenAPI specifications;individual service descriptions;transparency-related annotations;higher-order tools;respective information;multiple services;interdependent services;transparency information;actual implementation;complex service architectures;overly broad privacy statements;TIRA;OpenAPI extension;toolbox;GDPR transparency;RESTful architectures;personal data;core privacy principles;technical approaches;current application architectures","","","","36","","29 Oct 2021","","","IEEE","IEEE Conferences"
"Application Deployment and Management in the Cloud","M. Miglierina",NA,"2014 16th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing","9 Feb 2015","2014","","","422","428","Cloud computing is a revolutionary paradigm that allows to acquire infinite resources on demand and pay only for the actual use. Together with novel software development methodologies, such as Agile and DevOps, the cloud can really help companies in responding to market demand for continuous delivering innovative services, enabling the shift from a silo based release process, where customers, developers and system administrators are almost conflicting among each other, to a unified process, where the shared final objective is that of making the product available to the user. There are two main challenges that have to be faced when approaching the cloud. First of all, the heterogeneity of the offer. More and more cloud services are growing from different providers with no standard yet defined, driving companies towards the lock-in problem. Second, having the possibility to scale from 10s to 1000s of machines implies huge effort in IT management without smart automation systems. This paper is an attempt to review some of the tools among the currently available ones that may help companies simplifying their application release process.","","978-1-4799-8448-0","10.1109/SYNASC.2014.63","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7034713","cloud computing;devops","Companies;Software;Containers;Virtual machining;Standards;Automation","cloud computing","application deployment;application management;cloud computing;revolutionary paradigm;Agile;DevOps;market demand;continuous delivering innovative services;silo based release process;system administrators;shared final objective;cloud services;IT management;application release process","","9","","30","","9 Feb 2015","","","IEEE","IEEE Conferences"
"ResDevOps: A Software Engineering Framework for Achieving Long-Lasting Complex Systems","A. Furfaro; T. Gallo; A. Garro; D. Saccà; A. Tundis","DIMES, Univ. of Calabria, Rende, Italy; DIMES, Univ. of Calabria, Rende, Italy; DIMES, Univ. of Calabria, Rende, Italy; DIMES, Univ. of Calabria, Rende, Italy; DIMES, Univ. of Calabria, Rende, Italy","2016 IEEE 24th International Requirements Engineering Conference (RE)","5 Dec 2016","2016","","","246","255","The development of high quality complex software systems and quick time-to-market with full customer satisfaction often appear as two competing forces. Many industry efforts have been directed towards agile methodologies completed with the DevOps approach, whereas traditional requirements engineering with much documentation, is considered surpassed. The aim is to obtain a longer life software because it suddenly responds to the customers changing requirements from which it receives continuous input. This might create a serious cost implication and a real risk to lose system requirements control. In this paper, we propose a framework able to govern the complexity of the system requirements and to allow the embedding, occasionally, of technological innovations into the overall system. ResDevOps joins the value of the agile world with DevOps, with the additional value deriving from an unceasing parallel innovation management process, which we call ResDevs. ResDevOps includes a continuous research and innovation process, which provides an asynchronous, additional input to the agile process inside a chain of concurrent engineering collaboration. This is a suitable trade-off to maintain modern IT Systems live for a longer time, with many consequent advantages for both total investment and system quality. The practical use of the ResDevOps approach is shown by means of a case study.","2332-6441","978-1-5090-4121-3","10.1109/RE.2016.15","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7765530","Software Development Methodologies;Concurrent Software Engineering;Goal-Oriented Methodologies;Requirements Engineering;Enterprise Information Systems","Technological innovation;Stakeholders;Context modeling;Context;Software engineering;Software","concurrent engineering;innovation management;software engineering;systems analysis","IT systems;concurrent engineering collaboration;innovation management process;system requirements;longer life software;requirements engineering;agile methodologies;customer satisfaction;time-to-market;high quality complex software systems development;long-lasting complex systems;software engineering framework;ResDevOps","","1","1","29","","5 Dec 2016","","","IEEE","IEEE Conferences"
"Virtualized Dynamic transcoding service for adaptive streaming video over HTTP in 5G systems","E. Meyerson; D. Guija; M. S. Siddiqui; D. Gómez; I. Fraile","Media Internet Area Fundació i2CAT Barcelona, Spain; Software Networks Area Fundació i2CAT Barcelona, Spain; Software Networks Area Fundació i2CAT Barcelona, Spain; Media Internet Area Fundació i2CAT Barcelona, Spain; Media Internet Area Fundació i2CAT Barcelona, Spain","2018 International Conference on Smart Communications in Network Technologies (SaCoNeT)","23 Dec 2018","2018","","","300","305","SDN and NFV technologies promise to enable the flexibility and programmability of networks in 5G infrastructures to ensure lower cost of network and service provisioning and operation and to reduce the time to market for new services. This paper focuses on showcasing and assessing a virtualized dynamic transcoding service using the capabilities of a 5G system, the NFV-based SONATA framework, an EC funded project inside Horizon 2020 and 5GPPP programs, while enhancing a virtual Content Delivery Network (CDN) service with features like elasticity and programmability. The business case of CDNs is well established where a series of business relationships are affected by various deployment scenarios that are possible within the current setting. SONATA framework allows to develop and deploy enhanced virtual services, through its Network Service Development Kit and Service Platform using a continuous integration and delivery DevOps methodology that allow high levels of programmability and flexibility to orchestrate and manage Network Services. In this way, performed experiments will demonstrate how online transcoding services deployed through the SONATA Service Platform results in a huge amount of resource saving comparing it with the commonly used offline transcoding service.","","978-1-5386-9493-0","10.1109/SaCoNeT.2018.8585573","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8585573","MPEG-DASH;HTTP adaptive streaming;virtual network functions;transcoding;multimedia;quality of experience;5G;NFV MANO;microservices;VNF;DevOps","","5G mobile communication;hypermedia;Internet;mobile communication;software defined networking;transcoding;video streaming","virtualized dynamic transcoding service;adaptive streaming video;service provisioning;NFV-based SONATA framework;5GPPP programs;virtual Content Delivery Network service;enhanced virtual services;Network Services;online transcoding services;SONATA Service Platform results;offline transcoding service","","","","11","","23 Dec 2018","","","IEEE","IEEE Conferences"
"Dynamic Universal Maturity Assessment System","T. Pardhe; A. Sood","Netaji Subhas University of Technology Sector – 3,B. E. Information Technology,Dwarka,New Delhi,India; Netaji Subhas University of Technology Sector – 3,Dwarka,New Delhi,India","2021 International Conference on Technological Advancements and Innovations (ICTAI)","14 Jan 2022","2021","","","373","377","After the introduction of computer, there has been an influx of applications. Every application sates different human needs, however, each one of them uses software maturity model to assess and deliver a reliable and scalable application. Since, every organization uses a varied model, or calculation standard, a universal standard is necessary. This research paper proposes an ubiquitous formula that, not only solves the above ambiguity but also considers every aspect of development basis on their individual prominence. Each valuable process is divided into sub categories and given respective weightage based on the use case of the application, such a dichotomy dramatically increases the assessment accuracy of the software application and provides a rate of maturity on a scale of 0-10 where the former being the lowest and later being highest level of maturity.","","978-1-6654-2087-7","10.1109/ICTAI53825.2021.9673352","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9673352","software development;maturity model;universal maturity model;maturity assessment;DevOps","Technological innovation;Computational modeling;Standards organizations;Organizations;Software;Software reliability","Capability Maturity Model","software application;dynamic universal maturity assessment system;software maturity model;reliable application;scalable application;ubiquitous formula;DevOps;software development","","","","19","IEEE","14 Jan 2022","","","IEEE","IEEE Conferences"
"Nanoservice Infrastructure Notation (NINo) and the ASPIRE Interns","C. T. Pascale; M. Rice; S. Sharma",NA; NA; NA,"2020 IEEE Integrated STEM Education Conference (ISEC)","12 Apr 2021","2020","","","1","1","NINo is a future DevOps / Data Science pipeline tool that is being developed by JHU APL and two ASPIRE interns. The goal of this capability is to expose function-level capabilities, via either a simple application or configuration file, for use in Docker [1], Serverless Architectures [2], or data science/analytic pipelines. The goal is similar to efforts such as Metaparticle [3] and Source-to-Image[4] that aim to lower the barrier to horizontal scaling of data processing and analysis capabilities. In previous years ASPIRE interns have developed tools to ease the acceptance of DevOps principles in JHU APL. They have created a web application, Harmonia, that asked users a few simple questions and supplied the scaffolding for a software project with artifacts to support sound software engineering processes. The lack of user interest has driven us to a more focused objective. NINo will focus on easing deployment to cloud environments. Ideally, any person could develop cloud-based data science services. The team and its work has been organized in an asynchronous and agile manner. There have been three members working on three subsystems: configuration, framework/integration, and artifact generation. An incremental and prototype-driven approach has allowed for creation of increasingly more functional software as internship has proceeded. Interns have been given extensive control over their development processes and have investigated the programming frameworks used. While the initial stages have not resulted in a complete system, the interns have improved their programming skills and complete common coding challenges. The team is close to integration testing and initial demonstration. As the academic year closes, team members will work on design improvement, refactoring, and generation of future feature requests from prospective users. One summer intern will focus on developing a user interface for configuring and observing results.","2330-331X","978-1-7281-7520-1","10.1109/ISEC49744.2020.9397808","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9397808","","Pipelines;Tools;Data science;User interfaces;Software;Programming profession;Testing","cloud computing;software engineering;software maintenance;user interfaces","agile manner;artifact generation;incremental prototype-driven approach;team members;feature requests;prospective users;summer intern;user interface;nanoservice infrastructure notation;NINo;ASPIRE interns;JHU APL;function-level capabilities;Docker;Serverless Architectures;horizontal scaling;data processing;DevOps principles;web application;software project;sound software engineering processes;user interest;focused objective;cloud environments;cloud-based data science services;asynchronous manner","","","","0","","12 Apr 2021","","","IEEE","IEEE Conferences"
"(WIP) CloudCAMP: Automating the Deployment and Management of Cloud Services","A. Bhattacharjee; Y. Barve; A. Gokhale; T. Kuroda","Dept. of Electr. Eng. & Comput. Sci., Vanderbilt Univ., Nashville, TN, USA; Dept. of Electr. Eng. & Comput. Sci., Vanderbilt Univ., Nashville, TN, USA; Dept. of Electr. Eng. & Comput. Sci., Vanderbilt Univ., Nashville, TN, USA; NEC Corp., Kawasaki, Japan","2018 IEEE International Conference on Services Computing (SCC)","6 Sep 2018","2018","","","237","240","Users of cloud platforms often must expend significant manual efforts in the deployment and orchestration of their services on cloud platforms due primarily to having to deal with the high variabilities in the configuration options for virtualized environment setup and meeting the software dependencies for each service. Despite the emergence of many DevOps cloud automation and orchestration tools, users must still rely on specifying low-level scripting details for service deployment and management. Using these tools required domain expertise along with a steep learning curve. To address these challenges in a tool-and-technology agnostic manner, which helps promote interoperability and portability of services hosted across cloud platforms, we present initial ideas on a GUI based cloud automation and orchestration framework called CloudCAMP. CloudCAMP uses model-driven engineering techniques to provide users with intuitive and higher-level modeling abstractions that preclude the need to specify all the low-level details. CloudCAMP's generative capabilities leverage a built-in knowledge-base to automate the synthesis of Infrastructure-as-Code (IAC) solution that subsequently can be used to deploy and orchestrate services in the cloud. Preliminary results from a small user study are presented in the paper.","2474-2473","978-1-5386-7250-1","10.1109/SCC.2018.00038","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8456424","cloud services, automation, orchestration, domain specific modeling, knowledge base","Cloud computing;Automation;Tools;Software;Knowledge based systems;Manuals;Complexity theory","cloud computing;knowledge based systems;object-oriented methods;open systems;service-oriented architecture;software portability;software tools;Web services","CloudCAMP;virtualized environment;cloud service management;DevOps cloud automation tools;DevOps cloud orchestration tools;service interoperability;service portability;GUI based cloud automation;model-driven engineering;built-in knowledge-base;Infrastructure-as-Code solution","","9","","11","","6 Sep 2018","","","IEEE","IEEE Conferences"
"Agile Big Data Analytics for Web-Based Systems: An Architecture-Centric Approach","H. Chen; R. Kazman; S. Haziyev","Information Technology Management, University of Hawaii, Honolulu, HI; Information Technology Management, University of Hawaii, Honolulu, HI; Architecture Group, Softserve Inc., Austin, TX","IEEE Transactions on Big Data","20 Oct 2016","2016","2","3","234","248","This article contributes an architecture-centric methodology, called AABA (Architecture-centric Agile Big data Analytics), to address the technical, organizational, and rapid technology change challenges of both big data system development and agile delivery of big data analytics for Web-based Systems (WBS). As the first of its kind, AABA fills a methodological void by adopting an architecture-centric approach, advancing and integrating software architecture analysis and design, big data modeling and agile practices. This article describes how AABA was developed, evolved and validated simultaneously in 10 empirical WBS case studies through three CPR (Collaborative Practice Research) cycles. In addition, this article presents an 11th case study illustrating the processes, methods and techniques/tools in AABA for cost-effectively achieving business goals and architecture agility in a large scale WBS. All 11 case studies showed that architecture-centric design, development, and operation is key to taming technical complexity and achieving agility necessary for successful WBS big data analytics development. Our contribution is novel and important. The use of reference architectures, a design concepts catalog and architectural spikes in AABA are advancements to architecture design methods. In addition, our architecture-centric approach to DevOps was critical for achieving strategic control over continuous big data value delivery for WBS.","2332-7790","","10.1109/TBDATA.2016.2564982","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7468484","Software architecture;data systems;system analysis and design","Big data;Computer architecture;Data analysis;Collaboration;System analysis and design;Real-time systems;Data models","Big Data;data analysis;Internet;software architecture;software prototyping","Web-based systems;architecture-centric approach;AABA;architecture-centric agile Big Data analytics;WBS;software architecture analysis;agile practices;collaborative practice research cycles;CPR cycles;architecture agility;reference architectures;design concepts catalog;architectural spikes;architecture design methods;DevOps","","29","","45","IEEE","11 May 2016","","","IEEE","IEEE Journals"
"Research on Building Exploitable Vulnerability Database for Cloud-Native App","M. Huang; W. Fan; W. Huang; Y. Cheng; H. Xiao","School of Information and Communication Engineering, Communication University of China,Beijing,China; School of Computer Science and Cybersecurity, Communication University of China,Beijing,China; School of Computer Science and Cybersecurity, Communication University of China,Beijing,China; School of Computer Science and Cybersecurity, Communication University of China,Beijing,China; School of Information and Communication Engineering, Communication University of China,Beijing,China","2020 IEEE 4th Information Technology, Networking, Electronic and Automation Control Conference (ITNEC)","4 May 2020","2020","1","","758","762","Due to issues such as static unverifiability and lack of effective application in vulnerability databases. This paper proposes a method of building Exploitable Vulnerability Database for Cloud-Native App (CNA). In this paper, a new machine-oriented structured vulnerability intelligence format is designed to store vulnerability information to automate the processing of vulnerability information. A large number of cloud-native application vulnerabilities have been tested and a modularized test process has been proposed as a form of prototype that automatically builds a Deliberated Vulnerable Environment (DVE) in a pipelined manner using the DevOps toolchain. This prototype system can directly access the vulnerability database to build vulnerability intelligence and extract key information from it. The affected software versions from the vulnerability intelligence are used to fetch all vulnerable software base images by version comparison. A CNA image containing the desired vulnerability can be generated from the base image with post-installation configurations. A Vulnerability Auto-Validation Framework is used to verify whether it is exploitable or not. After this process, a CNA image with the DVE, is automatically pushed to an image registry. This DVE image can be widely used in different cases, such as sandbox, honeypot, cyber range, etc. Experiments have been conducted to demonstrate that it can build and deliver DVE images from the proposed vulnerability intelligence. This paper uses real vulnerabilities in National Vulnerability Database (NVD) to experiment on the prototype system. The experiment uses the machine-oriented structured vulnerability intelligence designed in this paper as the prototype system input, and successfully releases the DVE image when the vulnerability intelligence is accurate. What's more, the building process and result of the DVE image can be inspected and visualized through CI/CD pipeline so that to increase the confidence of the veracity of the vulnerability intelligence.","","978-1-7281-4390-3","10.1109/ITNEC48623.2020.9084733","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9084733","Information Security;Vulnerability Database;DevOps;Deliberated Vulnerable Environment","Visualization;Databases;Conferences;Buildings;Pipelines;Prototypes;Software","cloud computing;database management systems;security of data","vulnerability auto-validation framework;deliberated vulnerable environment;cloud-native app;exploitable vulnerability database;DVE image;CNA image;cloud-native application vulnerabilities;vulnerability information;vulnerability intelligence format","","1","","16","","4 May 2020","","","IEEE","IEEE Conferences"
"A Hierarchical Categorization Approach for System Operation Services","W. Chen; P. Xu; G. Wu; W. Dou; C. Gao; J. Wei","Inst. of Software, Beijing, China; Inst. of Software, Beijing, China; Inst. of Software, Beijing, China; Inst. of Software, Beijing, China; Inst. of Software, Beijing, China; Inst. of Software, Beijing, China","2017 IEEE International Conference on Web Services (ICWS)","11 Sep 2017","2017","","","700","707","Operation services are reusable and shareable units of configuration code executed by configuration management tools (CMTs), achieving continuous deployment and continuous delivery. With the prevalence of DevOps (Development and Operations), thousands of operation services have been developed for various software systems, and they are publicly available through the online repositories of popular CMTs. However, locating and retrieving desired operation services is challenging since keyword-and tag-based search provided by a repository is with low precision. In this paper, we implement a hierarchical categorization approach based search service, named OSFinder, which searches and locates desired operation services more accurately. OSFinder first constructs a category hierarchy for operation services across multiple repositories, and then it classifies over 13,000 operation services into 90 categories based on machine learning technique, finally it provides a search for users. With OSFinder, a user can narrow down his search scope by tracking the category hierarchy in a top-down way, and then searches in a small group with keywords. The evaluation shows that OSFinder outperforms keyword-and tag-based search.","","978-1-5386-0752-7","10.1109/ICWS.2017.84","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029825","","Databases;Metadata;Crawlers;Semantics;Servers;Data mining;Generators","Internet;learning (artificial intelligence);software engineering","system operation services;hierarchical categorization approach based search service;machine learning technique;machine learning technique;OSFinder;development-and-operations;configuration management tools;DevOps;CMT","","2","","26","","11 Sep 2017","","","IEEE","IEEE Conferences"
"Characterizing Defective Configuration Scripts Used for Continuous Deployment","A. Rahman; L. Williams","North Carolina State Univ., Raleigh, NC, USA; North Carolina State Univ., Raleigh, NC, USA","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)","28 May 2018","2018","","","34","45","In software engineering, validation and verification (V&V) resources are limited and characterization of defective software source files can help in efficiently allocating V&V resources. Similar to software source files, defects occur in the scripts used to automatically manage configurations and software deployment infrastructure, often known as infrastructure as code (IaC) scripts. Defects in IaC scripts can have dire consequences, for example, creating large-scale system outages. Identifying the characteristics of defective IaC scripts can help in mitigating these defects by allocating V&V efforts efficiently based upon these characteristics. The objective of this paper is to help software practitioners to prioritize validation and verification efforts for infrastructure as code (IaC) scripts by identifying the characteristics of defective IaC scripts. Researchers have previously extracted text features to characterize defective software source files written in general purpose programming languages. We investigate if text features can be used to identify properties that characterize defective IaC scripts. We use two text mining techniques to extract text features from IaC scripts: the bag-of-words technique, and the term frequency-inverse document frequency (TF-IDF) technique. Using the extracted features and applying grounded theory, we characterize defective IaC scripts. We also use the text features to build defect prediction models with tuned statistical learners. We mine open source repositories from Mozilla, Openstack, and Wikimedia Commons, to construct three case studies and evaluate our methodology. We identify three properties that characterize defective IaC scripts: filesystem operations, infrastructure provisioning, and managing user accounts. Using the bag-of-word technique, we observe a median F-Measure of 0.74, 0.71, and 0.73, respectively, for Mozilla, Openstack, and Wikimedia Commons. Using the TF-IDF technique, we observe a median F-Measure of 0.72, 0.74, and 0.70, respectively, for Mozilla, Openstack, and Wikimedia Commons.","","978-1-5386-5012-7","10.1109/ICST.2018.00014","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8367034","configuration as code;continuous deployment;defect;devops;infrastructure as code;puppet","Feature extraction;Software;Predictive models;Text mining;Organizations;Measurement;DSL","data mining;program verification;resource allocation;software engineering;software fault tolerance;text analysis","defective IaC scripts;defective software source files;code scripts;user account management;infrastructure provisioning;filesystem operations;term frequency-inverse document frequency;bag-of-words technique;text mining;V&V resource allocation;validation and verification resources;defective configuration scripts;text feature extraction","","21","","67","","28 May 2018","","","IEEE","IEEE Conferences"
"An Uncertainty-Aware Approach to Optimal Configuration of Stream Processing Systems","P. Jamshidi; G. Casale","Imperial Coll. London, London, UK; Imperial Coll. London, London, UK","2016 IEEE 24th International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems (MASCOTS)","8 Dec 2016","2016","","","39","48","Finding optimal configurations for Stream Processing Systems (SPS) is a challenging problem due to the large number of parameters that can influence their performance and the lack of analytical models to anticipate the effect of a change. To tackle this issue, we consider tuning methods where an experimenter is given a limited budget of experiments and needs to carefully allocate this budget to find optimal configurations. We propose in this setting Bayesian Optimization for Configuration Optimization (BO4CO), an auto-tuning algorithm that leverages Gaussian Processes (GPs) to iteratively capture posterior distributions of the configuration spaces and sequentially drive the experimentation. Validation based on Apache Storm demonstrates that our approach locates optimal configurations within a limited experimental budget, with an improvement of SPS performance typically of at least an order of magnitude compared to existing configuration algorithms.","2375-0227","978-1-5090-3432-1","10.1109/MASCOTS.2016.17","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7774564","Big Data;Machine Learning;Stream Processing System;Performance Tuning;Software Performance Engineering;Bayesian Optimization;DevOps;Software Variability;Auto-tuning","Optimization;Radiation detectors;Response surface methodology;Tuning;Bayes methods;Benchmark testing;Topology","Bayes methods;iterative methods;optimisation;parallel processing;tuning","uncertainty-aware approach;optimal configuration;stream processing systems;SPS;tuning methods;Bayesian Optimization for Configuration Optimization;BO4CO;auto-tuning algorithm;Gaussian processes;GP;posterior distribution iterative capturing;Apache Storm","","46","","41","","8 Dec 2016","","","IEEE","IEEE Conferences"
"An Approach to Support Automated Deployment of Applications on Heterogeneous Cloud-HPC Infrastructures","E. Di Nitto; J. Gorroñogoitia; I. Kumara; G. Meditskos; D. Radolović; K. Sivalingam; R. S. González","Politecnico di Milano,Italy; ATOS,Spain; Jheronimus Academy of Data Science,The Netherlands; Information Technologies Institute, Centre for Research and Technology Hellas,Greece; XLAB Research,Slovenia; HPE HPC/AI EMEA Research Lab,United Kingdom; ATOS,Spain","2020 22nd International Symposium on Symbolic and Numeric Algorithms for Scientific Computing (SYNASC)","24 Feb 2021","2020","","","133","140","Complex applications, which include microservices, computationally intensive batch jobs, and sophisticated interaction with the external environment, demand for heterogeneous computational infrastructures that range from cloud to HPC and edge computing. In this context, a crucial problem is to facilitate the work of DevOps teams in i. the conception of the right operational architecture for the application, ii. its transformation into infrastructural code that automates its deployment, taking into account the peculiarities of each of the diverse infrastructures involved in this, and iii. its operation. The SODALITE framework aims at addressing this scenario. This paper presents the main features offered by the first version of the framework, currently focusing on managing cloud and HPC clusters, and shows them in practice through a relevant case study.","","978-1-7281-7628-4","10.1109/SYNASC51798.2020.00031","European Commission(grant numbers:825480 (H2020)); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9356938","","Scientific computing;Heuristic algorithms;Focusing;Computer architecture;Dynamic scheduling;Numerical models;Edge computing","cloud computing;parallel processing","heterogeneous cloud-HPC infrastructures;microservices;intensive batch jobs;sophisticated interaction;external environment;heterogeneous computational infrastructures;edge computing;DevOps teams;operational architecture;infrastructural code;diverse infrastructures;managing cloud;HPC clusters;SODALITE framework","","2","","24","","24 Feb 2021","","","IEEE","IEEE Conferences"
"Towards Modelling Acceptance Tests as a Support for Software Measurement","A. Lapointe-Boisvert; S. Mosser; S. Trudel","Université du Québec à Montréal,Montréal,Canada; Université du Québec à Montréal,Montréal,Canada; Université du Québec à Montréal,Montréal,Canada","2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)","20 Dec 2021","2021","","","827","832","The DevOps paradigm emphasizes the need for a measurable feedback loop, starting from requirements and going as far as deployment in an automated way. In this context, a modelling challenge is to leverage the existing requirement engineering approaches to support measurements. Unfortunately, measurement methods are slow and costly by definition, preventing precisely measured requirements from being used in the DevOps loop. As a result, developers have to deal with grossly estimated elements, e.g., using story points promoted by agile methods. Thus, it is not possible to provide better support for the development team. We envision taking advantage of the artifacts that already exist in a DevOps context to provide better support for requirements measurement, making it available in an automated context such as the DevOps one. This paper focuses on the automated analysis of acceptance tests (e.g., expressed using the Gherkin language) to support functional measurement automation in a DevOps context. This proposition is illustrated by a scenario coming from an industrial partner, supporting the identification of four research challenges to be tackled.","","978-1-6654-2484-4","10.1109/MODELS-C53483.2021.00129","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9643776","measurements;acceptance tests;modelling","Feedback loop;Biological system modeling;Ecosystems;Estimation;Model driven engineering;Software measurement;Requirements engineering","program testing;software metrics;software prototyping;specification languages","software measurement;requirement engineering;agile methods;DevOps context;requirements measurement;modelling acceptance tests;functional measurement automation;feedback loop measurement","","","","30","IEEE","20 Dec 2021","","","IEEE","IEEE Conferences"
"Integrating Industry Seminars within a Software Engineering Module to Enhance Student Motivation","G. J. Collins","University College London,School of Management,London,United Kingdom","2020 43rd International Convention on Information, Communication and Electronic Technology (MIPRO)","6 Nov 2020","2020","","","1497","1502","Engineering students increasingly demand and require coverage of emerging technologies to prepare themselves for subsequent research and employment. Industry and professional bodies are also concerned that engineering education doesn't always prepare students adequately for the world of work. The software engineering postgraduate professional practice module at University College London is designed to provide real-world experience, before students commence their industry research projects. Industry speakers are invited from a range of organizations, including ThoughtWorks, IBM, Form3, Verne Global, and Fujitsu. Seminars include: DevOps, microservices, cloud-native architectures, machine learning and quantum technologies. Before each topic is covered, students are asked their understanding of the subject matter, via questionnaires. This information is shared with industry speakers to ensure the content of presentations is compatible with students' prior knowledge. It has proved valuable to allow time for discussions to facilitate professional networking, which particularly benefits female students. Students have indicated they highly value the real-world project examples delivered by industry experts. This suggests that integrating industry seminars can enhance engineering education and motivate students by covering leading-edge technologies and practices. However, this requires considerable time in coordinating and codeveloping seminars, and such initiatives need to be adequately resourced to be effective.","2623-8764","978-953-233-099-1","10.23919/MIPRO48935.2020.9245232","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9245232","engineering education;professional networking;industry seminars;motivation","Industries;Seminars;Engineering profession;Collaboration;Organizations;Planning;Software engineering","computer aided instruction;computer science education;educational courses;educational institutions;further education;human factors;project management;software development management;software engineering","industry seminars;engineering students;employment;engineering education;software engineering postgraduate professional practice module;University College London;industry research projects;Verne Global;cloud-native architectures;quantum technologies;professional networking;female students;real-world project examples;leading-edge technologies;student motivation enhancement;ThoughtWorks;IBM;Form3;Fujitsu;DevOps;microservices;machine learning","","1","","20","","6 Nov 2020","","","IEEE","IEEE Conferences"
"Lifelong learning and dialogue in a VUCAWorld","R. Bierwolf; P. Frijns; P. V. Kemenade","NA; Dutch Central Government; IT Auditor, ASR","IEEE Engineering Management Review","25 Sep 2017","2017","45","3","19","24","In this paper, the authors continue the discourse on lifelong learning as it relates to Project Management<sup>1</sup>. In previous editions in this series, the first author raised the topic about Rethinking Project Management and the trend and development towards the reflective professional. In addition, a number of presentations have been held in June at the conferences TEMSCON 2017<sup>2</sup> and ICE/ITMC 2017<sup>3</sup> that relate to these two subjects. In particular at the latter conference there was a special session dedicated to Rethinking Project Management with ten papers accepted and presented for the session. These topics, together with a view on these papers, and using a perspective offered through a literature review comparing traditional IT project organization with more current DevOps IT project organization, leads to a model depicting the inevitable tensions between the “business,” “development,” and “operations” in an organization that also needs to run projects. But also on how models can foster lifelong learning and support research through project management as previously introduced. With this paper, the audience is once again challenged to determine their own perspectives on these matters, and to engage into the continuing discourse. This paper again intends to continue the series of articles as another discussion paper combining both needs from practice and progress through research. Hence, professionalization and learning on project management is an ongoing process and you are invited to participate.","1937-4178","","10.1109/EMR.2017.2734298","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8048438","","Project management;Organizations;Stakeholders;Uncertainty;Technological innovation;Tools;Logic gates","information technology;project management","lifelong learning;dialogue;VUCA World;TEMSCON 20172;ICE/ITMC 20173;Rethinking Project Management;DevOps IT project organization;professionalization","","4","","","","25 Sep 2017","","","IEEE","IEEE Journals"
"AIOps: Real-World Challenges and Research Innovations","Y. Dang; Q. Lin; P. Huang",Microsoft Azure; Microsoft Research; Johns Hopkins University,"2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","19 Aug 2019","2019","","","4","5","AIOps is about empowering software and service engineers (e.g., developers, program managers, support engineers, site reliability engineers) to efficiently and effectively build and operate online services and Apps at scale with artificial intelligence (AI) and machine learning (ML) techniques. AIOps can help achieve higher service quality and customer satisfaction, engineering productivity boost, and cost reduction. In this technical briefing, we summarize the real-world challenges on building AIOps solutions based on our practice and experience in Microsoft, propose a roadmap of AIOps related research directions, and share a few successful AIOps solutions we have built for Microsoft service products.","2574-1934","978-1-7281-1764-5","10.1109/ICSE-Companion.2019.00023","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8802836","AIOps, DevOps, Software Analytics","Software;Buildings;Technological innovation;Machine learning;Customer satisfaction","cost reduction;customer satisfaction;learning (artificial intelligence);software engineering","artificial intelligence;higher service quality;customer satisfaction;engineering productivity boost;Microsoft service products;service engineers;program managers;online services;reliability engineers;AIOps solutions","","42","","8","","19 Aug 2019","","","IEEE","IEEE Conferences"
"ModelOps: Cloud-Based Lifecycle Management for Reliable and Trusted AI","W. Hummer; V. Muthusamy; T. Rausch; P. Dube; K. El Maghraoui; A. Murthi; P. Oum",IBM Research AI; IBM Research AI; IBM Research AI; IBM Research AI; IBM Research AI; IBM Research AI; IBM Research AI,"2019 IEEE International Conference on Cloud Engineering (IC2E)","8 Aug 2019","2019","","","113","120","This paper proposes a cloud-based framework and platform for end-to-end development and lifecycle management of artificial intelligence (AI) applications. We build on our previous work on platform-level support for cloud-managed deep learning services, and show how the principles of software lifecycle management can be leveraged and extended to enable automation, trust, reliability, traceability, quality control, and reproducibility of AI pipelines. Based on a discussion of use cases and current challenges, we describe a framework for managingAI application lifecycles and its key components. We also show concrete examples that illustrate how this framework enables managing and executing model training and continuous learning pipelines while infusing trusted AI principles.","","978-1-7281-0218-4","10.1109/IC2E.2019.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8790192","model;pipelines;DevOps;Cloud;harden;monitor-drift","Artificial intelligence;Pipelines;Training;Data models;Cloud computing;Monitoring;Computational modeling","cloud computing;learning (artificial intelligence)","trusted AI principles;AI application lifecycles;continuous learning pipelines;AI pipelines;quality control;software lifecycle management;cloud-managed deep learning services;artificial intelligence applications;cloud-based framework;cloud-based lifecycle management","","11","","29","","8 Aug 2019","","","IEEE","IEEE Conferences"
"Microservices Deployment: A Systematic Mapping Study","V. M. Niño-Martínez; J. Octavio Ocharán-Hernández; X. Limón; J. C. Pérez-Arriaga","Universidad Veracruzana,School of Statistics and Informatics,Xalapa,Veracruz,Mexico; Universidad Veracruzana,School of Statistics and Informatics,Xalapa,Veracruz,Mexico; Universidad Veracruzana,School of Statistics and Informatics,Xalapa,Veracruz,Mexico; Universidad Veracruzana,School of Statistics and Informatics,Xalapa,Veracruz,Mexico","2021 9th International Conference in Software Engineering Research and Innovation (CONISOFT)","28 Dec 2021","2021","","","24","33","The microservices architecture is a set of small, autonomous services that can work together to form a single application that has seen widespread adoption by practitioners. However, deploying this architecture creates several technical challenges. This study examines the state of the art of microservices deployment in the literature, informing researchers and practitioners about the techniques and technologies used in the deployment of microservices and, practices used in the DevOps culture. We conducted a systematic mapping study driven by four research questions related to the deployment of microservices and DevOps practices, and 21 studies were identified from which information was synthesized using the meta-aggregation method. With the information synthesis, 43 findings were extracted and classified into seven categories. We can summarize the findings of this study as follows: (i) We identified the essential DevOps practices in the deployment of microservices. (ii) We defined the stack of technologies with the highest incidence in the studies. (iii) We found three groups of challenges in microservices deployment. (iv) Finally, we present a set of recommendations for microservices deployment.","","978-1-6654-4361-6","10.1109/CONISOFT52520.2021.00016","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9653415","Microservices;Software deployment;DevOps;Systematic Mapping Study;Meta-aggregation","Technological innovation;Systematics;Microservice architectures;Computer architecture;Data mining;Software engineering","cloud computing;software architecture;software development management;software prototyping;software quality","microservices architecture;microservices deployment;systematic mapping study","","","","38","IEEE","28 Dec 2021","","","IEEE","IEEE Conferences"
"TOSCA Solves Big Problems in the Cloud and Beyond!","P. Lipton; D. Palma; M. Rutkowski; D. A. Tamburri",CA Technologies; Vnomic; IBM; TU/e - JADS,"IEEE Cloud Computing","4 May 2018","2018","5","2","37","47","TOSCA, the “Topology and Orchestration Specification for Cloud Applications” offers an OASISrecognized, open standard domain-specific language (DSL) that enables portability and automated management of applications, services, and resources regardless of underlying cloud platform, software defined environment, or infrastructure. With a growing, interoperable ecosystem of open source projects, solutions from leading cloud platform and service providers, and research, TOSCA empowers the definition and modeling of applications and their services (microservices or traditional services) across their entire lifecycle by describing their components, relationships, dependencies, requirements, and capabilities for orchestrating software in the context of associated operational policies. The authors introduce important TOSCA concepts and benefits in the context of commonly understood cloud use cases as a foundation to future discussions regarding advanced TOSCA concepts and additional breakthrough issues.","2325-6095","","10.1109/MCC.2018.022171666","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8354712","TOSCA;cloud orchestration;cloud;application lifecycle;portability;operational policy;microservices;devops;container;container management;clustering;intent model;IoT;analytics;bigdata;cognitive","Cloud computing;Containers;Standards;Databases;Topology;Protocols","cloud computing;formal specification;open systems;software portability;specification languages","interoperable ecosystem;open source projects;cloud platform;service providers;microservices;open standard domain-specific language;software defined environment;TOSCA concepts;Topology and Orchestration Specification for Cloud Applications;portability","","11","","11","","4 May 2018","","","IEEE","IEEE Magazines"
"Automated VNF Testing with Gym: A Benchmarking Use Case","R. V. Rosa; C. E. Rothenberg","School of Electrical and Computer Engineering (FEEC), University of Campinas (UNICAMP), Brazil; School of Electrical and Computer Engineering (FEEC), University of Campinas (UNICAMP), Brazil","2018 Network Traffic Measurement and Analysis Conference (TMA)","25 Oct 2018","2018","","","1","2","In the growing landscape of Virtualized Network Function (VNF) development processes and methodologies fueled by enabling technologies for virtualization, the myriad of customization options unveil unprecedented SW/HW configuration knobs and hazards. Underlying execution environments multiplex resources imposing hard-to-predict relationships between VNF performance metrics (e.g., latency), allocated infrastructure assets (e.g., vCPU), and stimuli workloads. Gym is a framework designed to enable automated testing and to extraction of such relationships by the means of VNF performance profiles, walking through a cause-effect path towards agile DevOps methodologies for NFV. The demo showcases the implementation of Gym through exemplified live extraction of VNF metrics for analytics use cases, such as comparison factors between physical network functions and pre-deployment infrastructure dimensioning.","","978-3-903176-09-6","10.23919/TMA.2018.8506566","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8506566","","Benchmark testing;Measurement;Monitoring;Task analysis;Network function virtualization;Tools","benchmark testing;program testing;software metrics;virtualisation","Gym;benchmarking use case;Virtualized Network Function development processes;virtualization;customization options;hazards;execution environments multiplex resources;VNF performance metrics;allocated infrastructure assets;stimuli workloads;automated testing;cause-effect path;agile DevOps methodologies;automated VNF testing","","2","","5","","25 Oct 2018","","","IEEE","IEEE Conferences"
"A Platform To Enable Algorithms As Service Model Aimed at Digital Health Service Delivery","K. Bhavsar; H. Vishwakarma; B. R. Pawar; S. Shinde; S. Kimbahune; A. Ghose","TCS Research,Mumbai,India; TCS Research,Mumbai,India; TCS Research,Mumbai,India; TCS Research,Mumbai,India; TCS Research,Mumbai,India; TCS Research,Kolkata,India","2022 14th International Conference on COMmunication Systems & NETworkS (COMSNETS)","13 Jan 2022","2022","","","241","245","In this paper we provide a framework for Algorithm As a Service Model which goes beyond Machine Learning as a Service (MLAS) model, by supporting extended category of algorithms including but not limited to measurement, calibration, physics and statistics based models. These algorithms when used for screening of health care data, are termed as Software As Medical Device - SaMD. We present a platform that can act as an accelerator for clinical trials of these SaMD devices. We also go a step ahead from DevOPS model by semi-automating the algorithm deployment process. We have deployed a few algorithms into our platform and in this paper we discuss the case-studies and illustrate the advantages of our approach over conventional methods.","2155-2509","978-1-6654-2104-1","10.1109/COMSNETS53615.2022.9668453","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9668453","HealthCare;Connected Digital Health;Platform;Algorithm As Service;Cloud Computing;Software As Medical Device","Machine learning algorithms;Medical devices;Software algorithms;Collaboration;Machine learning;Clinical trials;Software","health care;learning (artificial intelligence);medical information systems","health care data;SaMD devices;DevOPS model;algorithm deployment process;algorithm as a service model;digital health service delivery;machine learning as a service model;MLAS model;software as medical device","","","","4","IEEE","13 Jan 2022","","","IEEE","IEEE Conferences"
"CIDE: An Integrated Development Environment for Microservices","D. Liu; H. Zhu; C. Xu; I. Bayley; D. Lightfoot; M. Green; P. Marshall","Sci. & Technol. on Complex Electron. Syst. Simulation Lab., Beijing, China; Dept. of Comp. & Comm. Tech., Oxford Brookes Univ., Oxford, UK; Sch. of Comput. Sci., Hubei Univ. of Technol., Wuhan, China; Dept. of Comp. & Comm. Tech., Oxford Brookes Univ., Oxford, UK; Dept. of Comp. & Comm. Tech., Oxford Brookes Univ., Oxford, UK; Dept. of Comp. & Comm. Tech., Oxford Brookes Univ., Oxford, UK; Dept. of Comp. & Comm. Tech., Oxford Brookes Univ., Oxford, UK","2016 IEEE International Conference on Services Computing (SCC)","1 Sep 2016","2016","","","808","812","Microservices is a flexible architectural style that has many advantages over the alternative monolithic style. These include better performance and scalability. It is particularly suitable, and widely adopted, for cloud-based applications, because in this architecture a software system consisting of a large suite of services of fine granularity, each running its own process and communicating with the others. However, programming such systems is more complex. In this paper we report on CIDE, an integrated software development environment that helps with this. CIDE supports programming in a novel agent-oriented language called CAOPLE and tests their execution in a cluster environment. We present the architecture of CIDE, discuss its design based on the principles of the DevOps software development methodology, and describe facilities that support continuous testing and seamless integration, two other advantages of Microservices.","","978-1-5090-2628-9","10.1109/SCC.2016.112","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7557534","Integrated Software Development Environment (IDE);Microservices;Service-Oriented Architectures;Agent-Oriented Programming;Programming Languages and Tools","Computers;Testing;Virtual machining;Computer architecture;Cloud computing;Programming","cloud computing;object-oriented languages;object-oriented programming;program testing;software agents;software architecture","CIDE;integrated development environment;microservices;architectural style;cloud-based applications;software system;Caste-centric agent-oriented programming language and environment;cluster environment;DevOps software development methodology;continuous testing;seamless integration","","12","5","19","","1 Sep 2016","","","IEEE","IEEE Conferences"
"Agile big data analytics: AnalyticsOps for data science","N. W. Grady; J. A. Payne; H. Parker","Advanced Analytics, SAIC, McLean, VA, USA; Advanced Analytics, SAIC, McLean, VA, USA; Software Integration, SAIC, McLean, VA, USA","2017 IEEE International Conference on Big Data (Big Data)","15 Jan 2018","2017","","","2331","2339","Big data analytic (BDA) systems leverage data distribution and parallel processing across a cluster of resources. This introduces a number of new challenges specifically for analytics. The analytics portion of the complete lifecycle has typically followed a waterfall process - completing one step before beginning the next. While efforts have been made to map different types of analytics to an agile methodology, the steps are often described as breaking activities into smaller tasks while the overall process is still consistent with step-by-step waterfall. BDA changes a number of the activities in the analytics lifecycle, as well as their ordering. The goal of agile analytics - to reach a point of optimality between generating value from data and the time spent getting there. This paper discusses the implications of an agile process for BDA in cleansing, transformation, and analytics.","","978-1-5386-2715-0","10.1109/BigData.2017.8258187","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8258187","advanced analytics;agile development;analytics lifecycle;AnalyticsOps;big data analytics;data science;data science process models;Deep Learning;DevOps;Knowledge Discovery in Data Science;machine learning","Software;Data science;Analytical models;Big Data;Data models;Testing;Computational modeling","Big Data;data analysis;parallel processing;software prototyping","BDA;analytics lifecycle;agile process;agile big data analytics;data science;waterfall process;agile methodology;step-by-step waterfall;AnalyticsOps;big data analytic systems;data distribution;parallel processing","","13","","24","","15 Jan 2018","","","IEEE","IEEE Conferences"
"Neural Knowledge Extraction From Cloud Service Incidents","M. Shetty; C. Bansal; S. Kumar; N. Rao; N. Nagappan; T. Zimmermann",Microsoft Research; Microsoft Research; Microsoft; Microsoft Research; Microsoft Research; Microsoft Research,"2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)","7 May 2021","2021","","","218","227","The move from boxed products to services and the widespread adoption of cloud computing has had a huge impact on the software development life cycle and DevOps processes. Particularly, incident management has become critical for developing and operating large-scale services. Prior work on incident management has heavily focused on the challenges with incident triaging and de-duplication. In this work, we address the fundamental problem of structured knowledge extraction from service incidents. We have built SoftNER, a framework for unsupervised knowledge extraction from service incidents. We frame the knowledge extraction problem as a Named-Entity Recognition task for extracting factual information. SoftNER leverages structural patterns like key value pairs and tables for bootstrapping the training data. Further, we build a novel multitask learning based BiLSTM-CRF model which leverages not just the semantic context but also the data-types for named-entity extraction. We have deployed SoftNER at Microsoft, a major cloud service provider and have evaluated it on more than 2 months of cloud incidents. We show that the unsupervised machine learning pipeline has a high precision of 0.96. Our multi-task learning based deep learning model also outperforms the state of the art NER models. Lastly, using the knowledge extracted by SoftNER we are able to build significantly more accurate models for important downstream tasks like incident triaging.","","978-1-6654-3869-8","10.1109/ICSE-SEIP52600.2021.00031","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9402085","Cloud Services;Service Incidents;Information Extraction;Knowledge Extraction;Deep Learning;Machine Learning","Cloud computing;Semantics;Training data;Software;Data mining;Task analysis;Software engineering","cloud computing;knowledge acquisition;natural language processing;unsupervised learning","unsupervised machine learning pipeline;neural knowledge extraction;boxed products;cloud computing;software development life cycle;large-scale services;unsupervised knowledge extraction;Named-Entity Recognition task;key value pairs;named-entity extraction;cloud service provider;SoftNER;multitask learning based BiLSTM-CRF model","","","","34","","7 May 2021","","","IEEE","IEEE Conferences"
"Acceptance Testing Optimization Method for Continuous Delivery","P. Hu; C. Chaowen; Y. Ma; X. Wang","Information Engineering University,Zhengzhou,China,450001; Information Engineering University,Zhengzhou,China,450001; Information Engineering University,Zhengzhou,China,450001; Jiaxing University,Jiaxing,China,314001","2021 2nd International Conference on Electronics, Communications and Information Technology (CECIT)","1 Apr 2022","2021","","","168","173","From agile to DevOps, development methods have been extended from continuous integration to continuous delivery. In the acceptance testing before software delivery, the constantly changing software configuration, real user environment, and user-led testing, all of these extend the delivery time and increase the risk of testing. How to further optimize the test and shorten the delivery cycle are problem that must be considered to realize the end-to-end value flow in DevOps. In the testing optimization research, the methods are mainly for regression testing. There are few researches on acceptance testing, and the methods for the acceptance testing mainly focus on specific scenario, that almost none research consider how to shorten the continuous delivery cycle. Aiming at the characteristics of acceptance testing, this paper proposes an acceptance testing optimization method for continuous delivery. For different levels of test cases, test case selection and prioritization are used to optimize test cases. Firstly, the test suite related to requirements is constructed, and the test cases are selected according to the requirements. Then, the test suites are divided into two levels to prioritize. During the test execution, the use case execution actions are streamlined to shorten execution time of the acceptance testing, meet user needs as soon as possible and achieve rapid value delivery. Finally, the method is applied to actual industrial projects for experiments. The results show that the method can reduce the scale of test cases, shorten the test execution times and improve the efficiency of demand satisfaction.","","978-1-6654-3757-8","10.1109/CECIT53797.2021.00037","Natural Science Foundation of Zhejiang Province(grant numbers:LQ22F020004); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9741963","testing optimization;acceptance testing;test case selection;test case prioritization","Diversity reception;Optimization methods;Software;Information and communication technology;Testing","","","","","","18","","1 Apr 2022","","","IEEE","IEEE Conferences"
"Coherent Application Delivery on Hybrid Distributed Computing Infrastructures of Virtual Machines and Docker Containers","G. Moltó; M. Caballer; A. Pérez; C. De Alfonso; I. Blanquer","Inst. de Instrumentacion para Imagen Mol., Univ. Politec. de Valencia, Valencia, Spain; Inst. de Instrumentacion para Imagen Mol., Univ. Politec. de Valencia, Valencia, Spain; Inst. de Instrumentacion para Imagen Mol., Univ. Politec. de Valencia, Valencia, Spain; Inst. de Instrumentacion para Imagen Mol., Univ. Politec. de Valencia, Valencia, Spain; Inst. de Instrumentacion para Imagen Mol., Univ. Politec. de Valencia, Valencia, Spain","2017 25th Euromicro International Conference on Parallel, Distributed and Network-based Processing (PDP)","27 Apr 2017","2017","","","486","490","There is an opportunity for Distributed Computing Infrastructures (DCIs) to embrace container-based virtualisation to support efficient execution of scientific applications without the performance penalty commonly introduced by Virtual Machines (VMs). However, containers (e.g. Docker) and VMs feature different image formats and disparate procedures for deployment and management, thus hindering the adoption of hybrid DCIs (HDCIs) comprised of those kind of resources. This paper describes a workflow based on open-source tools and standards to introduce coherent application delivery on HDCIs in which applications require to be deployed on both VMs and Docker containers. Leveraging and extending the TOSCA standard to describe application requirements, and adopting DevOps practices, resulted in the coherent creation of the artifacts required for the execution of the applications on different platforms. The paper features the adoption of this approach in the INDIGO-DataCloud project.","2377-5750","978-1-5090-6058-0","10.1109/PDP.2017.29","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7912692","Cloud Computing;Distributed Infrastructures;Containers;Docker;Scientific Computing","Containers;Cloud computing;Virtual machining;Open source software;Computer architecture;Standards","cloud computing;scientific information systems;virtual machines;virtualisation","coherent application delivery;hybrid distributed computing infrastructures;virtual machines;Docker containers;container-based virtualisation;VM;image formats;HDCI;open-source tools;TOSCA standard;DevOps practices;INDIGO-DataCloud project;scientific computing","","6","1","15","","27 Apr 2017","","","IEEE","IEEE Conferences"
"Continuous system and user documentation integration","T. Waits; J. Yankel","Carnegie Mellon University, Software Engineering Institute CERT Division; Carnegie Mellon University, Software Engineering Institute","2014 IEEE International Professional Communication Conference (IPCC)","26 Jan 2015","2014","","","1","5","Formal user and system documentation is often completely ignored by development teams. This is a direct result of the pain standard documentation tools and processes cause to technical teams. Traditional documentation models hamper the velocity of development. User and/or system documentation is often created and maintained using clunky binary files (i.e. *.docx). Generally, collaboration systems include passing updated versions through long email chains, or network file shares. Additionally, proprietary formats tend to suffer from inconsistencies across operating systems, which can lead to data corruption across teams with disparate work environments. Storing binary files in version control systems is a solution to some of these problems, but versioning binary files is still challenging. Automating and integrating this into a software development life cycle is problematic at best, often resulting in documents languishing behind the pace of a project, or being deprecated entirely. In our organization, we developed a new process to rapidly produce PDFs, HTML, and Word-based documentation from multiple authors and integrated it with our existing automated build system. The process is tool/environment independent and takes full advantage of a version control system. This has increased our efficiency, communication and collaboration in an oft-overlooked area in the software development process.","2158-1002","978-1-4799-3749-3","10.1109/IPCC.2014.7020385","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7020385","Documentation;integrated build process;software development;devops practices;document management","Documentation;Syntactics;HTML;Software;Software engineering;Portable document format;Collaboration","configuration management;software engineering;storage management","continuous system;user documentation integration;system documentation;pain standard documentation tools;binary file storage;operating systems;version control systems;software development life cycle","","3","","12","","26 Jan 2015","","","IEEE","IEEE Conferences"
"SONATA: Service programming and orchestration for virtualized software networks","S. Dräxler; H. Karl; M. Peuster; H. R. Kouchaksaraei; M. Bredel; J. Lessmann; T. Soenen; W. Tavernier; S. Mendel-Brin; G. Xilouris","Paderborn University, Germany; Paderborn University, Germany; Paderborn University, Germany; Paderborn University, Germany; NEC, Germany; NEC, Germany; UGent - iMinds, Belgium; UGent - iMinds, Belgium; NOKIA, Israel; NCSRD, Greece","2017 IEEE International Conference on Communications Workshops (ICC Workshops)","3 Jul 2017","2017","","","973","978","In conventional large-scale networks, creation and management of network services are costly and complex tasks that often consume a lot of resources, including time and manpower. Network softwarization and network function virtualization have been introduced to tackle these problems, aiming at decreasing costs and complexity of implementing new services, maintaining the implemented services, and managing available resources in service provisioning platforms and underlying infrastructures. To experience the full potential of these approaches, innovative development support tools and service provisioning environments are needed. To answer these needs, we introduce the architecture of the open-source SONATA system, a service programming, orchestration, and management framework. We present a development toolchain for virtualized network services, fully integrated with a service platform and orchestration system. We introduce the modular and flexible architecture of our system and discuss its main components and features, such as function- and service-specific managers that allow fine-grained service management, slicing support to facilitate multi-tenancy, recursiveness for improved scalability, and full-featured DevOps support.","2474-9133","978-1-5090-1525-2","10.1109/ICCW.2017.7962785","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7962785","","Tools;Monitoring;Computer architecture;Programming;Software;Debugging;Measurement","virtualisation","service programming and orchestration;virtualized software networks;network softwarization;network function virtualization;service provisioning environments;open-source SONATA system;service programming;management framework;fine-grained service management;full-featured DevOps support","","33","","24","","3 Jul 2017","","","IEEE","IEEE Conferences"
"The Next Generation Platform as a Service Cloudifying Service Deployments in Telco-Operators Infrastructure","A. Mimidis; E. Ollora; J. Soler; S. Bessem; L. Roullet; S. Van Rossem; S. Pinneterre; M. Paolino; D. Raho; X. Du; J. Chesterfield; M. Flouris; L. Mariani; O. Riganelli; M. Mobilio; A. Ramos; I. Labrador; A. Broadbent; P. Veitch; M. Zembra","DTU Fotonik, Lyngby, Denmark; DTU Fotonik, Lyngby, Denmark; DTU Fotonik, Lyngby, Denmark; Nokia-Bell Labs, Paris, France; Nokia-Bell Labs, Paris, France; Ghent University - imec, Ghent, Belgium; Virtual Open Systems, Grenoble, France; Virtual Open Systems, Grenoble, France; Virtual Open Systems, Grenoble, France; OnApp, London, United Kingdom; OnApp, London, United Kingdom; OnApp, London, United Kingdom; University of Milano-Bicocca, Milano, Italy; University of Milano-Bicocca, Milano, Italy; University of Milano-Bicocca, Milano, Italy; ATOS, Madrid, Spain; ATOS, Madrid, Spain; British Telecom, London, UnitedKingdom; British Telecom, London, UnitedKingdom; Vertical M2M, París, France","2018 25th International Conference on Telecommunications (ICT)","16 Sep 2018","2018","","","399","404","5G standard emerges at a particular time in technology history when cloud transforms deeply almost all industries and services: it becomes obvious that innovations have to be made cloud-native for being successful. 5G must become the ubiquitous fabric blending universal connectivity (to humans, robots, sensors...) with cloud versatility and scalability. For realizing this vision, another model than laaS must be adopted, the Platform as a Service (PaaS), which should be built to support telco-grade requirements and combine all sort of third-party applications. These are the core objectives of the Next Generation Platform as a Service (NGPaaS) project, a H2020 5G PPP Phase 2 project. The paper presents the project fundamentals, its architectural proposal and most relevant features.","","978-1-5386-2321-3","10.1109/ICT.2018.8464838","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8464838","telco;microservices;5G;PaaS;DevOps;Dev-for-Operations;SDN;NFV;FPGA;vSwitch;ioT;cloud native","5G mobile communication;Monitoring;Field programmable gate arrays;Business;Virtualization;Platform as a service","5G mobile communication;cloud computing;next generation networks;telecommunication computing;Web services","telco-operators infrastructure;universal connectivity;cloud versatility;telco-grade requirements;Next Generation Platform;H2020 5G PPP Phase 2 project;Service deployments;Next Generation Platform as a Service;5G standard;laaS;Platform as a Service;NGPaaS project","","7","","31","","16 Sep 2018","","","IEEE","IEEE Conferences"
"Evaluating a Test Automation Decision Support Tool","K. Baral; R. Mohod; J. Flamm; S. Goldrich; P. Ammann",George Mason University; George Mason University; The MITRE Corporation; The MITRE Corporation; George Mason University,"2019 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","6 Jun 2019","2019","","","69","76","Goldrich and Flamm developed the MITRE Automated Test Decision Framework (ATDF) to help MITRE government sponsors (and, via sharing on GitHub, development organizations in general) move from manually tested legacy software towards automated test, continuous integration, continuous deployment, and, ultimately, DevOps. Often such legacy systems comprise multiple components with manual test procedures. The objective of the empirical study described in this paper is to determine whether ATDF usefully ranks components with respect to Return on Investment (ROI) when introducing automated tests. ROI is simply the ratio of profit to cost. When adding automated tests, what will be the profit that these tests will carry? What is the cost or level of effort to engineer a sufficient set of automated tests? Our evaluation approach models ROI using static defect counts identified by SonarLint and estimated cost to complete testing. We found positive Pearson correlations between normalized ATDF rankings versus the normalized rankings of our evaluation approach. We reject the null hypothesis that there is no correlation between the two rankings.","","978-1-7281-0888-9","10.1109/ICSTW.2019.00034","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8728916","test automation;legacy systems;software components","Software;Automation;Tools;History;Correlation;Software measurement","decision support systems;investment;program testing;software maintenance","manually tested legacy software;manual test procedures;complete testing;ROI;return on investment;ATDF;DevOps;test automation decision support tool;MITRE automated test decision framework","","2","","26","","6 Jun 2019","","","IEEE","IEEE Conferences"
"Embedding security and privacy into the development and operation of cloud applications and services","Tran Quang Thanh; S. Covaci; T. Magedanz; P. Gouvas; A. Zafeiropoulos","Technical University Berlin and Fraunhofer FOKUS, Germany; Technical University Berlin and Fraunhofer FOKUS, Germany; Technical University Berlin and Fraunhofer FOKUS, Germany; Ubitech Ltd., Athens, Greece; Ubitech Ltd., Athens, Greece","2016 17th International Telecommunications Network Strategy and Planning Symposium (Networks)","24 Nov 2016","2016","","","31","36","This paper introduces an approach allowing cloud application developers, service providers to consider security and privacy requirements across the application lifecycle. Specifically, a DevOps framework has been described that took into account several emerging technologies such as Network Functions Virtualization (NFV) and Microservice Pattern Design. As an illustration, a proof-of-concept application in the healthcare domain is presented to support such direction.","","978-1-4673-8991-4","10.1109/NETWKS.2016.7751149","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7751149","Cloud Computing;Microservice;NFV;Security","Security;Cloud computing;Computer architecture;Privacy;Measurement;Context","cloud computing;data privacy;security of data","cloud application developers;DevOps framework;privacy requirements;security requirements","","3","","30","","24 Nov 2016","","","IEEE","IEEE Conferences"
"Migrating Live Streaming Applications onto Clouds: Challenges and a CloudStorm Solution","H. Zhou; S. Koulouzis; Y. Hu; J. Wang; C. de Laat; A. Ulisses; Z. Zhao","Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; MOG Technol. SA, Portugal; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands","2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion)","10 Jan 2019","2018","","","321","326","Live TV production, due to its distributed nature, requires broadcasters to deploy equipments and human resources to several different places. This increases production costs. The traditional method through outside broadcasting vans is expensive. Migrating this type of application onto clouds is a promising method to reduce the cost. However, the Quality of Experience (QoE) can hardly be assured because of the cloud performance uncertainty. Auto-scaling the infrastructure based on dynamic workloads at runtime is also difficult. The feasibility of CloudsStorm framework, which is the core component of SWITCH (Software Workbench for Interactive, Time Critical and Highly self-adaptive Cloud applications) workbench, handling the lifecycle of the time critical application development and performance monitoring, infrastructure planning and provisioning, etc., is demonstrated with the aspect of live events broadcasting. It makes a significant attempt to fill the DevOps gap when migrating applications from legacy systems onto clouds. A live streaming application is demonstrated as a use case example.","","978-1-7281-0359-4","10.1109/UCC-Companion.2018.00075","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8605799","Cloud, DevOps, broadcasting, live streaming, time-critical applications","Cloud computing;Conferences;Engines;Runtime;Graphical user interfaces","cloud computing;digital multimedia broadcasting;media streaming;quality of experience;software maintenance","cloud performance uncertainty;live streaming migration;quality of experience;QoE;SWITCH;live TV production;CloudStorm solution;live events broadcasting","","","","20","","10 Jan 2019","","","IEEE","IEEE Conferences"
"Meeting the observability challenges for VNFs in 5G systems","W. John; F. Moradi; B. Pechenot; P. Sköldström","Ericsson Research, Stockholm, Sweden; Ericsson Research, Stockholm, Sweden; Acreo Swedish ICT, Stockholm, Sweden; Acreo Swedish ICT, Stockholm, Sweden","2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM)","24 Jul 2017","2017","","","1127","1130","5G mobile communication systems will need to accommodate a variety of use-cases, resulting in a diverse set of requirements. To meet these requirements, 5G systems take advantage of modern virtualization possibilities offered by Network Function Virtualization (NFV), enabling deployment agility and dynamicity of virtualized network functions. With the transformation of telecom towards virtualized environments, advanced observability possibilities gain increasing importance as one of the essential prerequisites, especially for successful DevOps operations. However, deployment agility also puts specific requirements on monitoring solutions in order to adapt automatically and continuously to frequent changes in service deployments. In this short-paper, we establish and discuss essential properties of observability systems for virtual network functions in a 5G context. We take these properties as guiding design principles for our software-defined monitoring framework and outline how to evolve our existing components towards a flexible, scalable, and programmable observability solution for microservice-based NFV with features for increased manageability.","","978-3-901882-89-0","10.23919/INM.2017.7987445","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7987445","","Monitoring;Containers;Observability;5G mobile communication;Measurement;Virtualization;Tools","5G mobile communication;software defined networking;virtualisation","5G mobile communication system;microservice-based NFV;network function virtualization;VNF;virtualized network function;DevOps operations;observability system;software-defined monitoring framework","","3","2","11","","24 Jul 2017","","","IEEE","IEEE Conferences"
"Moderate Detection and Removal of Omnipresent Modules in Software Clustering","K. Yano; A. Matsuo","Fujitsu Laboratories,Development Innovation Project,Kawasaki,Japan; Unit Fujitsu Laboratories,DevOps Innovation,Kawasaki,Japan","2020 IEEE International Conference on Software Maintenance and Evolution (ICSME)","2 Nov 2020","2020","","","662","666","Software clustering is important in program comprehension, and it is applied to architecture recovery and software visualization to analyze the actual software system structure. The detection of omnipresent modules, programs used by many parts of the system such as utility classes, is a well-known issue in software clustering. Omnipresent modules obscure the system structure. The detection and removal of omnipresent modules have been studied for years. However, traditional approaches based on the number of the caller classes remove too many classes, including important domain model classes. In this study, we introduce a method to detect omnipresent modules by calculating a metric called usage equality; it represents the equality in the usage of a class by its caller classes based on the dedication score, which is a weight calculated for inter-class dependency defined in the literature. The developed method was evaluated and compared with traditional methods using real examples. The results show that our method identified omnipresent modules more moderately than the traditional methods to avoid the essential domain classes.","2576-3148","978-1-7281-5619-4","10.1109/ICSME46990.2020.00068","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9240672","software clustering;omnipresent module;software visualization","Measurement;Visualization;Software maintenance;Conferences;Software systems;Software;Task analysis","object-oriented programming;pattern clustering;software architecture;software maintenance","domain model classes;omnipresent module detection;omnipresent module removal;software system structure;software clustering","","","","17","","2 Nov 2020","","","IEEE","IEEE Conferences"
"Smart Grid Communication Protocol Test Automation along with Protection Test Automation","S. M. Naik; M. Fernandes; G. Pushpakumar; R. Pathak","Goa College of Engineering, Farmagudi, Ponda, Goa, 403401, India; Goa College of Engineering, Farmagudi, Ponda, Goa, 403401, India; Energy Automation, Siemens Ltd., Verna, Goa, 403711; Goa College of Engineering, Farmagudi, Ponda, Goa, 403401, India","2019 3rd International Conference on Trends in Electronics and Informatics (ICOEI)","11 Oct 2019","2019","","","1313","1317","With rapid evolution and adoption of new technology and developments, Automation plays an important role in order to keep up with a competitive market and to meet customer demands. The primary advantage of Automation is, it speeds up the testing process with more accuracy, less human error and parallel testing of different scenario is possible. `Automate everything' is the key principle of DevOps. The concept relies on effective tooling to help the team rapidly and reliably deploy and innovate the customers. DevOps is basically a three-step process i.e. Build, Test and Release the product to customer as fast as possible. The prime objective is to make use of DevOps concepts to automate the Protection Testing operation by integrating it with the Communication operation. The project aims to get real time information from field by making use of Communication protocol like Modbus, IEC60870-5-103 and DNP3 during the operation of protection function in power system. The test automation system should be able to collect the different data and generate the report as per the requirement.","","978-1-5386-9439-8","10.1109/ICOEI.2019.8862793","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8862793","Automation;SCADA;Modbus;IEC60870-5-103;DNP3;OCC(Omicron Control Centre)","Relays;Testing;Protocols;Circuit faults;IEC Standards;Automation","power engineering computing;power system protection;protocols;SCADA systems;smart power grids","DevOps concepts;parallel testing;power system;DNP3;IEC60870-5-103;Modbus;communication protocol;protection test automation;smart grid communication protocol test automation","","3","","12","","11 Oct 2019","","","IEEE","IEEE Conferences"
"A Vision for the Next Generation Platform-as-a-Service","S. Van Rossem; B. Sayadi; L. Roullet; A. Mimidis; M. Paolino; P. Veitch; B. Berde; I. Labrador; A. Ramos; W. Tavernier; E. Ollora; J. Soler",Ghent University-imec; Nokia Bell-Labs France; Nokia Bell-Labs France; DTU Fotonik; Virtual Open Systems; BT; Nokia Bell-Labs France; ATOS; ATOS; Ghent University-imec; DTU Fotonik; DTU Fotonik,"2018 IEEE 5G World Forum (5GWF)","1 Nov 2018","2018","","","14","19","In an increasingly interconnected world, new opportunities for telecom-based services are emerging. Innovative applications profit from cloud versatility and scalability, but require a platform to combine the optimized 5G network fabric with the advancements in the domain of cloud computing, Software Defined Networking (SDN) and Network Function Virtualization (NFV). In this multi-domain context, we find that available service platforms are lagging, because they tend to be tightly coupled to a constrained set of technologies. In practice, we need the flexibility to deploy different microservices over a heterogeneous range of infrastructure types, aggregating various virtualization, orchestration and control mechanisms. Moreover, the integration of the service requires collaboration among a wide mix of actors (e.g. developers, operators, hardware/software vendors, infrastructure/service providers or vertical integrators). We propose a next-generation Platform-as-a-Service (NGPaaS), devised as a modular framework for the development and operation of network services, while targeting a high degree of both customization and automation. The presented architecture is built around a workflow-based orchestrator which coordinates custom-built tasks across a tailored group of specialized infrastructure or platforms. We also explain how NGPaaS enhances DevOps-principles, to achieve a more efficient integration process across the many isolated administrative domains in the modern telco landscape.","","978-1-5386-4982-4","10.1109/5GWF.2018.8516972","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8516972","NFV;SDN;5G;PaaS Architecture;DevOps;Dev-for-Operations","Cloud computing;5G mobile communication;Virtualization;Computer architecture;Containers;Field programmable gate arrays;Next generation networking","cloud computing;service-oriented architecture;software defined networking;virtualisation;Web services","telecom-based services;cloud versatility;optimized 5G network fabric;cloud computing;Software Defined Networking;Network Function Virtualization;multidomain context;available service platforms;heterogeneous range;control mechanisms;hardware/software vendors;infrastructure/service providers;vertical integrators;next-generation Platform-as-a-Service;NGPaaS;network services;workflow-based orchestrator;custom-built tasks;specialized infrastructure;efficient integration process;isolated administrative domains;microservices","","6","","18","","1 Nov 2018","","","IEEE","IEEE Conferences"
"Optimizing Quality-Aware Big Data Applications in the Cloud","E. Gianniti; M. Ciavotta; D. Ardagna","Politecnico di Milano, Milan, Italy; Università di Milano-Bicocca, Milan, Italy; Politecnico di Milano, Milan, Italy","IEEE Transactions on Cloud Computing","4 Jun 2021","2021","9","2","737","752","The last years witnessed a steep rise in data generation worldwide and, consequently, the widespread adoption of software solutions able to support data-intensive application. Competitiveness and innovation have strongly benefited from these new platforms and methodologies, and there is a great deal of interest around the new possibilities that Big Data analytics promise to make reality. Many companies currently engage in data-intensive processes as part of their core businesses; however, fully embracing the data-driven paradigm is still cumbersome, and establishing a production-ready, fine-tuned deployment is time-consuming, expensive, and resource-intensive. This situation calls for innovative models and techniques to streamline the process of deployment configuration for Big Data applications. In particular, the focus in this paper is on the rightsizing of Cloud deployed clusters, which represent a cost-effective alternative to installation on premises. This paper proposes a novel tool, integrated in a wider DevOps-inspired approach, implementing a parallel and distributed simulation-optimization technique that efficiently and effectively explores the space of alternative Cloud configurations, seeking the minimum cost deployment that satisfies quality of service constraints. The soundness of the proposed solution has been thoroughly validated in a vast experimental campaign encompassing different applications and Big Data platforms.","2168-7161","","10.1109/TCC.2018.2874944","European Commission(grant numbers:644869); Microsoft; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8486649","Nonlinear programming;performance of systems;distributed systems","Cloud computing;Big Data;Tools;Optimization;Unified modeling language;Biological system modeling;Data models","Big Data;cloud computing;data analysis;optimisation","innovative models;deployment configuration;Big Data applications;wider DevOps-inspired approach;parallel distributed simulation-optimization technique;alternative Cloud configurations;minimum cost deployment;Big Data platforms;optimizing quality-aware;steep rise;data generation worldwide;software solutions;data-intensive application;innovation;Big Data analytics;data-intensive processes;core businesses;data-driven paradigm;production-ready;fine-tuned deployment;resource-intensive","","2","","56","IEEE","9 Oct 2018","","","IEEE","IEEE Journals"
"Efficient Software Defined Systems Using Common Core Components","H. Lee; G. C. Fox","Sch. of Inf. & Comput., Indiana Univ., Bloomington, IN, USA; Sch. of Inf. & Comput., Indiana Univ., Bloomington, IN, USA","2017 IEEE 10th International Conference on Cloud Computing (CLOUD)","11 Sep 2017","2017","","","407","414","With advent of Docker containers, an application deployment using container images gains popularity over scientific communities and major cloud providers to ease building reproducible environments. While a single base image can be imported multiple times from different containers to reduce storage consumption by a sharing technique, copy-on-write, duplicates of package dependencies are often observed over containers. In this paper, we propose new approaches to the container image management for eliminating duplicated dependencies. We create Common Core Components (3C) to share package dependencies by version control system commands, submodules and merge. 3C with submodules provides a collection of required libraries and tools in a separate branch, while keeping their base image same. 3C with merge offers a new base image including domain specific components thereby reducing duplicates in similar base images. Container images built with 3C enable efficient and compact software defined systems and disclose security information for tracking Common Vulnerability and Exposure (CVE). As a result, building application environments with 3C-enabled container images consumes less storage compared to existing Docker images. Dependency information for vulnerability is provided in detail for further developments.","2159-6190","978-1-5386-1993-3","10.1109/CLOUD.2017.59","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8030615","Software Defined Systems;Common Core Components;Containers;DevOps;Dependencies","Containers;Libraries;Tools;Buildings;Software packages;Big Data","cloud computing;information storage;public domain software;security of data;software packages","Common Core Components;Docker containers;cloud providers;single base image;sharing technique;package dependencies;container image management;version control system commands;compact software defined systems;application environments;3C-enabled container images;dependency information;copy-on-write;software defined systems;Common Vulnerability and Exposure tracking;CVE tracking;Docker images;security information","","","1","23","","11 Sep 2017","","","IEEE","IEEE Conferences"
"Process-Oriented Non-intrusive Recovery for Sporadic Operations on Cloud","M. Fu; L. Zhu; I. Weber; L. Bass; A. Liu; X. Xu","NICTA, Sydney, NSW, Australia; NICTA, Sydney, NSW, Australia; NICTA, Sydney, NSW, Australia; NICTA, Sydney, NSW, Australia; NICTA, Sydney, NSW, Australia; NICTA, Sydney, NSW, Australia","2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)","3 Oct 2016","2016","","","85","96","Cloud-based systems get changed more frequently than traditional systems. These frequent changes involve sporadic operations such as installation and upgrade. Sporadic operations may fail due to the uncertainty of cloud platforms. Each sporadic operation manipulates a number of cloud resources. The accessibility of resources manipulated makes it possible to build an accurate process model of the correct behavior for an operation and its desired effects. This paper proposes a non-intrusive recovery approach for sporadic operations on cloud, called POD-Recovery. POD-Recovery utilizes the above-mentioned process model of the operation. When needed, it triggers recovery actions based on the model through non-intrusive means, i.e., without modifying the code which implements the sporadic operation. POD-Recovery employs an efficient artificial intelligence (AI) planning technique for generating recovery plans. We implement POD-Recovery and evaluate it by recovering from faults injected into 920 runs of five representative sporadic operations.","2158-3927","978-1-4673-8891-7","10.1109/DSN.2016.17","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7579732","Software Reliability;Cloud;Non-Intrusive Recovery;Log Analysis;DevOps","Cloud computing;Runtime;Artificial intelligence;Monitoring;Virtual machining;Training;Australia","cloud computing;planning (artificial intelligence);resource allocation;software fault tolerance;system recovery","process-oriented nonintrusive recovery;sporadic operation;cloud-based system;resource manipulation;process model;POD-Recovery;artificial intelligence;AI planning technique;fault injection","","1","1","37","","3 Oct 2016","","","IEEE","IEEE Conferences"
"Adopting Continuous Integeration and Continuous Delivery for Small Teams","M. K. A. Abbass; R. I. E. Osman; A. M. H. Mohammed; M. W. A. Alshaikh","Sudan University of Science and Technology,College of Computer Science and Information Technology,Khartoum,Sudan; Sudan University of Science and Technology,College of Computer Science and Information Technology,Khartoum,Sudan; Sudan University of Science and Technology,College of Computer Science and Information Technology,Khartoum,Sudan; Sudan University of Science and Technology,College of Computer Science and Information Technology,Khartoum,Sudan","2019 International Conference on Computer, Control, Electrical, and Electronics Engineering (ICCCEEE)","20 Apr 2020","2019","","","1","4","Continuous Integration is the practice of merging small code changes frequently rather than merging large number changes at the end of a development cycle. In addition, after each integration, the system should be re-built and re-tested to ensure that the system is still working after each change, and it's safe to build on top of it. Continuous delivery is software practice in which the software can be deployed to the market at any given time. Developing continuous integration and continuous delivery platform will solve a lot of problems in old agile methods such as increases time to find and fix bugs as testing process late, deploying software that has not been fully tested and shared testing resources which cases delivery delays, when multiple projects are ready for testing one project get tested and others are queued waiting for the testing resource to be released. Also continuous delivery guides development organization to build valuable software and to increase the number of releases. With all this benefits there are some problem obstructing companies from moving to the new platform, some of them are human factors such as human resistant to changes and other are technical such as moving to new platform require learning new tools and training. To help overcome these problems we need to develop simple platform which is more usable and easy to learn. Also some problems happen when applying CI/CD some of them related to testing and others related to integration. Testing problem are: ambiguous test result which is test results that doesn't guided the developers to finds bugs, which increases time to find and fix it; time consuming tests which require developers to waiting large amount of time for testing reports after each small changes, this waiting cause the developers to practice large commit (merging large number of changes) which slows the integration process. Slow integration mean large number of conflict lines, now instead of doing productive process developers wasting time to solve this conflicts. To overcome these problem we introduce a new way to configuring tests. As you see solving time consumes test will solve integrations problems. To reduce testing time we need to organize the test in such way that tests are more appointed and targeted to changed code only. This method enforces a concept called micro-pipeline. A micro-pipeline is group of testing blocks, each block is responsible for specific type of test for specific unit of code, connected together in such a way that passing the block tests triggers the next test block in series. When integration happen the developer specify test block which is responsible for testing made changes only. The idea behind micro-pipeline is to test affected part only.","","978-1-7281-1006-6","10.1109/ICCCEEE46830.2019.9070849","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9070849","DevOps;Continuous Integration;Continuous Delivery","Testing;Software;Companies;Computer bugs;Reliability;Computer science;Information technology","program testing;resource allocation;software maintenance;software prototyping","code changes;software development cycle;continuous delivery platform;shared testing resources;block tests;continuous integration platform;micropipeline concept","","1","","8","","20 Apr 2020","","","IEEE","IEEE Conferences"
"Microservices in Industry: Insights into Technologies, Characteristics, and Software Quality","J. Bogner; J. Fritzsch; S. Wagner; A. Zimmermann","University of Stuttgart, Germany; University of Stuttgart, Germany; University of Stuttgart, Germany; University of Applied Sciences, Reutlingen, Germany","2019 IEEE International Conference on Software Architecture Companion (ICSA-C)","13 May 2019","2019","","","187","195","Microservices are a topic driven mainly by practitioners and academia is only starting to investigate them. Hence, there is no clear picture of the usage of Microservices in practice. In this paper, we contribute a qualitative study with insights into industry adoption and implementation of Microservices. Contrary to existing quantitative studies, we conducted interviews to gain a more in-depth understanding of the current state of practice. During 17 interviews with software professionals from 10 companies, we analyzed 14 service-based systems. The interviews focused on applied technologies, Microservices characteristics, and the perceived influence on software quality. We found that companies generally rely on well-established technologies for service implementation, communication, and deployment. Most systems, however, did not exhibit a high degree of technological diversity as commonly expected with Microservices. Decentralization and product character were different for systems built for external customers. Applied DevOps practices and automation were still on a mediocre level and only very few companies strictly followed the you build it, you run it principle. The impact of Microservices on software quality was mainly rated as positive. While maintainability received the most positive mentions, some major issues were associated with security. We present a description of each case and summarize the most important findings of companies across different domains and sizes. Researchers may build upon our findings and take them into account when designing industry-focused methods.","","978-1-7281-1876-5","10.1109/ICSA-C.2019.00041","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8712375","Microservices;industry;interviews;service technology;software quality","Java;Interviews;Companies;Cloud computing;Industries;Software quality","service-oriented architecture;software development management;software maintenance;software quality","software quality;software professionals;service-based systems;microservices;DevOps practices;maintainability;service-oriented computing;service-oriented architecture","","16","","16","","13 May 2019","","","IEEE","IEEE Conferences"
"Enhancing security of Docker using Linux hardening techniques","Amith Raj MP; A. Kumar; S. J. Pai; A. Gopal","Information Science and Engineering, Dayananda Sagar College of Engineering, Bengaluru, India; Information Science and Engineering, Dayananda Sagar College of Engineering, Bengaluru, India; Computer Science and Engineering, Dayananda Sagar College of Engineering, Bengaluru, India; Information Science and Engineering, Dayananda Sagar College of Engineering, Bengaluru, India","2016 2nd International Conference on Applied and Theoretical Computing and Communication Technology (iCATccT)","27 Apr 2017","2016","","","94","99","Docker which is a lightweight containerization tool has enabled DevOps to build and run applications in distributed environment effectively. Docker has generated a significant momentum by bringing together a standardized containing method which is easy to use by enabling the users to use Linux containers to its full capacity. Docker currently supports the Linux hardening capabilities and Linux Security Modules (LSM) with AppArmor and SELinux for host system hardening. Docker interacts with the kernel security systems and LSMs. In this research work, the security depth of a popular open source model based on containers and study on other security features and techniques to enhance the security of Docker is performed. Integrating virtualization, automated testing, Deployment tools and security configurations management will enhance the security capability of Docker on premise.","","978-1-5090-2399-8","10.1109/ICATCCT.2016.7911971","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7911971","Docker;LSM;Selinux;Apparmor;Security","Containers;Security;Linux;Kernel;File systems;Virtual machining;Virtualization","distributed processing;Linux;operating system kernels;security of data;software tools;virtualisation","Docker security enhancement;Linux hardening techniques;lightweight containerization tool;DevOps;distributed environment;standardized containing method;Linux containers;Linux security modules;LSM;AppArmor;SELinux;host system hardening;kernel security systems;virtualization;automated testing;security configurations management;deployment tools","","4","1","31","","27 Apr 2017","","","IEEE","IEEE Conferences"
"Continuous Security Testing: A Case Study on Integrating Dynamic Security Testing Tools in CI/CD Pipelines","T. Rangnau; R. v. Buijtenen; F. Fransen; F. Turkmen",University of Groningen; University of Groningen; TNO; University of Groningen,"2020 IEEE 24th International Enterprise Distributed Object Computing Conference (EDOC)","23 Oct 2020","2020","","","145","154","Continuous Integration (CI) and Continuous Delivery (CD) have become a well-known practice in DevOps to ensure fast delivery of new features. This is achieved by automatically testing and releasing new software versions, e.g. multiple times per day. However, classical security management techniques cannot keep up with this quick Software Development Life Cycle (SDLC). Nonetheless, guaranteeing high security quality of software systems has become increasingly important. The new trend of DevSecOps aims to integrate security techniques into existing DevOps practices. Especially, the automation of security testing is an important area of research in this trend. Although plenty of literature discusses security testing and CI/CD practices, only a few deal with both topics together. Additionally, most of the existing works cover only static code analysis and neglect dynamic testing methods. In this paper, we present an approach to integrate three automated dynamic testing techniques into a CI/CD pipeline and provide an empirical analysis of the introduced overhead. We then go on to identify unique research/technology challenges the DevSecOps communities will face and propose preliminary solutions to these challenges. Our findings will enable informed decisions when employing DevSecOps practices in agile enterprise applications engineering processes and enterprise security.","2325-6362","978-1-7281-6473-1","10.1109/EDOC49727.2020.00026","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9233212","DevSecOps;Dynamic Security Web Testing;Continuous Security;Continuous Integration","Security;Testing;Pipelines;Synthetic aperture sonar;Automation;Application security;Tools","program testing;security of data;software development management;software quality","software development life cycle;continuous security testing;dynamic security testing tools;CI;CD;DevOps practices;continuous integration;continuous delivery","","3","","23","","23 Oct 2020","","","IEEE","IEEE Conferences"
"An Empirical Study on Culture, Automation, Measurement, and Sharing of DevSecOps","N. Tomas; J. Li; H. Huang","Norwegian University of Science and Technology, Trondheim, Norway; Norwegian University of Science and Technology, Trondheim, Norway; Software Institute and Department of Computer Science, Nanjing University, Nanjing, China","2019 International Conference on Cyber Security and Protection of Digital Services (Cyber Security)","31 Oct 2019","2019","","","1","8","Programmers are central agents in creating secure applications. However, software engineering and software security have historically worked in separate silos. DevSecOps is the practice of breaking down silos between development, operations, and quality assurance of security. To understand the state of art and challenges of DevSecOps, we interviewed six developers about their DevSecOps practices. We asked interview subjects about their security practices rooted in the four pillars of DevOps, namely culture, automation, sharing, and measurement. Results were analyzed by using qualitative methods. The results of the study show that it is necessary first to create a security culture. Several interviewees identified the importance of caring about security and issues in existing culture, such as how developers feel attacked by security engineers if they create vulnerable code. After establishing a security culture in the organization, development and operations need the necessary training and knowledge so that security automation tools can be utilized effectively. Measurements need to be applied continuously to keep track of identified vulnerabilities, the amount of training staff has received, and staffs general opinions regarding security.","","978-1-7281-0229-0","10.1109/CyberSecPODS.2019.8884935","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8884935","DevOps;Security;Culture;Automation;Measurements;Sharing","Security;Companies;Tools;Software;Automation;Interviews;Training","personnel;security of data;software engineering","central agents;secure applications;software engineering;software security;DevSecOps practices;security practices;security culture;security automation tools","","18","","20","","31 Oct 2019","","","IEEE","IEEE Conferences"
"Fast Development Platforms and Methods for Cloud Applications","S. Hosono; J. He; X. Liu; L. Li; H. Huang; S. Yoshino","Service Platforms Res. Labs., NEC Corp., Kawasaki, Japan; Platform Software Dev. Div., NEC China Co. Ltd., Beijing, China; Platform Software Dev. Div., NEC China Co. Ltd., Beijing, China; Platform Software Dev. Div., NEC China Co. Ltd., Beijing, China; Platform Software Dev. Div., NEC China Co. Ltd., Beijing, China; Service Dev. Div., NEC BIGLOBE Co. Ltd., Tokyo, Japan","2011 IEEE Asia-Pacific Services Computing Conference","12 Jan 2012","2011","","","94","101","This paper proposes a cloud application framework, which integrates both the development and production environment seamlessly. The framework consists of the client-side integrated development environment (IDE), and the server-side service portfolio and cloud controller. The IDE has requirement definition, architecture design and application prototyping tools, and it can simulate execution of large-scale applications in developers' PCs. The service portfolio incorporates data from these tools and enables automatic data sharing between them, thereby avoiding setback and redundancy. To accommodate the applications on the cloud, the cloud controller utilizes the resource structures designed in the IDE and generates virtual machines (VMs) from templates, in which a verified OS and middleware for large-scale data processing are packaged. The behavior of VMs and applications will be automatically monitored and catalogued as a guideline for the next project. With these comprehensive approaches, the system integration methods can be streamlined and the acceleration of development can be easily demonstrated.","","978-1-4673-0206-7","10.1109/APSCC.2011.75","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6127948","Cloud Computing;DevOps;Application Prototyping;Application Lifecycle Management","Computational modeling;Servers;Portfolios;Computer architecture;Middleware;Unified modeling language;Business","cloud computing;middleware;software architecture;virtual machines","cloud application;production environment;client-side integrated development environment;server-side service portfolio;cloud controller;architecture design;prototyping tool;automatic data sharing;virtual machine;verified OS;middleware;large-scale data processing;system integration","","3","2","19","","12 Jan 2012","","","IEEE","IEEE Conferences"
"Towards Explicitly Elastic Programming Frameworks","K. R. Jayaram","IBM Thomas J. Watson Res. Center, Yorktown Heights, NY, USA","2015 IEEE/ACM 37th IEEE International Conference on Software Engineering","17 Aug 2015","2015","2","","619","622","It is a widely held view that software engineers should not be ""burdened"" with the responsibility of making their application components elastic, and that elasticity should be either be implicit and automatic in the programming framework; or that it is the responsibility of the cloud provider's operational staff (DevOps) to make distributed applications written for dedicated clusters elastic and execute them on cloud environments. In this paper, we argue the opposite - we present a case for explicit elasticity, where software engineers are given the flexibility to explicitly engineer elasticity into their distributed applications. We present several scenarios where elasticity retrofitted to applications by DevOps is ineffective, present preliminary empirical evidence that explicit elasticity improves efficiency, and argue for elastic programming languages and frameworks to reduce programmer effort in engineering elastic distributed applications. We also present a bird's eye view of ongoing work on two explicitly elastic programming frameworks - Elastic Thrift (based on Apache Thrift) and Elastic Java, an extension of Java with support for explicit elasticity.","1558-1225","978-1-4799-1934-5","10.1109/ICSE.2015.207","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7203027","","Elasticity;Programming;Runtime;Java;Servers;Software;Measurement","cloud computing;Java;software engineering","explicit elastic programming frameworks;software engineers;cloud provider operational staff;DevOps;cloud environments;elastic programming languages;elastic thrift programming frameworks;elastic Java","","2","1","16","","17 Aug 2015","","","IEEE","IEEE Conferences"
"Using Rules Engine in the Automation of System Security Review","A. A. Alnaim",Saudi Aramco,"2019 IEEE Cybersecurity Development (SecDev)","18 Nov 2019","2019","","","142","142","Best practice has determined the importance of reviewing the security design and architecture of a system early in the system's development life-cycle. This is done to ensure the security of the developed system. The review of a system design to ensure compliance with policies, standards, and best practices oftentimes takes the form of a manual. Utilization of this method can be a time-consuming process, where the security team reviews the design and architecture. Often times, this process can contradict the agility provided by implementing DevOps; a practice that promises agility throughout the System development life-cycle. The DevOps system creates a capability for automating processes that assist in the building, testing and releasing software created by IT teams. The contradiction demonstrated between this automated assessment practice and the more archaic manual review practices, frequently depict the security team as show-stoppers. Given that the security team is then responsible for ensuring quality standards are met, the release of a system can be delayed due to the human element when it is possible to automate this process and remove the human variable. This process can be effective except in cases where the system being assessed does not align with the predetermined framework provided to the automated assessment process. The process to be automated is designed to review the security architecture of systems and application commissioned throughout the organization's network. The manual process begins with the application of a questionnaire submitted by the project lead. A security analyst is then responsible for then manually reviewing the submitted questionnaire. This review involves the assessment and analysis of the designs elements as well as all of the controls present in the process. This would include controls such as the various authentication, authorization controls, accountability controls, network communication protocols, encryption, application and service accounts, the application security requirements and any other related controls. This process can be extensive and would get extended with more complexity the reviewed system gets. The goal is to maintain the same level of security maturity provided by the process while enhancing the processing time. To achieve this goal, I have developed a rules engine that incorporates all of the required security controls and translates these controls into questions and answers. Each answer is stored with the approval status and the required approval level, or approver. The rules engine will determine whether the request is approved, not approved or requires additional manual review by the team. If the request is approved the application will assign the required approver (data owner, system proponents, access management, etc.). After the approval workflow is completed, the requester must submit compliance items proving compliance with the provided information. This innovative rule engine application is dynamic and the rules can be changed and adjusted based on requirements of the organization's policy. The new process has been able to reduce the average time of the process down to a single hour. Through the reduction in time spent on reviewing the security design and architecture of system design, an organization is able to demonstrate a much greater efficiency throughout its operations.","","978-1-5386-7289-1","10.1109/SecDev.2019.00025","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8901674","System Security Review;Security","","","","","","","0","","18 Nov 2019","","","IEEE","IEEE Conferences"
"Experience report: Anomaly detection of cloud application operations using log and cloud metric correlation analysis","M. Farshchi; J. Schneider; I. Weber; J. Grundy","School of Software and Electrical Engineering, Swinburne University of Technology, Melbourne, Australia; School of Software and Electrical Engineering, Swinburne University of Technology, Melbourne, Australia; Software Systems Research Group, NICTA, Sydney, Australia; School of Software and Electrical Engineering, Swinburne University of Technology, Melbourne, Australia","2015 IEEE 26th International Symposium on Software Reliability Engineering (ISSRE)","14 Jan 2016","2015","","","24","34","Failure of application operations is one of the main causes of system-wide outages in cloud environments. This particularly applies to DevOps operations, such as backup, redeployment, upgrade, customized scaling, and migration that are exposed to frequent interference from other concurrent operations, configuration changes, and resources failure. However, current practices fail to provide a reliable assurance of correct execution of these kinds of operations. In this paper, we present an approach to address this problem that adopts a regression-based analysis technique to find the correlation between an operation's activity logs and the operation activity's effect on cloud resources. The correlation model is then used to derive assertion specifications, which can be used for runtime verification of running operations and their impact on resources. We evaluated our proposed approach on Amazon EC2 with 22 rounds of rolling upgrade operations while other types of operations were running and random faults were injected. Our experiment shows that our approach successfully managed to raise alarms for 115 random injected faults, with a precision of 92.3%.","","978-1-5090-0406-5","10.1109/ISSRE.2015.7381796","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7381796","Cloud application operations;DevOps;Cloud monitoring;anomaly detection;error detection;log analysis","Cloud computing;Measurement;Monitoring;Correlation;Interference;Australia;Production","cloud computing;regression analysis;system monitoring","anomaly detection;cloud application operations;cloud metric correlation analysis;log correlation analysis;regression-based analysis;operations activity logs;cloud resources;correlation model;assertion specifications;runtime verification;Amazon EC2;random injected faults","","39","2","30","","14 Jan 2016","","","IEEE","IEEE Conferences"
"Agile Development Practices Applied to Software Startups : A Systematic Mapping Review","P. C. Abrantes; A. Paula Furtado","Cesar School,Recife,Brazil; Rural Federal University of Pernambuco,Recife,Brazil","2021 16th Iberian Conference on Information Systems and Technologies (CISTI)","12 Jul 2021","2021","","","1","6","Context: Previous studies considered software startups are not applying agile development practices, especially those related to quality. This leads to the accumulation of technical debt. Objective: This study aims at identifying primary studies that describe how startups are applying agile development practices and how they could benefit from these practices, thereby contributing to product quality improvement and better resource allocation. Method: A Systematic Mapping Study was conducted which applied automatic searches so as to identify relevant primary studies. Results: 60 primary studies were identified that present information regarding practices, challenges, and limitations of adopting agile development practices in startups and also the benefits, tools, and ways of simplifying their adoption. Conclusions: 55 agile development practices used by startups were found, the most cited ones being associated with DevOps, Test Automation, and Scrum. The main challenges and limitations are related to the difficulty of adapting legacy systems architecture to support DevOps practices, to market volatility, to the need for quick product release, and to resources, including financial resources, being limited. Benefits related to having improved internal processes were the most cited and 128 tools were classified. Few studies have offered answers on how to simplify adopting agile development practices, although all of them led to tools for automating processes being used.","2166-0727","978-989-54659-1-0","10.23919/CISTI52073.2021.9476368","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9476368","software startups;agile development practices;tools","Systematics;Automation;Computer architecture;Tools;Software;Product design;Quality assessment","project management;resource allocation;software prototyping;software quality","agile development practices;software startups;systematic mapping study;financial resources;DevOps;market volatility;test automation;Scrum;resource allocation","","","","16","","12 Jul 2021","","","IEEE","IEEE Conferences"
"Quality Assurance Practices in Continuous Delivery - an implementation in Big Data Domain","A. Cheriyan; R. R. Gondkar; T. Gopal; S. B. S.","CMR University, Bangalore, Karnataka, 560 043, INDIA; CMR University, Bangalore, Karnataka, 560 043, INDIA; Huawei Technologies India Private Limited, Bangalore, India; Huawei Technologies India Private Limited, Bangalore, India","2018 IEEE 8th International Advance Computing Conference (IACC)","18 Apr 2019","2018","","","7","13","This paper provides the details about the Quality Assurance practices and techniques to be followed by the QA professional (also called SQA-Software Quality Assurance) in continuous delivery mode of software development. QA professionals are responsible for the process definition, audit, training and other assurance activites in the project. The paper provides a QA model named 'ACID-QA' model which comprises of key practices which can be used by the QA professional in continuous delivery mode of software development. The objective of the 'ACID-QA' model is to provide a working model for the SQA which can be used during the planning, requirement, design, coding, testing, continuous integration, audit and release activities of the project. The paper provides an overview of each of the practice areas of the model in the further sections. This model is implemented in Big Data Hadoop File system and Map Reduce and it is found that the product quality issues found by SQA Professionals are improved by 100%. The audit findings are further detailed down in the paper.","2473-3571","978-1-5386-6678-4","10.1109/IADCC.2018.8692131","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8692131","Quality Assurance;Continuous Delivery;DevOps;QA Professional;SQA;Continuous Integration","Pipelines;Quality assurance;Testing;Big Data;Tools;Security;Cloud computing","Big Data;parallel processing;quality assurance;software quality","software development;ACID-QA model;Big Data Hadoop File system;product quality issues;SQA Professionals;software quality assurance;Map Reduce","","","","12","","18 Apr 2019","","","IEEE","IEEE Conferences"
"Continuous Deployment at Facebook and OANDA","T. Savor; M. Douglas; M. Gentili; L. Williams; K. Beck; M. Stumm","Facebook, Menlo Park, CA, USA; Dept. of Comput. Sci., Stanford Univ., Stanford, CA, USA; OANDA Corp., New York, NY, USA; Dept. of Comput. Sci., Stanford Univ., Stanford, CA, USA; Facebook, Menlo Park, CA, USA; ECE Dept., Univ. of Toronto, Toronto, ON, Canada","2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)","23 Mar 2017","2016","","","21","30","Continuous deployment is the software engineering practice of deploying many small incremental software updates into production, leading to a continuous stream of 10s, 100s, or even 1,000s of deployments per day. High-profile Internet firms such as Amazon, Etsy, Facebook, Flickr, Google, and Netflix have embraced continuous deployment. However, the practice has not been covered in textbooks and no scientific publication has presented an analysis of continuous deployment. In this paper, we describe the continuous deployment practices at two very different firms: Facebook and OANDA. We show that continuous deployment does not inhibit productivity or quality even in the face of substantial engineering team and code size growth. To the best of our knowledge, this is the first study to show it is possible to scale the size of an engineering team by 20X and the size of the code base by 50X without negatively impacting developer productivity or software quality. Our experience suggests that top-level management support of continuous deployment is necessary, and that given a choice, developers prefer faster deployment. We identify elements we feel make continuous deployment viable and present observations from operating in a continuous deployment environment.","","978-1-4503-4205-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7883285","Continuous Deployment;Agile Process;Deployment Process;DevOps;Continuous Delivery;Release Engineering;Release Management","Software;Testing;Facebook;Organizations;Productivity;Servers","productivity;social networking (online);software development management;software quality;team working","Facebook;OANDA;continuous deployment;software engineering;small incremental software updates deployment;high-profile Internet firms;software quality;code size growth;engineering team size;developer productivity;top-level management support","","5","2","28","","23 Mar 2017","","","IEEE","IEEE Conferences"
"Continuous Delivery Practices in a Large Financial Organization","C. Vassallo; F. Zampetti; D. Romano; M. Beller; A. Panichella; M. Di Penta; A. Zaidman","Univ. of Zurich, Zurich, Switzerland; Univ. of Sannio, Benevento, Italy; ING NL, Amsterdam, Netherlands; Delft Univ. of Technol., Delft, Netherlands; Delft Univ. of Technol., Delft, Netherlands; Univ. of Sannio, Benevento, Italy; Delft Univ. of Technol., Delft, Netherlands","2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)","16 Jan 2017","2016","","","519","528","Continuous Delivery is an agile software development practice in which developers frequently integrate changes into the main development line and produce releases of their software. An automated Continuous Integration infrastructure builds and tests these changes. Claimed advantages of CD include early discovery of (integration) errors, reduced cycle time, and better adoption of coding standards and guidelines. This paper reports on a study in which we surveyed 152 developers of a large financial organization (ING Nederland), and investigated how they adopt a Continuous Integration and delivery pipeline during their development activities. In our study, we focus on topics related to managing technical debt, as well as test automation practices. The survey results shed light on the adoption of some agile methods in practice, and sometimes confirm, while in other cases, confute common wisdom and results obtained in other studies. For example, we found that refactoring tends to be performed together with other development activities, technical debt is almost always ""self-admitted"", developers timely document source code, and assure the quality of their product through extensive automated testing, with a third of respondents dedicating more than 50% of their time to do testing activities.","","978-1-5090-3806-0","10.1109/ICSME.2016.72","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7816504","Continuous Delivery;Continuous Integration;DevOps;Agile Development;Technical Debt;Refactoring;Testing;Test-Driven Development","Pipelines;Testing;Software;Monitoring;Organizations;Measurement","financial data processing;program testing;quality assurance;software maintenance;software prototyping;software quality;source code (software)","continuous delivery;CD;financial organization;ING Nederland;agile software development;continuous integration infrastructure;CI infrastructure;software refactoring;document source code;product quality assurance;automated testing","","22","1","48","","16 Jan 2017","","","IEEE","IEEE Conferences"
"Automated virtual network functions onboarding","C. Makaya; D. Freimuth","IBM T. J. Watson Research Center, Yorktown Heights, NY, USA; IBM T. J. Watson Research Center, Yorktown Heights, NY, USA","2016 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN)","8 May 2017","2016","","","206","211","Network functions virtualization (NFV) opens up a new ability of network enablement through agile network DevOps to design, develop, and test new services and to provide ongoing updates of existing services. This paper proposes a tool and methodology to aid the NFV designer to rapidly design and onboard new services and applications. Although the main focus is on the service design and onboarding, we provide the relation with other aspects such as management and orchestration, and service assurance of a complete lifecycle for network service. The proposed tool and methodology is called VNF Onboarding Automation Tool (VOAT). The prototype implementation is discussed as well as various use cases where VOAT has been used. With VOAT, an automated service design and onboarding can be efficiently achieved, hence reducing significantly the timeframe for deploying new services in telco cloud-based environment.","","978-1-5090-0933-6","10.1109/NFV-SDN.2016.7919499","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7919499","NFV;VNF;onboarding;service catalog;descriptors;templates;orchestration;management;virtualization","Cloud computing;Automation;Metadata;Monitoring;Conferences","computer networks;virtualisation","virtual network functions onboarding;network functions virtualization;NFV;network enablement;agile network DevOps;VNF onboarding automation tool;VOAT;telco cloud-based environment","","6","","18","","8 May 2017","","","IEEE","IEEE Conferences"
"Landscape of Automated Log Analysis: A Systematic Literature Review and Mapping Study","Ł. Korzeniowski; K. Goczyła","Nordea Bank Abp SA, Helsinki, Finland; Faculty of Electronics, Telecommunication and Informatics, Gdañsk University of Technology, Gdañsk, Poland","IEEE Access","3 Mar 2022","2022","10","","21892","21913","Logging is a common practice in software engineering to provide insights into working systems. The main uses of log files have always been failure identification and root cause analysis. In recent years, novel applications of logging have emerged that benefit from automated analysis of log files, for example, real-time monitoring of system health, understanding users’ behavior, and extracting domain knowledge. Although nearly every software system produces log files, the biggest challenge in log analysis is the lack of a common standard for both the content and format of log data. This paper provides a systematic review of recent literature (covering the period between 2000 and June 2021, concentrating primarily on the last five years of this period) related to automated log analysis. Our contribution is three-fold: we present an overview of various research areas in the field; we identify different types of log files that are used in research, and we systematize the content of log files. We believe that this paper serves as a valuable starting point for new researchers in the field, as well as an interesting overview for those looking for other ways of utilizing log information.","2169-3536","","10.1109/ACCESS.2022.3152549","Gdañsk University of Technology; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9716129","DevOps;log analysis;logging;knowledge acquisition;system monitoring;reverse engineering;text mining","Data mining;Systematics;Protocols;Reverse engineering;Manuals;Licenses;Bibliographies","","","","","","299","CCBY","17 Feb 2022","","","IEEE","IEEE Journals"
"Automation of regression test in microservice architecture","M. J. Kargar; A. Hanifizade","Department of Computer Engineering, University of science and Culture, Tehran, Iran; Department of Computer Engineering, University of science and Culture, Tehran, Iran","2018 4th International Conference on Web Research (ICWR)","18 Jun 2018","2018","","","133","137","Nowadays Microservice, as one of the most important architectural approaches towards Cloud Computing, has caught the attention of many developers. To give a simple definition of microservice, it could be said: Each microservice is completely independent, and implements a part of the business, which is composed of several microservices. Each microservice could be deployed, updated, and scaled, without any impact on other microservices, and it is all automated. Among Agile methods, Continuous Delivery has played an important role in development process of Microservice-based systems. Continuous Delivery provides faster delivery of changes and faster getting customer's feedbacks. Continuous Delivery consists of many sections, one of which is Software Test. One of the challenges of automated deploying of new releases to production environment, is software reliability, that in case it is breached, the beneficiaries would suffer considerable losses. Regression test is one of the tests used for ensuring reliability, which compares two system versions based on various metrics. This paper proposes an automated method in running this test, which places Regression test in Continuous Delivery steps, which tests operability of the last developed version as a black box, and prevents writing test unit. Finally, microservice developers could ensure the operability of the developed microservice dependencies through investigating obtained comparisons.","","978-1-5386-5364-7","10.1109/ICWR.2018.8387249","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8387249","microservice;regression test;continuous delivery;DevOps","Computer architecture;Production;Software;Tools;Java;Software reliability;Measurement","cloud computing;program testing;regression analysis;software reliability","regression test;microservice architecture;Continuous Delivery;Cloud Computing;Agile methods;microservice dependencies;Software Test;software reliability","","3","","10","","18 Jun 2018","","","IEEE","IEEE Conferences"
"NFV-VIPP: Catching Internal Figures of Packet Processing for Accelerating Development and Operations of NFV-nodes","M. Dodare; Y. Taguchi; R. Kawashima; H. Nakayama; T. Hayashi; H. Matsuo","Nagoya Institute of Technology,Nagoya-shi,Aichi,Japan,466-8555; Nagoya Institute of Technology,Nagoya-shi,Aichi,Japan,466-8555; Nagoya Institute of Technology,Nagoya-shi,Aichi,Japan,466-8555; BOSCO Technologies, Inc.,Minato-ku,Tokyo,Japan,105-0003; BOSCO Technologies, Inc.,Minato-ku,Tokyo,Japan,105-0003; Nagoya Institute of Technology,Nagoya-shi,Aichi,Japan,466-8555","2019 15th International Conference on Network and Service Management (CNSM)","27 Feb 2020","2019","","","1","4","Server-based NFV-nodes have disparate internals, such as simultaneous deployment of Virtual Network Functions (VNFs) and layered software abstractions including a virtual switch. The traditional operations tailored for function-hardware-coupled devices cannot cope with the increase of related components as well as complicated packet forwarding paths inside. Besides, self-development of VNFs attracting Telcos is still highly complicated work, due to lack of exact troubleshooting of internal NFV-nodes caused by exclusive resource management by Data-Plane Development Kit (DPDK). OPNFV Barometer provides means of stats acquisition, but internal figures of packet processing are still unveiled. In this paper, we propose an integrated metrics collection framework (NFV-VIPP) specialized to NFV-nodes. NFV-VIPP provides seamless understandings of system components in a node, and reveals the inside by transparently exposing implementation-related metrics. NFV-VIPP can be incorporated into Barometer/collected via RESTful APIs to reinforce system visibility, meaning that our framework bridges NFV-node internals to existing management frameworks. We explore NFV-node management using intra-VNF metrics obtained by NFVVIPP. Specifically, we prove that CPU-cycle consumption of inter-receive-polling is a driving force to estimate system load.","2165-963X","978-3-903176-24-9","10.23919/CNSM46954.2019.9012728","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9012728","NFV;DPDK;Barometer;Visualization;Network Monitoring;Load Measurement;DevOps","Monitoring;Estimation;Switches;Conferences;Servers;Packet loss","application program interfaces;computer network management;virtualisation","Virtual Network Functions;function-hardware-coupled devices;packet forwarding paths;internal NFV-nodes;Data-Plane Development Kit;packet processing;NFV-VIPP;NFV-node management;server-based NFV-nodes;DPDK;RESTful API;barometer;CPU cycle consumption;interreceive polling;virtual switch","","1","","19","","27 Feb 2020","","","IEEE","IEEE Conferences"
"A Hub-and-Spoke Model for Tool Integration in Distributed Development","F. Calefato; F. Lanubile","Dipt. Jonico, Univ. of Bari, Taranto, Italy; Dipt. Jonico, Univ. of Bari, Taranto, Italy","2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)","29 Sep 2016","2016","","","129","133","Today distributed development depend on an ever-growing plethora of tools that provide a continual stream of updates and place developers into a situation of channel overload and information fragmentation. In this paper, we present our initial work on the definition of a model, named hub-and-spoke, for a loosely-coupled integration of development tools that can help developers cope with these issues, while also increasing their overall situational awareness.","2329-6313","978-1-5090-2680-7","10.1109/ICGSE.2016.12","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7577429","tool integration;information fragmentation;channel overload;distributed development;awareness;devops","Software;Unified modeling language;Companies;Software engineering;Automation;Process control;Testing","software engineering","hub-and-spoke model;distributed development;tool integration;tool plethora;information fragmentation;channel overload;development tools;overall situational awareness","","5","","22","","29 Sep 2016","","","IEEE","IEEE Conferences"
"ConPan: A Tool to Analyze Packages in Software Containers","A. Zerouali; V. Cosentino; G. Robles; J. M. Gonzalez-Barahona; T. Mens",University of Mons; Bitergia – Spain; Universidad Rey Juan Carlos; Universidad Rey Juan Carlos; University of Mons,"2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR)","29 Aug 2019","2019","","","592","596","Deploying software packages and services into containers is a popular software engineering practice that increases portability and reusability. Docker, the most popular containerization technology, helps DevOps practitioners in their daily activities. Despite being successfully and increasingly employed, containers may include buggy and vulnerable packages that put at risk the environments in which the containers have been deployed. Existing quality and security monitoring tools provide only limited support to analyze Docker containers, thus forcing practitioners to perform additional manual work or develop adhoc scripts when the analysis goes beyond security purposes. This limitation also affects researchers desiring to empirically study the evolution dynamics of Docker containers and their contained packages. To overcome this limitation, we present ConPan, an automated tool to inspect the characteristics of packages in Docker containers, such as their outdatedness and other possible flaws (e.g., bugs and security vulnerabilities). ConPan comes with a CLI and API, and the analysis results can be presented to the user in a variety of formats.","2574-3864","978-1-7281-3412-3","10.1109/MSR.2019.00089","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8816741","Containers;vulnerabilities;bugs;outdated-software;Docker","Containers;Computer bugs;Tools;Security;Libraries;Python","application program interfaces;program diagnostics;software engineering;software packages","ConPan;software containers;software packages;DevOps practitioners;Docker containers;software engineering;containerization technology;CLI;API","","3","","27","","29 Aug 2019","","","IEEE","IEEE Conferences"
"Ops-Scale: Scalable and Elastic Cloud Operations by a Functional Abstraction and Feedback Loops","K. Hakimzadeh; J. Dowling",KTH - Royal Institute of Technology; Logical Clocks,"2019 IEEE 13th International Conference on Self-Adaptive and Self-Organizing Systems (SASO)","1 Aug 2019","2019","","","62","71","Recent research has proposed new techniques to streamline the autoscaling of cloud applications, but little effort has been made to advance configuration management (CM) systems for such elastic operations. Existing practices use CM systems, from the DevOps paradigm, to automate operations. However, these practices still require human intervention to program ad hoc procedures to fully automate reconfiguration. Moreover, even after careful programming of cloud operations, the backing models are insufficient for re-running such programs unchanged in other platforms-which implies an overhead in rewriting the programs. We argue that CM programs can be designed to be deployment-agnostic and highly elastic with well-defined abstractions. In this paper, we introduce our abstraction based on declarative functional programming, and we demonstrate it using a feedback loop control mechanism. Our proposal, called Ops-Scale, is a family of cloud operations that are derived by making a functional abstraction over existing configuration programs. The hypothesis in this paper is twofold: 1) it should be possible to make a highly declarative CM system rich enough to capture fine-grained reconfigurations of autoscaling automatically, and; 2) that a program written for a specific deployment can be re-used in other deployments. To test this hypothesis, we have implemented an open source configuration engine called Karamel that is already used in industry for large-scale cluster deployments. Results show that at scale Ops-Scale can capture a polynomial order of reconfiguration growth in a fully automated manner. In practice, recent deployments have demonstrated that Karamel can provision clusters of 100 virtual machines consisting of many-layers distributed services on Google's IaaS Cloud in 'less than 10 minutes'.","1949-3681","978-1-7281-2731-6","10.1109/SASO.2019.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8780537","Cloud Computing, Functional Programming, Elasticity, Auto-Scaling, Feedback Control Loop","Cloud computing;Feedback loop;Functional programming;Computer architecture;Planning;Load modeling","cloud computing;configuration management;functional programming;virtual machines","autoscaling;specific deployment;open source configuration engine;large-scale cluster deployments;scale Ops-Scale;fully automated manner;functional abstraction;feedback loops;cloud applications;configuration management systems;CM systems;DevOps paradigm;human intervention;hoc procedures;fully automate reconfiguration;careful programming;backing models;CM programs;deployment-agnostic;well-defined abstractions;declarative functional programming;feedback loop control mechanism;called Ops-Scale;configuration programs;highly declarative CM system;fine-grained reconfigurations;Google IaaS Cloud;scalable cloud operations;elastic cloud operations;time 10.0 min","","1","","39","","1 Aug 2019","","","IEEE","IEEE Conferences"
"ARGON: A Model-Driven Infrastructure Provisioning Tool","J. Sandobalin; E. Insfran; S. Abrahão",Escuela Politécnica Nacional; Universitat Politècnica de València; Universitat Politècnica de València,"2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)","21 Nov 2019","2019","","","738","742","Infrastructure as Code (IaC) is an approach to infrastructure automation based on practices from software development. IaC tools use scripts to specify the creation, update, and execution of cloud infrastructures. As each cloud provider offers a different type of infrastructure, the definition of an infrastructure element implies to write several lines of code that strongly depend on the target cloud provider. As a result, managing IaC scripts has become a time-consuming and error-prone activity. In previous work, we have presented ARGON, which is a model-driven infrastructure provisioning tool. ARGON implements a domain-specific language (DSL) for modeling the characteristics of the cloud infrastructure and provides transformation engines to automate the infrastructure provisioning for different cloud providers. In this demonstration, we show the use of ARGON for modeling and provisioning a load balancer in Amazon Web Services and Microsoft Azure. The load balancer distributes incoming application traffic across multiple virtual machines.","","978-1-7281-5125-0","10.1109/MODELS-C.2019.00114","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8904494","Infrastructure as Code;DevOps;Cloud Infrastructure Provisioning;Model-Driven Engineering","Two dimensional displays;6G mobile communication;Model driven engineering","cloud computing;specification languages;Web services","ARGON;model-driven infrastructure provisioning tool;infrastructure automation;IaC tools;cloud infrastructure;IaC scripts;Infrastructure as Code;domain-specific language;DSL;Amazon Web Services;Microsoft Azure","","2","","9","","21 Nov 2019","","","IEEE","IEEE Conferences"
"Highly-Distributed Systems Based on Micro-Services and their Construction Paradigms","A. Luntovskyy; B. Shubyn","BA Dresden University of Coop. Education,Saxon Study Academy,Dresden,Germany; Lviv Polytechnic National University,Institute of Telecommunications and Radioelectronics,Lviv,Ukraine","2020 IEEE 15th International Conference on Advanced Trends in Radioelectronics, Telecommunications and Computer Engineering (TCSET)","7 May 2020","2020","","","7","14","A definition for the HDS, as well as the demarcation to conventional distributed systems, were given. Typical architectures for HDS were discussed which affect increasing of QoS and of so-called QoE (Quality of Experience). The distinguishing features for HDS are clearly formulated. The advanced SWT (Software Technologies) approaches lead to use of young flexible service-oriented architectures like Micro-Services, which provide higher performance and small latencies, as well as better scalability, energy-efficiency and autarky.One possible option in the frame of HDS regarding security, privacy, authentication and compulsoriness of workflow steps, modules and service execution for such apps Blockchain and Smart Contracting are. The theoretical issues are proven via the represented examples and case studies.","","978-1-7281-5566-1","10.1109/TCSET49122.2020.235378","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9088603","Highly-Distributed Systems;Agile Process Models;Quality of Experience;Service-Oriented Architectures;Micro-Services;DevOps;Scrum;Conway’s Law;Blockchain","","quality of experience;quality of service;service-oriented architecture;Web services","microservices;HDS;conventional distributed systems;QoE;quality of experience;SWT;software technologies;service-oriented architectures;service execution","","1","","12","","7 May 2020","","","IEEE","IEEE Conferences"
"Integration of Convolutional Neural Networks in Mobile Applications","R. C. Castanyer; S. Martínez-Fernández; X. Franch","Universitat Politècnica de Catalunya,Barcelona,Spain; Universitat Politècnica de Catalunya,Barcelona,Spain; Universitat Politècnica de Catalunya,Barcelona,Spain","2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN)","8 Jul 2021","2021","","","27","34","When building Deep Learning (DL) models, data scientists and software engineers manage the trade-off between their accuracy, or any other suitable success criteria, and their complexity. In an environment with high computational power, a common practice is making the models go deeper by designing more sophisticated architectures. However, in the context of mobile devices, which possess less computational power, keeping complexity under control is a must. In this paper, we study the performance of a system that integrates a DL model as a trade-off between the accuracy and the complexity. At the same time, we relate the complexity to the efficiency of the system. With this, we present a practical study that aims to explore the challenges met when optimizing the performance of DL models becomes a requirement. Concretely, we aim to identify: (i) the most concerning challenges when deploying DL-based software in mobile applications; and (ii) the path for optimizing the performance trade-off. We obtain results that verify many of the identified challenges in the related work such as the availability of frameworks and the software-data dependency. We provide a documentation of our experience when facing the identified challenges together with the discussion of possible solutions to them. Additionally, we implement a solution to the sustainability of the DL models when deployed in order to reduce the severity of other identified challenges. Moreover, we relate the performance trade-off to a new defined challenge featuring the impact of the complexity in the obtained accuracy. Finally, we discuss and motivate future work that aims to provide solutions to the more open challenges found.","","978-1-6654-4470-5","10.1109/WAIN52551.2021.00010","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9474372","DL-based software;Convolutional Neural Networks;Software Engineering;AI Model Development Process;DevOps","Uncertainty;Computational modeling;Computer architecture;Predictive models;Software;Mobile handsets;Complexity theory","convolutional neural nets;deep learning (artificial intelligence);mobile computing;software performance evaluation","convolutional neural networks;mobile applications;data scientists;software engineers;computational power;mobile devices;performance trade-off;software-data dependency;deep learning;system performance;DL models;DL-based software","","","","22","","8 Jul 2021","","","IEEE","IEEE Conferences"
"Monitoring solution for cloud-native DevSecOps","A. Sojan; R. Rajan; P. Kuvaja","M3S Research Unit University of Oulu,Oulu,Finland; Panasonic Europe,Frankfurt,Germany; M3S Research Unit University of Oulu,Oulu,Finland","2021 IEEE 6th International Conference on Smart Cloud (SmartCloud)","6 Dec 2021","2021","","","125","131","Software development and operations are increasingly adopting cloud-native environments. The popularity of development practices such as DevSecOps is one of the reasons for this change. It is identified that monitoring is one essential practice in DevSecOps and currently, a wide variety of tool offerings are available on the market to address this new transformation. However, an automated monitoring solution that covers both the infrastructure and application level is not available yet. We have developed a repeatable solution based on the popular microservice architectural style that monitors the cloud-native infrastructure and application level to address this gap. Furthermore, we have also added automation capability to this monitoring solution for easy deployment and event-triggered alerting. In the future, we plan to do a detailed evaluation and extend the proposed solution with more data collection features in order to enhance the monitoring solution.","","978-1-6654-4374-6","10.1109/SmartCloud52277.2021.00029","ITEA3; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9627212","Cloud computing;DevSecOps;Security Monitoring;Cloud Monitoring;DevSecOps Monitoring;DevSecOps Cloud;DevOps Cloud","Automation;Conferences;Microservice architectures;Tools;Data collection;Software;Monitoring","cloud computing;software engineering","cloud-native environments;automated monitoring solution;microservice architectural style;cloud-native infrastructure;cloud-native DevSecOps;software development;software operations","","","","43","IEEE","6 Dec 2021","","","IEEE","IEEE Conferences"
"Why Many Benchmarks Might Be Compromised","J. Manner; G. Wirtz","Distributed Systems Group, Otto-Friedrich-University,Bamberg,Germany; Distributed Systems Group, Otto-Friedrich-University,Bamberg,Germany","2021 IEEE International Conference on Service-Oriented System Engineering (SOSE)","15 Oct 2021","2021","","","100","106","Benchmarking experiments often draw strong conclusions but lack information about the environmental influences like the hardware used to deploy the investigated system. Fairness and repeatability of these benchmarks are at least questionable. Developing for or migrating applications to the cloud or DevOps environments often requires performance testing, either for ensuring quality-of-service or for choosing the correct service parameters when deciding for a cloud offering. While building a benchmarking pipeline for cloud functions, the typical assumption is that a CPU scales the resources linearly to the used utilization. Due to heat generation, noise and other constraints, this is not the case due to the trade off between efficiency and performance. To investigate this trade off and its implications, we set up some experiments in order to evaluate the influence of these factors for benchmark results. We solely focus on Intel CPUs. Beginning with the second generation (Sandy Bridge), Intel uses their own scaling driver intel_pstate. Our results show that different settings for this scaling driver have a significant impact on the measured performance and therefore on the linear regression models we computed using LINPACK benchmarks. These benchmarks are executed at different CPU utilization points. An active intel_pstate scaling driver with enabled turbo boost and powersave governor reached a R2 of 0.7349, whereas the performance governor shows a significantly better, ideal determination coefficient with 0.9999 on a machine used in the benchmarks. Therefore, we propose a methodology for system calibration to ensure fair and repeatable benchmarks.","2642-6587","978-1-6654-3477-5","10.1109/SOSE52839.2021.00016","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9564366","Intel_pstate;Benchmark Design;Benchmarking;Simulation;Profiling;Experiment Design;Repeatability","Heating systems;Service-oriented systems engineering;Conferences;Computational modeling;Pipelines;Linear regression;Quality of service","benchmark testing;cloud computing;energy conservation;microprocessor chips;power aware computing;program testing;quality of service;regression analysis;software performance evaluation","benchmarking pipeline;cloud functions;Intel CPU;scaling driver intel_pstate;LINPACK benchmarks;benchmarking experiments;environmental influences;performance testing;quality-of-service;CPU utilization points;active intel_pstate scaling driver;cloud environment;DevOps environment;Sandy Bridge;linear regression models;power saving","","","","19","IEEE","15 Oct 2021","","","IEEE","IEEE Conferences"
"Continuous Testing and SLA Management of 5G Networks for Industrial Automation","C. Di Martino; A. Walid",Nokia Bell Labs; Nokia Bell Labs,"2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)","14 Feb 2022","2021","","","378","386","This paper describes a new platform enabling continuous testing and SLA management of private wireless networks (i.e., LTE and 5G) for industrial automation. The basic principle of the platform is that industrial wireless networks need to be tested continuously as the environment might change continuously. Given the complexity and variety of current factory use cases, we argue that network capabilities must be characterized continuously, on a per-UE (User Equipment), and per SLA fashion. In this perspective, the platform described in this paper enables i) the creation and management of SLA definitions through a custom-built SLA compiler, ii) all the automation needed to continuously test the network continuously, according to the defined SLAs. The platform includes a dedicated embedded hardware and a cloud-native back end providing services at the network core level. Results from field deployment in several production 5G networks for factory automation show that the platform can substantially reduce the testing cost and enable new use cases, like Autonomous Guided Vehicles-driven automated network testing.","","978-1-6654-2603-9","10.1109/ISSREW53611.2021.00105","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9700201","Industrial Automation;5G;DevOps;Continuous Testing;SLA management","5G mobile communication;Wireless networks;Scalability;Network slicing;Production facilities;Complexity theory;Software reliability","","","","","","26","","14 Feb 2022","","","IEEE","IEEE Conferences"
"Characterizing Co-located Insecure Coding Patterns in Infrastructure as Code Scripts","F. A. Bhuiyan; A. Rahman","Tennessee Technological University,Cookeville,Tennessee,USA; Tennessee Technological University,Cookeville,Tennessee,USA","2020 35th IEEE/ACM International Conference on Automated Software Engineering Workshops (ASEW)","20 Jan 2021","2020","","","27","32","Context: Insecure coding patterns (ICPs), such as hard-coded passwords can be inadvertently introduced in infrastructure as code (IaC) scripts, providing malicious users the opportunity to attack provisioned computing infrastructure. As performing code reviews is resource-intensive, a characterization of co-located ICPs, i.e., ICPs that occur together in a script can help practitioners to prioritize their review efforts and mitigate ICPs in IaC scripts. Objective: The goal of this paper is to help practitioners in prioritizing code review efforts for infrastructure as code (IaC) scripts by conducting an empirical study of co-located insecure coding patterns in IaC scripts. Methodology: We conduct an empirical study with 1613, 2764 and 2845 Puppet scripts respectively collected from three organizations namely, Mozilla, Openstack, and Wikimedia. We apply association rule mining to identify co-located ICPs in IaC scripts. Results: We observe 17.9%, 32.9%, and 26.7% of the scripts to include colocated ICPs respectively, for Mozilla, Openstack, and Wikimedia. The most frequent co-located ICP category is hard-coded secret and suspicious comment. Conclusion: Practitioners can prioritize code review efforts for IaC scripts by reviewing scripts that include co-located ICPs.","2151-0830","978-1-4503-8128-4","10.1145/3417113.3422154","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9319290","configuration script;co-location;devops;devsecops;empirical study;infrastructure as code;insecure coding pattern;puppet;security","Measurement;Encoding;Security;IP networks;Correlation;Software;Tools","cloud computing;data mining;program diagnostics;public domain software;security of data","hard-coded passwords;code reviews;co-located ICPs;IaC scripts;frequent co-located ICP category;Puppet scripts;code review efforts;colocated insecure coding patterns;association rule mining;Mozilla;Openstack;Wikimedia","","1","","28","","20 Jan 2021","","","IEEE","IEEE Conferences"
"TDD4Fog: A Test-Driven Software Development Platform for Fog Computing Systems","R. Li; X. Liu; X. Zheng; C. Zhang; H. Liu","School of Information Technology Deakin University,Geelong,Australia; School of Information Technology Deakin University,Geelong,Australia; Macquarie University,Department of Computing,Sydney,Australia; School of Information Technology Deakin University,Geelong,Australia; Swinburne University of Technology,School of Software and Electrical Engineering,Melbourne,Australia","2020 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing (CCGRID)","14 Jul 2020","2020","","","673","676","As an ideal infrastructure for smart services, Fog Computing is becoming the next wave of IT investment harnessing the successful models of Cloud Computing and latest technologies such as 5G and Internet of Things (IoT). However, the development of Fog Computing systems is a big challenge due to its complex, heterogeneous and distributed nature. Currently, there are a few SDKs released by some public Cloud service providers to support the development of Fog services in a top-down fashion as the key motive is to leverage their business Cloud services. However, Fog Computing systems are usually designed in a bottom-up fashion as the major functionalities are centred around the Edge Nodes and the End Devices. Meanwhile, significant efforts are required to verify the conformance of software behaviours as the collaboration between the End Devices, Edge Nodes and Cloud Servers is vital to the success of a Fog Computing System. Therefore, a holistically designed software development platform is urgently required. In this paper, we propose TDD4Fog, a test-driven software development platform for Fog Computing systems. Following the Test-Driven Development (TDD) methodology and a bottom-up design fashion, TDD4Fog supports the microservice architecture and provides the Test-Driven utilities such as metamorphic testing, mutation testing and random testing for the whole software development lifecycle of Fog Computing systems. To demonstrate the feasibility of TDD4Fog, we have presented some preliminary results on the key components of TDD4Fog and discussed some important future research directions.","","978-1-7281-6095-5","10.1109/CCGrid49817.2020.00-25","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9139723","Test-Driven Development;DevOps;Microservices;Fog Computing;Smart Services","Edge computing;Testing;Cloud computing;Software;Autonomous vehicles;Computer architecture;Servers","cloud computing;program testing;software engineering","TDD4Fog;test-driven software development platform;fog computing systems;fog services;microservice architecture;cloud servers;end devices;edge nodes;software behaviours;business cloud services;public cloud service providers;SDKs;smart services;cloud computing","","3","","9","","14 Jul 2020","","","IEEE","IEEE Conferences"
"MUSA Deployer: Deployment of Multi-cloud Applications","V. Casola; A. De Benedictis; M. Rak; U. Villano; E. Rios; A. Rego; G. Capone","DIETI, Univ. di Napoli Federico II, Naples, Italy; DIETI, Univ. di Napoli Federico II, Naples, Italy; DIII, Univ. della Campania Luigi Vanvitelli, Aversa, Italy; DING, Univ. del Sannio, Benevento, Italy; Technalia, Spain; Technalia, Spain; CeRICT, Benevento, Italy","2017 IEEE 26th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE)","10 Aug 2017","2017","","","107","112","The development of applications based on services offered by different, not conscious, providers, is expected to be growing in the next years. In order to offer effectively multicloud applications, many challenges still need to be faced. At this aim, the MUSA framework provides a DevOps approach to develop multi-cloud applications with desired Security Service Level Agreements (SLAs). This paper describes the MUSA Deployer models, which help developers to express their security requirements, and a Deployer tool that automatically provides cloud security services to offer Security SLAs.","","978-1-5386-1759-5","10.1109/WETICE.2017.46","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8003798","Cloud Security;Per-service SLA;Security Service Level Agreement","Security;Cloud computing;Tools;IP networks;Virtual machining;Collaboration","cloud computing;contracts;security of data","MUSA Deployer tool;multicloud application deployment;DevOps approach;security service level agreements;security SLA;cloud security services","","6","","23","","10 Aug 2017","","","IEEE","IEEE Conferences"
"Black-Box Optimization of Hadoop Parameters Using Derivative-Free Optimization","D. Desani; V. Gil-Costa; C. A. C. Marcondes; H. Senger","Fed. Univ. of Sao Carlos, Sao Carlos, Brazil; UNSL, San Luis, Argentina; Fed. Univ. of Sao Carlos, Sao Carlos, Brazil; Fed. Univ. of Sao Carlos, Sao Carlos, Brazil","2016 24th Euromicro International Conference on Parallel, Distributed, and Network-Based Processing (PDP)","4 Apr 2016","2016","","","43","50","Since its inception in 2004, MapReduce has revealed as a paramount platform and disruptive technology for the execution of high performance applications that process very large volumes of data. Hadoop is one of the most popular and widely adopted open source MapReduce implementation. Companies that execute large applications over hundreds or thousands of machines every day spend large efforts in performance tuning and optimization to reduce infrastructure costs. However, the framework has around 190 parameters which can be adjusted in a large number of different configurations that can significantly impact the performance of applications. The task of optimizing Hadoop parameters requires deep knowledge about a myriad platform details. In this paper, we propose and evaluate the use of derivative-free (DFO) methods for the automatic setup of Hadoop parameters to optimize the performance of applications. DFO methods provide a simple and efficient manner for automatic optimization of Hadoop MapReduce programs. Parameter changes are deployed through DevOps tools which are used to efficiently reconfigure the cluster according to DFO decisions. In the best scenario in our experiments, the automatic optimization leads to a reduction of 71% in the execution time over the default setup of parameters (i.e., an acceleration of 3.5 times) on a cluster of 28 nodes with very low overhead for production environments. Such results show that DFO methods and automatic optimization provide a promising tool for optimizing performance and reduction of costs for Hadoop applications which do not present dramatic variation in their behavior in daily production environments.","2377-5750","978-1-4673-8776-7","10.1109/PDP.2016.35","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7445312","Hadoop;Performance optimization","Optimization;Production;Tuning;Computational modeling;Engines;Programming;Google","optimisation;parallel processing","black-box optimization;Hadoop parameter;derivative-free optimization;MapReduce;DevOps tool","","4","","38","","4 Apr 2016","","","IEEE","IEEE Conferences"
"Continuous Integration for Vehicle Simulations","S. H. Reiterer; S. Balci; D. Fu; M. Benedikt; A. Soppa; H. Szczerbicka","Virtual Vehicle Research GmbH,Graz,Austria; Volkswagen AG,Wolfsburg,Germany; Leibniz University of Hannover,Hannover,Germany; Virtual Vehicle Research GmbH,Graz,Austria; Volkswagen AG,Wolfsburg,Germany; Leibniz University of Hannover,Hannover,Germany","2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA)","5 Oct 2020","2020","1","","1023","1026","In the design procedures of complex mechanical systems, a plurality of different design simulations and functional test simulations have to be conducted. In this paper we discuss how to make the continuous integration of simulation components for large co-simulations feasible and present a graph-based meta data model for the continuous integration of simulations. This new concept reduces the continuous integration efforts for developers by providing tools and a framework for the automated generation of continuous integration pipelines.","1946-0759","978-1-7281-8956-7","10.1109/ETFA46521.2020.9211976","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9211976","Continuous Integration;Co-Simulation;DevOps","Conferences;Pipelines;Metadata;Mechanical systems;Manufacturing automation","data models;graph theory;mechanical engineering computing;meta data","graph-based meta data model;continuous integration efforts;continuous integration pipelines;design procedures;complex mechanical systems;design simulations;functional test simulations;simulation components;vehicle simulations","","","","10","","5 Oct 2020","","","IEEE","IEEE Conferences"
"Empowering Dynamic Task-Based Applications with Agile Virtual Infrastructure Programmability","H. Zhou; Y. Hu; J. Su; M. Chi; C. de Laat; Z. Zhao","Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; Sch. of Comput. Sci., Nat. Univ. of Defense Technol., Changsha, China; Shanghai Key Lab. of Data Sci., Fudan Univ., Shanghai, China; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands; Inf. Inst., Univ. of Amsterdam, Amsterdam, Netherlands","2018 IEEE 11th International Conference on Cloud Computing (CLOUD)","11 Sep 2018","2018","","","484","491","The IaaS (Infrastructure-as-a-Service) offered by Clouds provides applications with the capability of customizing VMs and configuring their network. Compared to traditional service-based IaaS applications such as persistent web services, most task-based applications have a relatively short duration but are triggered on demand. A typical way to support such kinds of application is to provision a shared and fixed virtual infrastructure based on pre-estimated size in advance, and then perform all the processing tasks. However, due to unpredictable workloads, this solution can lead to either cost inefficiency caused by over-provisioning, or failure to deliver the performance required by applications. CloudsStorm is a dynamic control framework proposed to provide applications with agile programmability and flexibility in controlling the virtual infrastructure. With its front end, applications can design their networked infrastructure and program that infrastructure with our interpreted infrastructure code language. With the back-end engine, the infrastructure code can be executed to provision the networked infrastructure, deploy and execute the application to obtain results, and release resources. Moreover, we adopt multi-threading to support parallel operation. Finally, we conduct experiments in an assumed scenario to demonstrate functionalities of CloudsStorm. The evaluation results prove CloudsStorm is efficient for task-based applications that need to exploit Clouds but reduce the monetary cost.","2159-6190","978-1-5386-7235-8","10.1109/CLOUD.2018.00068","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8457836","infrastructure-as-a-service;programmable infrastructure;task-based applications;parallel operation;DevOps","Cloud computing;Task analysis;Topology;Data centers;Network topology;Tools;Syntactics","cloud computing;multi-threading;software prototyping;virtual machines;Web services","infrastructure-as-a-service;VM;CloudsStorm;back-end engine;multithreading;interpreted infrastructure code language;persistent web services;agile virtual infrastructure programmability","","2","","17","","11 Sep 2018","","","IEEE","IEEE Conferences"
"Dev-for-Operations and Multi-sided Platform for Next Generation Platform as a Service","B. Berde; S. Van Rossem; A. Ramos; M. Orrù; A. Shatnawi",Nokia Bell-Labs France; Ghent University-imec; ATOS Spain; University of Milano-Bicocca; University of Milano-Bicocca,"2018 European Conference on Networks and Communications (EuCNC)","23 Aug 2018","2018","","","1","5","This paper presents two new challenges for the Telco ecosystem transformation in the era of cloud-native microservice-based architectures. (1) Development-for-Operations (Dev-for-Operations) impacts not only the overall workflow for deploying a Platform as a Service (PaaS) in an open foundry environment, but also the Telco business as well as operational models to achieve an economy of scope and an economy of scale. (2) For that purpose, we construct an integrative platform business model in the form of a Multi-Sided Platform (MSP) for building Telco PaaSes. The proposed MSP based architecture enables a multi-organizational ecosystem with increased automation possibilities for Telco-grade service creation and operation. The paper describes how the Dev-for-Operations and MSP lift constraints and offers an effective way for next-generation PaaS building, while mutually reinforcing each other in the Next Generation Platform as a Service (NGPaaS) framework.","2575-4912","978-1-5386-1478-5","10.1109/EuCNC.2018.8443272","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8443272","microservice;DevOps;MSP;platform;Dev-for-Operations","Software;Buildings;Business;Production;Biological system modeling;Hardware","cloud computing;organisational aspects;service-oriented architecture","Telco PaaSes;MSP based architecture;Dev-for-Operations;Telco ecosystem transformation;cloud-native microservice-based architectures;open foundry environment;Telco business;multi-sided platform;Next Generation Platform as a Service;next-generation PaaS;Development-for-Operations;multi-organizational ecosystem;NGPaaS","","","","8","","23 Aug 2018","","","IEEE","IEEE Conferences"
"Productivity and process improvement using ‘Scaled Agile’ approaches: An emphasized analysis","J. R. Neve; K. Godbole; R. Neve","Persistent Systems Ltd., Pune, India; Persistent Systems Ltd., Pune, India; Pune, India","2017 International Conference on Inventive Computing and Informatics (ICICI)","28 May 2018","2017","","","793","798","As a software process practitioner we got to know many times that either customer is not able to explain what exactly he wants or business analyst is unable to articulate, which is somewhat similar to customer wants. We know that there are certain issues at both ends like-novice client, lack of strong visualization power of business analyst at vendor side, lack of skilled resources, fluctuating/invalid requirements, etc. When we try to find its root-cause, we found `Agility', which fits to high rising and fast pace even in changing of needs and technology under development. In any IT industry, it is not that easy stuff to keep up with solution delivery and meet ever-changing requirements of client without a proper plan. `Kanban' can easily work here, which requires strong team building. On top of it when inter departmental or cross track teams involved, it becomes little dicey to monitor delivery also it leads to dependency. Therefore, at the level of `Program Management' we need a more sophisticated model to deal with those challenges. Right now there is no any such model exists which will be useful on the program management level. This paper describes that framework called `Scaled Agile' to improve the process and productivity.","","978-1-5386-4031-9","10.1109/ICICI.2017.8365245","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8365245","Agility;SAFe;Scaled-Agile;Agile Approaches;Scrum;Sprint;Daily Scrum Meeting;Essential SAFe;Lean agile;DevOps;PI Planning;IP iterations;Release Train","Software;Delays;Conferences;Informatics;Planning;Organizations","business data processing;software engineering","process improvement;software process practitioner;business analyst;strong visualization power;inter departmental track teams;program management level;productivity;Kanban;IT industry","","","","9","","28 May 2018","","","IEEE","IEEE Conferences"
"Internet of Things (IoT) based Comprehensive testing of 5G network for Specific Absorption Rate (SAR)","S. Dasi; Y. Srinivas; M. Vadivel; R. Satpathy; B. B. Dash; U. C. De","PVP Siddhartha Engineering College,dept. of ECE,Vijayawada,India; Vignana Bharathi Institute of Technology,ECE Department,Ghatkesar; Vidya Jyoti Institute of Technology,Hyderabad; Sri Sri University,CSE (FET)and Director of the office of VC,Cuttack,Odisha,India; KIIT Deemed to be University Patia,Bhubaneswar,Odisha; KIIT Deemed to be University Patia,Bhubaneswar,Odisha","2022 International Conference on Electronics and Renewable Systems (ICEARS)","13 Apr 2022","2022","","","506","510","Our daily lives are filled with a wide variety of electromagnetic waves . To ensure that radio products are safe to use, they must undergo RF exposure evaluation. RF exposure evaluation, EMF measurements, or SAR testing can be used to conduct this evaluation. Time-consuming SAR measurement methods are used by the SAR standard. Mobile wireless device compliance test lead times are incompatible with industry needs and are becoming a significant pain as 5G communications proliferate. When it comes to peak spatialaverage SAR evaluation, this study proposes a new technology aimed to solve this challenge and provide instantaneous and accurate peak SAR evaluation.","","978-1-6654-8425-1","10.1109/ICEARS53579.2022.9751967","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9751967","DevOps;MultiCloud application;security and privacy analyses;Cloud Service Providers;operating system;VM;and hardware","Wireless communication;Renewable energy sources;5G mobile communication;Specific absorption rate;Internet of Things;Radiofrequency exposure;Standards","","","","","","17","","13 Apr 2022","","","IEEE","IEEE Conferences"
"Opaque Service Virtualisation: A Practical Tool for Emulating Endpoint Systems","S. Versteeg; M. Du; J. -G. Schneider; J. Grundy; J. Han; M. Goyal","CA Research, CA Technol., Melbourne, VIC, Australia; Swinburne Univ. of Technol., Hawthorn, VIC, Australia; Swinburne Univ. of Technol., Hawthorn, VIC, Australia; Deakin Univ., Burwood, VIC, Australia; Swinburne Univ. of Technol., Hawthorn, VIC, Australia; CA Technol., Plano, TX, USA","2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)","23 Mar 2017","2016","","","202","211","Large enterprise software systems make many complex interactions with other services in their environment. Developing and testing for production-like conditions is therefore a very challenging task. Current approaches include emulation of dependent services using either explicit modelling or record-and-replay approaches. Models require deep knowledge of the target services while record-and-replay is limited in accuracy. Both face developmental and scaling issues. We present a new technique that improves the accuracy of record-and-replay approaches, without requiring prior knowledge of the service protocols. The approach uses Multiple Sequence Alignment to derive message prototypes from recorded system interactions and a scheme to match incoming request messages against prototypes to generate response messages. We use a modified Needleman-Wunsch algorithm for distance calculation during message matching. Our approach has shown greater than 99% accuracy for four evaluated enterprise system messaging protocols. The approach has been successfully integrated into the CA Service Virtualization commercial product to complement its existing techniques.","","978-1-4503-4205-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7883304","DevOps;Service Virtualization;Service Emulation;Software Mining","Protocols;Prototypes;Testing;Emulation;Runtime;Libraries;Australia","enterprise resource planning;software engineering;virtualisation","opaque service virtualisation;endpoint systems;enterprise software systems;production-like conditions;explicit modelling;record-and-replay;target services;multiple sequence alignment;recorded system interactions;Needleman-Wunsch algorithm;distance calculation;message matching;enterprise system messaging protocols;CA service virtualization commercial product","","","","35","","23 Mar 2017","","","IEEE","IEEE Conferences"
"Code Smells in Infrastructure as Code","J. Schwarz; A. Steffens; H. Lichter","RWTH Aachen Univ., Aachen, Germany; Res. Group Software Constr., RWTH Aachen Univ., Aachen, Germany; Res. Group Software Constr., RWTH Aachen Univ., Aachen, Germany","2018 11th International Conference on the Quality of Information and Communications Technology (QUATIC)","27 Dec 2018","2018","","","220","228","Ensuring high quality in software systems is a wellknown and big challenge. Infrastructure as Code (IaC) gathered increasing popularity in recent years, but there is only little research done in terms of quality of this code. Like with programming languages we find a high diversity of languages and technologies. Existing research introduced code smells from traditional software engineering to the popular provisioning tool Puppet, which uses IaC to specify the desired state of environments. Results show that code smells are an adequate method to assess the quality of Puppet code. In this paper we extend the existing research by first applying code the IaC smells to an other technology and investigate if similar results can be achieved. We applied the code smells in two case studies to open and closed source IaC code repositories. The presented results indicate that IaC smells are present in other tools and technologies. Furthermore the results show that IaC smells are agnostic to the applied technology and can be defined on a technology agnostic level. Second, we introduce new code smells from the field of software engineering, which were not covered yet, to the domain of IaC. The paper presents a catalogue of 17 code smells which were applied to Chef and whose implementation is available as Open Source.","","978-1-5386-5841-3","10.1109/QUATIC.2018.00040","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8590193","Infrastructure As Code;DevOps;static analysis;code smells;software quality;refactoring","Tools;Software systems;Best practices;Software engineering;Computer architecture;Measurement","public domain software;software maintenance;software quality","open source;software engineering;infrastructure as code;puppet code;code repositories;code smells;IaC smells","","9","","24","","27 Dec 2018","","","IEEE","IEEE Conferences"
"DevSecOps Approach in Software Development Case Study: Public Company Logistic Agency","M. Efendi; T. Raharjo; A. Suhanto","University of Indonesia,Faculity of Cumputer Science,Jakarta,Indonesia; University of Indonesia,Faculity of Cumputer Science,Jakarta,Indonesia; University of Indonesia,Faculity of Cumputer Science,Jakarta,Indonesia","2021 International Conference on Informatics, Multimedia, Cyber and Information System (ICIMCIS","9 Feb 2022","2021","","","96","101","Application development has progressed along with the rapid digital transformation. The stakeholders will focus more on cutting operational costs with optimal application quality and security. The DevSecOps approach provides solutions for reducing costs in the software life cycle, increasing software product quality and security. Public Company Logistic Agency (PCLA) is like other companies that must be adaptive to new technology. PCLA has an IT Division in charge of providing technology to support business. Application development by the IT Division has several problems, including application projects that mostly exceed the time, significant changes and additions during UAT, and applications that have much vulnerability. A transformation to the DevSecOps approach is needed to address these problems. In this paper, a Systematic Literature Review (SLR) was used to select journals that matched the study topic to obtain the character and transformation phases of DevSecOps in various case studies. A mixed-method approach aims to collect and analyze data companies in the software development lifecycle. For academicians, this study provides a new understanding of application development in a state-owned enterprise based on a sequential approach and their suitable solutions from the DevSecOps approach. For practitioners, the findings provide potential lessons learned and guide a state-owned enterprise to transform to the DevSecOps approach.","","978-1-6654-2733-3","10.1109/ICIMCIS53775.2021.9699316","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9699316","DevOps;DevSecOps;state-owned enterprise;software development;transformation","Systematics;Companies;Transforms;Software;Product design;Quality assessment;Security","","","","","","30","","9 Feb 2022","","","IEEE","IEEE Conferences"
"Within-Project Defect Prediction of Infrastructure-as-Code Using Product and Process Metrics","S. Dalla Palma; D. Di Nucci; F. Palomba; D. A. Tamburri","Jheronimus Academy of Data Science, Tilburg University, 7899 's-Hertogenbosch, Noord-Brabant, Netherlands, (e-mail: s.dallapalma@uvt.nl); Jheronimus Academy of Data Science, Tilburg University, 7899 's-Hertogenbosch, Noord-Brabant, Netherlands, (e-mail: d.dinucci@uvt.nl); Department of Computer Science, Universita degli Studi di Salerno, 19028 Fisciano, Campania, Italy, (e-mail: fpalomba@unisa.it); Computer Science, University of Technology Eindhoven, 3169 Eindhoven, Noord-Brabant, Netherlands, (e-mail: d.a.tamburri@tue.nl)","IEEE Transactions on Software Engineering","","2021","PP","99","1","1","Infrastructure-as-code (IaC) is the DevOps practice enabling management and provisioning of infrastructure through the definition of machine-readable files, hereinafter referred to as IaC scripts. Similarly to other source code artefacts, these files may contain defects that can preclude their correct functioning. In this paper, we aim at assessing the role of product and process metrics when predicting defective IaC scripts. We propose a fully integrated machine-learning framework for IaC Defect Prediction, that allows for repository crawling, metrics collection, model building, and evaluation. To evaluate it, we analyzed 104 projects and employed five machine-learning classifiers to compare their performance in flagging suspicious defective IaC scripts. The key results of the study report Random Forest as the best-performing model, with a median AUC-PR of 0.93 and MCC of 0.80. Furthermore, at least for the collected projects, product metrics identify defective IaC scripts more accurately than process metrics. Our findings put a baseline for investigating IaC Defect Prediction and the relationship between the product and process metrics, and IaC scripts' quality.","1939-3520","","10.1109/TSE.2021.3051492","Horizon 2020 Framework Programme(grant numbers:825040,825480); Schweizerischer Nationalfonds zur Frderung der Wissenschaftlichen Forschung(grant numbers:PZ00P2 186090); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9321740","Infrastructure-as-code;Defect Prediction;Empirical Software Engineering","Measurement;Software;Predictive models;Machine learning;Radon;Cloud computing;Task analysis","","","","","","","CCBY","13 Jan 2021","","","IEEE","IEEE Early Access Articles"
"Survey on Requirement-Driven Microservice System Evolution","Z. Wang; X. He; L. Liu; Z. Tu; H. Xu","Harbin Institute of Technology,School of Computer Science and Technology,Harbin,China; Harbin Institute of Technology,School of Computer Science and Technology,Harbin,China; Harbin Institute of Technology,School of Computer Science and Technology,Harbin,China; Harbin Institute of Technology,School of Computer Science and Technology,Harbin,China; Harbin Institute of Technology,School of Computer Science and Technology,Harbin,China","2020 IEEE International Conference on Services Computing (SCC)","11 Dec 2020","2020","","","186","193","In software engineering research, software evolution is always a hot focus. A dominating driving force of software evolution is requirement changes (RCs). In this paper, we make a comprehensive survey on start-of-the-art progress of requirement-driven software evolution, especially aiming at microservice-based software systems (MSS). MSS has become a dominating architecture style for modern software because of its advantage on agile DevOps and superior supports on business agility, thus it has been proved to outperform other architecture styles on fitting for requirement changes. A high-level conceptual framework for requirement-driven MSS evolution is demonstrated first, then related work are surveyed in terms of sources, representations and types of RCs, approaches for capturing RCs and mapping them to MSS evolution, and various techniques for MSS evolution in microservice, architecture, and infrastructure levels, respectively. Limitations of existing works are discussed and potential research topics are listed for reference. An integrated platform supporting full-lifecycle requirement-driven MSS evolution is introduced at last. We do hope this survey would help researchers strive for deep insights in this topic.","2474-2473","978-1-7281-8789-1","10.1109/SCC49832.2020.00032","Research and Development; National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284495","Software Requirements;Microservice Systems (MSS);Software Evolution;Requirement Changes (RCs);Survey","Conferences;Force;Fitting;Service computing;Computer architecture;Software systems;Software engineering","business data processing;service-oriented architecture;software architecture","RCs;full-lifecycle requirement-driven MSS evolution;requirement-driven microservice system evolution;software engineering research;dominating driving force;requirement changes;requirement-driven software evolution;microservice-based software systems;architecture style;high-level conceptual framework","","1","","61","","11 Dec 2020","","","IEEE","IEEE Conferences"
"Artifact: Virtual Environment for Evaluating the QoS of Distributed Mobile Applications","S. Laso; J. Berrocal; P. Fernández; A. Ruiz-Cortés; J. M. Murillo","University of Extremadura,Cáceres,Spain; University of Extremadura,Cáceres,Spain; I3US Institute, SCORE Lab. Universidad de Sevilla,Sevilla,Spain; I3US Institute, SCORE Lab. Universidad de Sevilla,Sevilla,Spain; University of Extremadura,Cáceres,Spain","2021 IEEE International Conference on Pervasive Computing and Communications Workshops and other Affiliated Events (PerCom Workshops)","24 May 2021","2021","","","440","441","This artifact is a guideline for the use of Perses. Perses is a framework for evaluating the Quality of Service (QoS) of distributed mobile applications. Perses allows developers to define and deploy customized environments with heterogeneous virtual mobile devices in order to simulate the deployment of these applications and analyze the monitored QoS attributes. Perses has been integrated into a DevOps methodology, automating its execution before its deployment in a real environment.","","978-1-6654-0424-2","10.1109/PerComWorkshops51409.2021.9431135","European Regional Development Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9431135","","Pervasive computing;Conferences;Virtual environments;Quality of service;Mobile handsets;Mobile applications;Monitoring","mobile computing;quality of service;virtualisation","heterogeneous virtual mobile devices;monitored QoS attributes;Perses;artifact;virtual environment;distributed mobile applications;customized environments","","","","5","","24 May 2021","","","IEEE","IEEE Conferences"
"The End of Agile as We Know It","P. Kruchten",University of British Columbia,"2019 IEEE/ACM International Conference on Software and System Processes (ICSSP)","26 Aug 2019","2019","","","104","104","Summary form only given. The complete presentation was not made available for publication as part of the conference proceedings. We have successfully placed the adjective 'agile' in front of about every important noun in our software development/IT world: agile design, agile testing, agile management, agile database, agile architecture, agile user-interaction ....""What is next?"" is the question I've been asked again and again. What is the future of software engineering? The next best thing? Is it DevOps, cloud-something, micro-services, AI? The adjective agile has lost some of its weight and novelty, only a few laggards are still asking ""what is it?"" It is time to reflect on the fundamental aspects of agility: what does it really means, what are the fundamental principles behind it, that made its successes. The agile movement has had some tremendous impact in the way we work, putting the human being and human interaction more central in these processes, by using extensively iterations, direct interactions, and feedback loops. But at the same time, some aspects of agile have become dogmatic, fossilized, and the agile movement has not been always very agile in its application to itself. These dogmatic aspects have slowed the expansion of its own principles to some of the more complex or much larger software development endeavours. Now, the increasing need for speed, the availability of opensource software repositories, the shifts in technology, such as the cloud, the emergence of software ecosystems are creating new needs in terms of process and project management, that can exploit the fundamental principles of agile, beyond the dogma of this or that method, this or that practice. As the amount of software in use is growing and will outgrow the capacity of our industry to maintain and evolve it, the industry faces a massive amount of technical debt, which we do not know well how to mitigate or repay. Agile has been very valuable, but once its lessons are fully integrated in the way we work we have to look beyond and stop repeating it like a mantra.","","978-1-7281-3393-5","10.1109/ICSSP.2019.00033","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812874","","","database management systems;project management;public domain software;software development management;software prototyping","agile design;agile testing;agile management;agile database;agile architecture;agile user-interaction;adjective agile;agile movement;live agility","","3","","0","","26 Aug 2019","","","IEEE","IEEE Conferences"
"Dimensions for Evaluating Cloud Resource Orchestration Frameworks","A. Khoshkbarforoushha; M. Wang; R. Ranjan; L. Wang; L. Alem; S. U. Khan; B. Benatallah",Australian National University and Commonwealth Scientific and Industrial Research Organisation; Australian National University; Newcastle University; Chinese Academy of Sciences; Commonwealth Scientific and Industrial Research Organisation; North Dakota State University; University of New South Wales,"Computer","11 Feb 2016","2016","49","2","24","33","Despite the proliferation of cloud resource orchestration frameworks (CROFs), DevOps managers and application developers still have no systematic tool for evaluating their features against desired criteria. The authors present generic technical dimensions for analyzing CROF capabilities and understanding prominent research to refine them.","1558-0814","","10.1109/MC.2016.56","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7404193","cloud computing;cloud services;cloud service management;cloud resource orchestration frameworks;CROFs;cloud","Cloud computing;Quality of service;Interoperability;Hardware;Servers","cloud computing;resource allocation;software engineering","cloud resource orchestration framework;CROF;systematic tool;generic technical dimension","","9","","12","","11 Feb 2016","","","IEEE","IEEE Magazines"
"Prometheus and AIOps for the orchestration of Cloud-native applications in Ananke","A. Di Stefano; A. Di Stefano; G. Morana; D. Zito","University of Catania,Dept. of Electrical, Electronics and Information Engineering,Catania,Italy; University of Catania,Dept. of Electrical, Electronics and Information Engineering,Catania,Italy; Aucta Cognitio Srl,Catania,Italy; Aucta Cognitio Srl,Catania,Italy","2021 IEEE 30th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE)","24 Jan 2022","2021","","","27","32","DevOps methodologies reduce the gap between Developers and Operations teams, enabling automation, integration, monitoring, and team collaboration by exploiting continuous integration and deployment and providing high-scale performance for the cloud software delivery life-cycle. AIOps seems to represent the future of IT automation by leveraging DevOps methodologies, Big Data, and AI-enabled strategies for the smart orchestration of Cloud-native applications. Based on the Ananke monitoring model, this paper investigates design issues and strategies required to enable integration between clusters and applications managed by Ananke, and their metrics stored in the Prometheus Monitoring system. Some classic algorithms for anomaly detection and forecasting of time series have been introduced in the proposed AIOps Prometheus Framework for the system analysis and orchestration of applications. Finally, we propose, as a case study, an auto-scaling strategy based on the prediction of traffic peeks for a web application using the Facebook Prophet model.","2641-8169","978-1-6654-2789-0","10.1109/WETICE53228.2021.00017","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9680514","Cloud computing;distributed computing;middleware;quality of service;monitoring;Platform as a service;AIOps","Measurement;Automation;Social networking (online);Time series analysis;Collaboration;Predictive models;Prediction algorithms","","","","","","39","","24 Jan 2022","","","IEEE","IEEE Conferences"
"Automated and Isolated Tests for Complex Middleware Products: The Case of BPEL Engines","S. Harrer; C. Röck; G. Wirtz","Distrib. Syst. Group, Univ. of Bamberg, Bamberg, Germany; Distrib. Syst. Group, Univ. of Bamberg, Bamberg, Germany; Distrib. Syst. Group, Univ. of Bamberg, Bamberg, Germany","2014 IEEE Seventh International Conference on Software Testing, Verification and Validation Workshops","5 Jun 2014","2014","","","390","398","Today, a plethora of enterprise middleware solutions are available, leading to the problem of choosing the right tool for a specific use case. Automated tests can support the selection of such software by determining decision relevant metrics, like e.g., throughput or the degree of standard conformance. To avoid side effects between tests, test isolation, i.e., to provide fresh instances of the software for each test execution, is essential. However, middleware suites are inherently complex, provide a large range of configuration options, have tedious or sometimes manual installation procedures, and long startup times. These idiosyncrasies aggravate the creation of fresh instances of such middleware suites, leading to slower turnaround times and increasing the cost for ensuring test isolation. We aim to overcome these issues with methods and tools from the area of virtualization and devops. In this work, we focus on BPEL engines which are common middleware components in Web Service based SOAs. We applied our proposed method to the BPEL Engine Test System (betsy), a conformance test suite and testing tool for BPEL engines. Results reveal that our method a) enables automatic creation of fresh instances of software without manual installation steps, b) reduces the time to create these fresh instance dramatically, and c) introduces only a neglectable performance overhead, therefore, reducing the overall costs of testing complex software.","","978-1-4799-5790-3","10.1109/ICSTW.2014.45","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6825693","test isolation;test automation;virtualization;BPEL engines","Engines;Middleware;Virtual machining;Standards;Benchmark testing","conformance testing;cost reduction;middleware;program testing;service-oriented architecture;Web Services Business Process Execution Language","automated test;isolated test;complex middleware product;software selection;test execution;middleware suites;middleware components;Web service based SOA;BPEL engine test system;conformance test suite;testing tool;cost reduction;complex software testing","","7","","20","","5 Jun 2014","","","IEEE","IEEE Conferences"
"Smart Contract Fuzzing for Enterprises: The Language Agnostic Way","S. Pani; H. V. Nallagonda; S. Prakash; V. R; R. K. Medicherla; R. M. A","TCS Research and Innovation,India; TCS Research and Innovation,India; TCS Research and Innovation,India; TCS Research and Innovation,India; TCS Research and Innovation,India; TCS Research and Innovation,India","2022 14th International Conference on COMmunication Systems & NETworkS (COMSNETS)","13 Jan 2022","2022","","","1","6","Blockchain based applications backed by smart contracts are becoming increasingly popular in various domains. Smart contracts are vulnerable to attacks due to bugs in them and such attacks resulted in huge monetary losses, disruption in operation and so on in the past. Fuzz testing is one of the prominent methods used for identifying bugs in blockchain smart contracts. Multiple fuzzers are used for fuzzing smart contracts written in different programming languages. However, maintenance of multiple fuzzers become prohibitively difficult in an enterprise DevOps setup, in terms of skills, time, and efforts required in patching and keeping them up to date. Hence, we propose a novel vulnerability detection framework which uses a single fuzzer to fuzz smart contracts written in different programming languages, using LLVM IR. In this paper, we validated the proposed framework by testing Hyperledger Fabric smart contracts using fuzzing tools AFL++ and Honggfuzz and presented the results.","2155-2509","978-1-6654-2104-1","10.1109/COMSNETS53615.2022.9668512","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9668512","Blockchain;Smart Contracts;Fuzzing;LLVM IR","Computer languages;Distributed ledger;Smart contracts;Computer bugs;Fuzzing;Maintenance engineering;Fabrics","blockchains;business data processing;contracts;program debugging;program testing","smart contract fuzzing;fuzz testing;blockchain smart contracts;multiple fuzzers;fuzz smart contracts;hyperledger fabric smart contracts;fuzzing tools AFL;programming languages;bugs","","","","27","IEEE","13 Jan 2022","","","IEEE","IEEE Conferences"
"A Detailed Study of Azure Platform & Its Cognitive Services","A. Verma; D. Malla; A. K. Choudhary; V. Arora","Department of Computer Science & Engineering, Manav Rachna International Institute of Research and Studies, Faridabad, India; Department of Computer Science & Engineering, Manav Rachna International Institute of Research and Studies, Faridabad, India; Department of Computer Science & Engineering, Manav Rachna International Institute of Research and Studies, Faridabad, India; Department of Computer Science & Engineering, Manav Rachna International Institute of Research and Studies, Faridabad, India","2019 International Conference on Machine Learning, Big Data, Cloud and Parallel Computing (COMITCon)","11 Oct 2019","2019","","","129","134","Windows Azure is the Microsoft's conveyed registering contraption. In this paper, we will learn about the prelude to the Azure framework. The scattered enlisting stage outfits clients with assets and associations for an affiliation. We would in like way talk about azure associations: Register, structuring, Stockpile, Fabric Controller Mesh, Cellphone, Holder, Index, Problem-Solving, A.I + M.L, I.O.T, Combination, Identity, Safety, DevOps, Migrate and The executive's aids. Microsoft's Azure is the standard circled figuring stage which draws in the client to send and work assets with speed of adaptability. Our basic work in this paper is to go up against recognizing confirmation and face attestation utilizing “Face API” where we will use our own one of a kind codes, for example, to perceive and see the powers of the all-inclusive community.","","978-1-7281-0211-5","10.1109/COMITCon.2019.8862178","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8862178","Windows Azure;Resources;Services;Deployment;Cloud Computing;Face Detection;Face API","Cloud computing;Face;Microsoft Windows;Servers;Programming;Image color analysis;Organizations","application program interfaces;cloud computing;cognitive systems;face recognition;security of data","face attestation;Windows Azure;Microsoft Azure;cognitive services;Face API;conveyed registering;cloud computing;face detection;face affirmation","","2","","20","","11 Oct 2019","","","IEEE","IEEE Conferences"
"Understanding Execution Environment of File-Manipulation Scripts by Extracting Pre-Conditions","R. Rodriguez; X. Wang","University of Texas,Department of Computer Science,San Antonio; University of Texas,Department of Computer Science,San Antonio","2021 IEEE/ACM 29th International Conference on Program Comprehension (ICPC)","28 Jun 2021","2021","","","406","410","File manipulation scripts are widely used in software projects to operate the file system at run time. Due to the emergence of DevOps practices in software industry, developers also use longer and more complicated file manipulations in their continuous integration and deployment scripts to automate software build, testing, and deployment in different environment configurations. A major challenge on understanding these scripts is that they make lots of implicit assumptions on the file system they are executed on. Such assumptions are rarely documented and often do not hold when a script is moved to another execution environment. In this paper, we propose a static-analysis-based technique that statically infer the directory tree pre-condition of the file system required to execute a file manipulation script. We evaluated our analysis on 58 docker files and the experiment shows that our technique is able to generate directory tree preconditions on real world scripts efficiently.","2643-7171","978-1-6654-1403-6","10.1109/ICPC52881.2021.00048","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9463039","File Manipulation Scripts;Execution Environment;Pre Conditions","Industries;File systems;Tools;Software;Testing","cloud computing;program diagnostics;program testing;software development management;software engineering;software prototyping;software quality;trees (mathematics)","longer file manipulations;more complicated file manipulations;file system;execution environment;directory tree pre-condition;file manipulation script;58 docker files;directory tree preconditions;world scripts;file-manipulation scripts","","","","30","","28 Jun 2021","","","IEEE","IEEE Conferences"
"Migration of Monoliths through the Synthesis of Microservices using Combinatorial Optimization","G. Filippone; M. Autili; F. Rossi; M. Tivoli",University of L'Aquila; University of L'Aquila; University of L'Aquila; University of L'Aquila,"2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)","14 Feb 2022","2021","","","144","147","Microservices are an emerging architectural style that is gaining a growing interest from companies and research. They are small, distributed, autonomous and loosely coupled services that are deployed independently and work together by communicating through lightweight protocols. Microservices are easy to update, scale, deploy, and reduce the time-to-market thanks to continuous delivery and DevOps. Several existing systems, in contrast, are difficult to maintain, evolve, and scale. For these reasons, microservices are the ideal candidates for the refactoring and modernization of long-lived monolithic systems. However, the migration process is a complex, time-consuming and error-prone task that needs the support of appropriate tools to assist software designers and programmers from the extraction of a proper architecture to the implementation of the novel microservices. This paper proposes a possible solution for the automated decomposition of a monolithic system into microservices, which exploits combinatorial optimization techniques to manage the decomposition. Our proposal covers the whole decomposition process, from the microservice architecture definition to the generation of the code of the microservices and their APIs, in order to assist developers and ensure by construction the correct behavior of the refactored system.","","978-1-6654-2603-9","10.1109/ISSREW53611.2021.00056","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9700354","microservices;system decomposition;microservices architecure;software synthesis","Protocols;Conferences;Microservice architectures;Computer architecture;Companies;Software;Software reliability","","","","","","24","","14 Feb 2022","","","IEEE","IEEE Conferences"
"NOVAAS: A Reference Implementation of Industrie4.0 Asset Administration Shell with best-of-breed practices from IT engineering","G. di Orio; P. Maló; J. Barata","UNINOVA,FCT-UNL,Departamento de Engenharia Electrotécnica,Caparica,Portugal,2829-516; UNINOVA,FCT-UNL,Departamento de Engenharia Electrotécnica,Caparica,Portugal,2829-516; UNINOVA,FCT-UNL,Departamento de Engenharia Electrotécnica,Caparica,Portugal,2829-516","IECON 2019 - 45th Annual Conference of the IEEE Industrial Electronics Society","9 Dec 2019","2019","1","","5505","5512","The fundamental role played by “new technologies” to enhance the manufacturing infrastructure, products and services is confirmed by the strategies, roadmaps and initiatives established by the developed countries such as EU-28, US, China and Japan. Putting the light on Europe, the key priorities for manufacturing are aligned with the Industry 4.0 strategy/program where the proliferation of cyber-physical systems (CPSs) and technologies like predictive data analytics, cloud and edge computing are creating the foundation for smart factory, i.e. the efficient and effective connection between products, processes and their related services. However, even if the smart factory vision is quite clear, in practice, it is still unclear how it can be implemented in a way to allow the transparent data exchange between all the layers of a manufacturing company, as well as, between the manufacturing company and the value chain partners. Within the German Industrie4.0 program, the Asset Administration Shell concept is defined to create a standardized digital representation of the asset while ensuring interoperability between all the applications within the manufacturing ecosystem. In this paper, an implementation of the asset administration shell is provided - also called NOVAAS - based on the deep usage of internet technologies, languages and software engineering techniques and methods (such as DevOps, microservices, continuous integration, etc.). The main goal is to contribute towards a generic and extensible reference implementation of the concept.","2577-1647","978-1-7281-4878-6","10.1109/IECON.2019.8927081","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8927081","Cyber-physical systems;Industry 4.0;RAMI 4.0;Asset administration shell;interoperability","Manufacturing;Industries;Companies;Interoperability;Sensors;Monitoring;Data mining","asset management;cyber-physical systems;electronic data interchange;intelligent manufacturing systems;Internet;manufacturing data processing;open systems;production engineering computing","NOVAAS;best-of-breed practices;cyber-physical systems;predictive data analytics;cloud computing;edge computing;transparent data exchange;manufacturing ecosystem;Internet technologies;software engineering;smart factory;German Industrie 4.0 program;Industrie 4.0 Asset Administration Shell concept;manufacturing company;digital asset representation;interoperability;IT engineering","","7","","39","","9 Dec 2019","","","IEEE","IEEE Conferences"
"RefBot: Intelligent Software Refactoring Bot","V. Alizadeh; M. A. Ouali; M. Kessentini; M. Chater",University of Michigan-Dearborn; University of Michigan; University of Michigan; University of Michigan,"2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)","9 Jan 2020","2019","","","823","834","The adoption of refactoring techniques for continuous integration received much less attention from the research community comparing to root-canal refactoring to fix the quality issues in the whole system. Several recent empirical studies show that developers, in practice, are applying refactoring incrementally when they are fixing bugs or adding new features. There is an urgent need for refactoring tools that can support continuous integration and some recent development processes such as DevOps that are based on rapid releases. Furthermore, several studies show that manual refactoring is expensive and existing automated refactoring tools are challenging to configure and integrate into the development pipelines with significant disruption cost. In this paper, we propose, for the first time, an intelligent software refactoring bot, called RefBot. Integrated into the version control system (e.g. GitHub), our bot continuously monitors the software repository, and it is triggered by any ""open"" or ""merge"" action on pull requests. The bot analyzes the files changed during that pull request to identify refactoring opportunities using a set of quality attributes then it will find the best sequence of refactorings to fix the quality issues if any. The bot recommends all these refactorings through an automatically generated pull-request. The developer can review the recommendations and their impacts in a detailed report and select the code changes that he wants to keep or ignore. After this review, the developer can close and approve the merge of the bot's pull request. We quantitatively and qualitatively evaluated the performance and effectiveness of RefBot by a survey conducted with experienced developers who used the bot on both open source and industry projects.","2643-1572","978-1-7281-2508-4","10.1109/ASE.2019.00081","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952287","Software bot;refactoring;Software quality","Software;Tools;Bot (Internet);Measurement;Manuals;Pipelines;Object oriented modeling","software maintenance;software quality;software tools","RefBot;intelligent software refactoring bot;continuous integration;root-canal refactoring;manual refactoring;refactoring techniques;automated refactoring tools;disruption cost;software repository;version control system;quality attributes;industry projects;open source","","7","","49","","9 Jan 2020","","","IEEE","IEEE Conferences"
"Towards the Use of the Readily Available Tests from the Release Pipeline as Performance Tests. Are We There Yet?","Z. Ding; J. Chen; W. Shang","Concordia University,Department of Computer Science and Software Engineering,Montreal,Canada; Concordia University,Department of Computer Science and Software Engineering,Montreal,Canada; Concordia University,Department of Computer Science and Software Engineering,Montreal,Canada","2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)","21 Dec 2020","2020","","","1435","1446","Performance is one of the important aspects of software quality. Performance issues exist widely in software systems, and the process of fixing the performance issues is an essential step in the release cycle of software systems. Although performance testing is widely adopted in practice, it is still expensive and time-consuming. In particular, the performance testing is usually conducted after the system is built in a dedicated testing environment. The challenges of performance testing make it difficult to fit into the common DevOps process in software development. On the other hand, there exist a large number of tests readily available, that are executed regularly within the release pipeline during software development. In this paper, we perform an exploratory study to determine whether such readily available tests are capable of serving as performance tests. In particular, we would like to see whether the performance of these tests can demonstrate performance improvements obtained from fixing real-life performance issues. We collect 127 performance issues from Hadoop and Cassandra, and evaluate the performance of the readily available tests from the commits before and after the performance issue fixes. We find that most of the improvements from the fixes to performance issues can be demonstrated using the readily available tests in the release pipeline. However, only a very small portion of the tests can be used for demonstrating the improvements. By manually examining the tests, we identify eight reasons that a test cannot demonstrate performance improvements even though it covers the changed source code of the issue fix. Finally, we build random forest classifiers determining the important metrics influencing the readily available tests (not) being able to demonstrate performance improvements from issue fixes. We find that the test code itself and the source code covered by the test are important factors, while the factors related to the code changes in the performance issues fixes have a low importance. Practitioners may focus on designing and improving the tests, instead of fine-tuning tests for different performance issues fixes. Our findings can be used as a guideline for practitioners to reduce the amount of effort spent on leveraging and designing tests that run in the release pipeline for performance assurance activities.","1558-1225","978-1-4503-7121-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9284085","Performance testing;Performance issues;Software performance","Measurement;Pipelines;Software quality;Software systems;Testing;Guidelines;Software engineering","pipelines;program testing;software quality;source code (software)","software systems;performance testing;dedicated testing environment;performance issue fixes;test code;performance assurance activities;performance issues fixes;software quality","","","","55","","21 Dec 2020","","","IEEE","IEEE Conferences"
"Control Flow Versus Data Flow in Distributed Systems Integration: Revival of Flow-Based Programming for the Industrial Internet of Things","W. Hasselbring; M. Wojcieszak; S. Dustdar","Kiel University, Kiel, Germany; wobe-systems GmbH, Kiel, Germany; TU Wien, Vienna, Austria","IEEE Internet Computing","16 Aug 2021","2021","25","4","5","12","When we consider the application layer1 of networked infrastructures, data and control flow are important concerns in distributed systems integration. Modularity is a fundamental principle in software design,2 in particular for distributed system architectures. Modularity emphasizes high cohesion of individual modules and low coupling between modules. Microservices are a recent modularization approach with the specific requirements of independent deployability and, in particular, decentralized data management.3 Cohesiveness of microservices goes hand-in-hand with loose coupling, making the development, deployment, and evolution of microservice architectures flexible and scalable.4 However, in our experience with microservice architectures, interactions and flows among microservices are usually more complex than in traditional, monolithic enterprise systems, since services tend to be smaller and only have one responsibility, causing collaboration needs. We suggest that for loose coupling among microservices, explicit control-flow modeling and execution with central workflow engines should be avoided on the application integration level. On the level of integrating microservices, data-flow modeling should be dominant. Control-flow should be secondary and preferably delegated to the microservices. We discuss coupling in distributed systems integration and reflect the history of business process modeling with respect to data and control flow. To illustrate our recommendations, we present some results for flow-based programming in our Industrial DevOps project Titan, where we employ flow-based programming for the Industrial Internet of Things.","1941-0131","","10.1109/MIC.2021.3053712","Bundesministerium für Bildung und Forschung(grant numbers:01IS17084A/B); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9514390","","Couplings;Temperature sensors;Computational modeling;Distributed databases;Computer architecture;System integration;Data models;Distributed processing","business data processing;groupware;Internet of Things;software architecture;software prototyping;workflow management software","control flow;data flow;distributed systems integration;flow-based programming;distributed system architectures;modularization approach;decentralized data management;loose coupling;microservice architectures;monolithic enterprise systems;explicit control-flow;application integration level;data-flow modeling","","","","19","IEEE","16 Aug 2021","","","IEEE","IEEE Magazines"
"Rider Optimization based Optimized Deep-CNN towards Attack Detection in IoT","S. K. Sarma","Working for UST global,Technopark,Trivandrum","2020 4th International Conference on Intelligent Computing and Control Systems (ICICCS)","19 Jun 2020","2020","","","163","169","More researchers have made efforts on introducing various models for IoT security frameworks, however, no single IoT framework could assure the optimal security in opposition to varied kinds of attacks. Thereby, this paper intends to propose a new attack detection system by interlinking the Development and Operations (DevOps) concept. The proposed attack detection system involves two stages: Proposed Feature Extraction and Classification. In the first stage, the concatenation of statistical and higher-order statistical features is extracted. These extracted features are then subjected to Deep Convolutional Neural Network (CNN) based classification to identify the attacks in the network. To improve the classification accuracy, the convolution layers in DCNN are optimally tuned using Rider Optimization Algorithm (ROA). Finally, analysis is carried out for validating the betterment of the adopted scheme.","","978-1-7281-4876-2","10.1109/ICICCS48265.2020.9121042","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9121042","IoT;Attack Detection;Proposed Feature Extraction;Classification;ROA model","Analytical models;Convolution;Computational modeling;Feature extraction;Control systems;Classification algorithms;Security","convolutional neural nets;feature extraction;Internet of Things;optimisation;security of data","optimized Deep-CNN;IoT security frameworks;optimal security;attack detection system;higher-order statistical features;deep convolutional neural network based classification;Deep Convolutional Neural Network based classification","","","","21","","19 Jun 2020","","","IEEE","IEEE Conferences"
"Metrics to Meet Security & Privacy Requirements with Agile Software Development Methods in a Regulated Environment","T. J. Wagner; T. C. Ford","Air Force Institute of Technology 2950 Hobson Way, WPAFB,Department of Systems Engineering & Management,OH,USA,45433; Air Force Institute of Technology 2950 Hobson Way, WPAFB,Department of Systems Engineering & Management,OH,USA,45433","2020 International Conference on Computing, Networking and Communications (ICNC)","30 Mar 2020","2020","","","17","23","This work examines metrics that can be used to measure the ability of agile software development methods to meet security and privacy requirements of communications applications. Many implementations of communication protocols, including those in vehicular networks, occur within regulated environments where agile development methods are traditionally discouraged. We propose a framework and metrics to measure adherence to security, quality and software effectiveness regulations if developers desire the cost and schedule benefits of agile methods. After providing an overview of specific challenges that a regulated environment imposes on communications software development, we proceed to examine the 12 agile principles and how they relate to a regulatory environment. From this review we identify two metrics to measure performance of three key regulatory attributes of software for communications applications, and then recommend an approach of either tools, agile methods or DevOps that is best positioned to satisfy its regulated environment attributes. By considering the recommendations in this paper, managers of software-dominant communications programs in a regulated environment can gain insight into leveraging the benefits of agile methods.","2325-2626","978-1-7281-4905-9","10.1109/ICNC47757.2020.9049681","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9049681","Communication system security;Iterative methods;Real-time and embedded systems;Data privacy;Design tools and techniques","Software;Security;Tools;US Department of Defense;Agile software development;Software measurement","data privacy;program testing;software development management;software prototyping","agile software development methods;communication protocols;agile development methods;software effectiveness regulations;communications software development;agile principles;regulatory environment;software-dominant communications programs","","2","","44","","30 Mar 2020","","","IEEE","IEEE Conferences"
"Virtualizing and Deploying a Solution to MP-TCP’s Shared Bottlenecks as a Network Function","F. Becerra; D. Mejía; I. Bernal","Departamento de Electrónica, Telecomunicaciones y Redes de Información, Escuela Politécnica Nacional, Quito, Ecuador; Departamento de Electrónica, Telecomunicaciones y Redes de Información, Escuela Politécnica Nacional, Quito, Ecuador; Departamento de Electrónica, Telecomunicaciones y Redes de Información, Escuela Politécnica Nacional, Quito, Ecuador","2018 IEEE Third Ecuador Technical Chapters Meeting (ETCM)","20 Dec 2018","2018","","","1","6","Network functions virtualization (NFV) offers an alternative way to design, deploy, and manage networking services. This paper presents the implementation and deployment of a virtualized network function to solve MP-TCP' shared bottlenecks problem. MP-TCP (MultiPath-TCP) is a protocol that allows hosts that have several interfaces to send data through multiple paths in the network. An MP-TCP connection is divided into several TCP connections called subflows that may follow different paths, in this way effective connection rates and resilience can be increased. However, in a scenario where MP-TCP is used with hosts having a single network interface, created subflows follow the same path even if several are available; this generates the problem known as a shared bottleneck. A solution to this problem is implemented as a SDN (Software Defined Networking) module that is integrated into OpenDayLight's framework which is used as the SDN controller. This solution is then deployed as a NFV over a cloud infrastructure implemented with OpenStack over a high-end physical server. The deployment of the NFV is automated to a certain degree using Ansible, a DevOps tool. Finally, results of the tests of the SDN solution to MP-TCP's shared bottlenecks and its operation as a NFV using a completely virtualized network are reported.","","978-1-5386-6657-9","10.1109/ETCM.2018.8580278","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8580278","SDN;MP-TCP;NFV;cloud;shared bottlenecks","Network interfaces;Cloud computing;Servers;Network function virtualization;Protocols;Software defined networking","cloud computing;network interfaces;software defined networking;transport protocols;virtualisation","software defined networking;completely virtualized network;SDN module;single network interface;way effective connection rates;TCP connections;MP-TCP connection;MultiPath-TCP;MP-TCP shared bottlenecks problem;virtualized network function;networking services;network functions virtualization","","","","15","","20 Dec 2018","","","IEEE","IEEE Conferences"
"Characterizing Developer Behavior in Cloud Based IDEs","Y. Wang","Dept. of Software Eng., Rochester Inst. of Technol., Rochester, NY, USA","2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)","11 Dec 2017","2017","","","48","57","Background: Cloud based integrated development environments (IDEs) are rapidly gaining popularity for its native support and potential to accelerate DevOps. However, there is little research of how developers behave when interacting with these environments. Aims: To develop empirical knowledge about how developers behave when interacting with cloud based IDEs to deal with programming tasks at various difficulty levels. Method: We conducted a user study using a cloud based IDE, JazzHub. We collected and coded session trace data, self-reported effort and frustration levels, and screen recordings. Results: We built a Markov activity transition model that describes the transitions among common development activities such as coding, debugging, and searching for information. It also captures extended interactions with remote resources. We correlated activity transition with different code growth trajectories. Conclusion: The findings are an early step toward realizing the potential for enhanced interactions in cloud based IDEs. Our study provides empirical evidence that may inspire the future evolution of cloud based IDE designs and features.","","978-1-5090-4039-1","10.1109/ESEM.2017.27","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8170084","cloud based IDE;developer behavior;code growth trajectory;activity transition","Programming;Cloud computing;Tools;Trajectory","cloud computing;Markov processes;program debugging;programming environments","empirical knowledge;Markov activity transition model;developer behavior characterization;cloud based IDEs;cloud based integrated development environments;code growth trajectories","","5","","31","","11 Dec 2017","","","IEEE","IEEE Conferences"
"API Specifications and SDKs: The New Standards DevOps Dance","D. Pitt; B. Khargharia",NA; NA,"IEEE Communications Standards Magazine","18 Jul 2018","2018","2","2","5","5","MEF which has recently begun releasing LSO (Lifecycle Service Orchestration) application programming interfaces (APIs) in the context of its MEF 3.0 framework. This framework is designed to enable orchestration of dynamic communication services across a global ecosystem of automated networks. The way in which the LSO APIs are described and released represents a radical transformation of the standards process to reflect the new reality of telecommunications: that many of the important agreements are implemented purely in software.","2471-2833","","10.1109/MCOMSTD.2018.8412453","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8412453","","Ethernet;Application programming interfaces;Software development;Open source software;Data models","","","","","","0","","18 Jul 2018","","","IEEE","IEEE Magazines"
"The Next Level of Test Automation (NEXTA 2020)","S. Demeyer; A. Causevic; K. Wiklund; P. Potena","Universiteit Antwerpen Flanders Make vzw,Belgium; Mälardalan University,Sweden; Ericsson AB,Sweden; RISE Research Institutes of Sweden AB,Sweden","2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)","4 Aug 2020","2020","","","xxii","xxii","Test automation has been an acknowledged software engineering best practice for years. However, the topic involves more than the repeated execution of test cases that often comes first to mind. Simply running test cases using a unit testing framework is no longer enough for test automation to keep up with the ever-shorter release cycles driven by continuous deployment and technological innovations such as microservices and DevOps pipelines. Now test automation needs to rise to the next level by going beyond mere test execution.","","978-1-7281-1075-2","10.1109/ICSTW50294.2020.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9155792","","","","","","","","","","4 Aug 2020","","","IEEE","IEEE Conferences"
"Content","",,"2017 6th International Conference on Software Process Improvement (CIMPS)","11 Dec 2017","2017","","","1","3","The following topics are dealt with: software engineering; regression testing; virtual rube goldberg machine; software process improvement; formal method; monolithic software; microservice architecture; lifecycle coverage analysis; multi-agent system methodology; DevOps approach; model driven method; data migration; data warehousing; Big Data visualization; massive data upload model; search engines; e-commerce; semantic Web application ; business data integration; multimodal user interface; commercial software free software and IDPS security.","","978-1-5386-3230-7","10.1109/CIMPS.2017.8169961","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8169961","","","Big Data;data integration;data visualisation;data warehouses;electronic commerce;multi-agent systems;program testing;public domain software;search engines;security of data;semantic Web;software process improvement;virtual machines","software engineering;regression testing;virtual rube goldberg machine;software process improvement;formal method;;monolithic software;microservice architecture;lifecycle coverage analysis;multi-agent system methodology;DevOps approach;model driven method;data migration;;data warehousing;Big Data visualization;massive data upload model;search engines;e-commerce;semantic Web application;business data integration;multimodal user interface;commercial software;free software;IDPS security","","","","","","11 Dec 2017","","","IEEE","IEEE Conferences"
"[Title page i]","",,"2016 IEEE/ACM International Workshop on Continuous Software Evolution and Delivery (CSED)","9 Jan 2017","2016","","","i","i","The following topics are dealt with: safety analysis; verification method; STPA; agile software development; context-aware user feedback; continuous software evolution; trace-based test selection; history-based dynamic test case prioritization; regression testing; technology enabled continuous software development; software security; enterprise software service emulation and DevOps.","","978-1-4503-4157-8","10.1109/CSED.2016.001","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7809420","","","program testing;program verification;software engineering;software prototyping","DevOps;enterprise software service emulation;software security;technology enabled continuous software development;regression testing;history-based dynamic test case prioritization;trace-based test selection;continuous software evolution;context-aware user feedback;agile software development;STPA;verification method;safety analysis","","","","","","9 Jan 2017","","","IEEE","IEEE Conferences"
